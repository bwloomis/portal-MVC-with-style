//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assmnts.UasServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleType", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class RoleType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConfigID {
            get {
                return this.ConfigIDField;
            }
            set {
                if ((this.ConfigIDField.Equals(value) != true)) {
                    this.ConfigIDField = value;
                    this.RaisePropertyChanged("ConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleTypeID {
            get {
                return this.RoleTypeIDField;
            }
            set {
                if ((this.RoleTypeIDField.Equals(value) != true)) {
                    this.RoleTypeIDField = value;
                    this.RaisePropertyChanged("RoleTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleTypeName {
            get {
                return this.RoleTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleTypeNameField, value) != true)) {
                    this.RoleTypeNameField = value;
                    this.RaisePropertyChanged("RoleTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class UserProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OptionSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfileConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserProfileIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OptionSet {
            get {
                return this.OptionSetField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionSetField, value) != true)) {
                    this.OptionSetField = value;
                    this.RaisePropertyChanged("OptionSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProfileConfigID {
            get {
                return this.ProfileConfigIDField;
            }
            set {
                if ((this.ProfileConfigIDField.Equals(value) != true)) {
                    this.ProfileConfigIDField = value;
                    this.RaisePropertyChanged("ProfileConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserProfileID {
            get {
                return this.UserProfileIDField;
            }
            set {
                if ((this.UserProfileIDField.Equals(value) != true)) {
                    this.UserProfileIDField = value;
                    this.RaisePropertyChanged("UserProfileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecretQuestion", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class SecretQuestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ConfigQuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecretQuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ConfigQuestionID {
            get {
                return this.ConfigQuestionIDField;
            }
            set {
                if ((this.ConfigQuestionIDField.Equals(value) != true)) {
                    this.ConfigQuestionIDField = value;
                    this.RaisePropertyChanged("ConfigQuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecretQuestionID {
            get {
                return this.SecretQuestionIDField;
            }
            set {
                if ((this.SecretQuestionIDField.Equals(value) != true)) {
                    this.SecretQuestionIDField = value;
                    this.RaisePropertyChanged("SecretQuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecretQuestionAnswer", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class SecretQuestionAnswer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecretQuestionAnswerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecretQuestionAnswerID {
            get {
                return this.SecretQuestionAnswerIDField;
            }
            set {
                if ((this.SecretQuestionAnswerIDField.Equals(value) != true)) {
                    this.SecretQuestionAnswerIDField = value;
                    this.RaisePropertyChanged("SecretQuestionAnswerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Language", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class Language : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LangIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LangId {
            get {
                return this.LangIdField;
            }
            set {
                if ((this.LangIdField.Equals(value) != true)) {
                    this.LangIdField = value;
                    this.RaisePropertyChanged("LangId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageRegion {
            get {
                return this.LanguageRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageRegionField, value) != true)) {
                    this.LanguageRegionField = value;
                    this.RaisePropertyChanged("LanguageRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientMoveParameters", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.Business.ServiceImplementation.CAA" +
        "DAP")]
    [System.SerializableAttribute()]
    public partial class ClientMoveParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Assmnts.UasServiceRef.ClientMoveParameters.Client clientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string newEnrollmentSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Assmnts.UasServiceRef.ClientMoveParameters.Group newGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string oldEnrollmentSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Assmnts.UasServiceRef.ClientMoveParameters.User userField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Assmnts.UasServiceRef.ClientMoveParameters.Client client {
            get {
                return this.clientField;
            }
            set {
                if ((object.ReferenceEquals(this.clientField, value) != true)) {
                    this.clientField = value;
                    this.RaisePropertyChanged("client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string newEnrollmentSite {
            get {
                return this.newEnrollmentSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.newEnrollmentSiteField, value) != true)) {
                    this.newEnrollmentSiteField = value;
                    this.RaisePropertyChanged("newEnrollmentSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Assmnts.UasServiceRef.ClientMoveParameters.Group newGroup {
            get {
                return this.newGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.newGroupField, value) != true)) {
                    this.newGroupField = value;
                    this.RaisePropertyChanged("newGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oldEnrollmentSite {
            get {
                return this.oldEnrollmentSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.oldEnrollmentSiteField, value) != true)) {
                    this.oldEnrollmentSiteField = value;
                    this.RaisePropertyChanged("oldEnrollmentSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Assmnts.UasServiceRef.ClientMoveParameters.User user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ClientMoveParameters.Client", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.Business.ServiceImplementation.CAA" +
            "DAP")]
        [System.SerializableAttribute()]
        public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string clientIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string displayInfoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string displayNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string firstNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string lastNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int userIdField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string clientId {
                get {
                    return this.clientIdField;
                }
                set {
                    if ((object.ReferenceEquals(this.clientIdField, value) != true)) {
                        this.clientIdField = value;
                        this.RaisePropertyChanged("clientId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string displayInfo {
                get {
                    return this.displayInfoField;
                }
                set {
                    if ((object.ReferenceEquals(this.displayInfoField, value) != true)) {
                        this.displayInfoField = value;
                        this.RaisePropertyChanged("displayInfo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string displayName {
                get {
                    return this.displayNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.displayNameField, value) != true)) {
                        this.displayNameField = value;
                        this.RaisePropertyChanged("displayName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string firstName {
                get {
                    return this.firstNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                        this.firstNameField = value;
                        this.RaisePropertyChanged("firstName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string lastName {
                get {
                    return this.lastNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                        this.lastNameField = value;
                        this.RaisePropertyChanged("lastName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int userId {
                get {
                    return this.userIdField;
                }
                set {
                    if ((this.userIdField.Equals(value) != true)) {
                        this.userIdField = value;
                        this.RaisePropertyChanged("userId");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ClientMoveParameters.Group", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.Business.ServiceImplementation.CAA" +
            "DAP")]
        [System.SerializableAttribute()]
        public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string groupDescriptionField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int groupIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string groupNameField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string groupDescription {
                get {
                    return this.groupDescriptionField;
                }
                set {
                    if ((object.ReferenceEquals(this.groupDescriptionField, value) != true)) {
                        this.groupDescriptionField = value;
                        this.RaisePropertyChanged("groupDescription");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int groupId {
                get {
                    return this.groupIdField;
                }
                set {
                    if ((this.groupIdField.Equals(value) != true)) {
                        this.groupIdField = value;
                        this.RaisePropertyChanged("groupId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string groupName {
                get {
                    return this.groupNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.groupNameField, value) != true)) {
                        this.groupNameField = value;
                        this.RaisePropertyChanged("groupName");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ClientMoveParameters.User", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.Business.ServiceImplementation.CAA" +
            "DAP")]
        [System.SerializableAttribute()]
        public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int applicationIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int enterpriseIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int userIdField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int applicationId {
                get {
                    return this.applicationIdField;
                }
                set {
                    if ((this.applicationIdField.Equals(value) != true)) {
                        this.applicationIdField = value;
                        this.RaisePropertyChanged("applicationId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int enterpriseId {
                get {
                    return this.enterpriseIdField;
                }
                set {
                    if ((this.enterpriseIdField.Equals(value) != true)) {
                        this.enterpriseIdField = value;
                        this.RaisePropertyChanged("enterpriseId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int userId {
                get {
                    return this.userIdField;
                }
                set {
                    if ((this.userIdField.Equals(value) != true)) {
                        this.userIdField = value;
                        this.RaisePropertyChanged("userId");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDisplayShort", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class UserDisplayShort : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainUserID {
            get {
                return this.DomainUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainUserIDField, value) != true)) {
                    this.DomainUserIDField = value;
                    this.RaisePropertyChanged("DomainUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseID {
            get {
                return this.EnterpriseIDField;
            }
            set {
                if ((this.EnterpriseIDField.Equals(value) != true)) {
                    this.EnterpriseIDField = value;
                    this.RaisePropertyChanged("EnterpriseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIDField, value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusText {
            get {
                return this.StatusTextField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTextField, value) != true)) {
                    this.StatusTextField = value;
                    this.RaisePropertyChanged("StatusText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserKey {
            get {
                return this.UserKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.UserKeyField, value) != true)) {
                    this.UserKeyField = value;
                    this.RaisePropertyChanged("UserKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionGroup", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class PermissionGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionGroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionGroupCode {
            get {
                return this.PermissionGroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionGroupCodeField, value) != true)) {
                    this.PermissionGroupCodeField = value;
                    this.RaisePropertyChanged("PermissionGroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermissionGroupID {
            get {
                return this.PermissionGroupIDField;
            }
            set {
                if ((this.PermissionGroupIDField.Equals(value) != true)) {
                    this.PermissionGroupIDField = value;
                    this.RaisePropertyChanged("PermissionGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionGroupName {
            get {
                return this.PermissionGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionGroupNameField, value) != true)) {
                    this.PermissionGroupNameField = value;
                    this.RaisePropertyChanged("PermissionGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionCode", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class PermissionCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnumCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short baseTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnumCode {
            get {
                return this.EnumCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EnumCodeField, value) != true)) {
                    this.EnumCodeField = value;
                    this.RaisePropertyChanged("EnumCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Idx {
            get {
                return this.IdxField;
            }
            set {
                if ((this.IdxField.Equals(value) != true)) {
                    this.IdxField = value;
                    this.RaisePropertyChanged("Idx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermissionCodeID {
            get {
                return this.PermissionCodeIDField;
            }
            set {
                if ((this.PermissionCodeIDField.Equals(value) != true)) {
                    this.PermissionCodeIDField = value;
                    this.RaisePropertyChanged("PermissionCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermissionGroupID {
            get {
                return this.PermissionGroupIDField;
            }
            set {
                if ((this.PermissionGroupIDField.Equals(value) != true)) {
                    this.PermissionGroupIDField = value;
                    this.RaisePropertyChanged("PermissionGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short baseTypeId {
            get {
                return this.baseTypeIdField;
            }
            set {
                if ((this.baseTypeIdField.Equals(value) != true)) {
                    this.baseTypeIdField = value;
                    this.RaisePropertyChanged("baseTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccountLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChangePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReservedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoginAttemptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ManagerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SecureDomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SentLockoutEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int langIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccountLocked {
            get {
                return this.AccountLockedField;
            }
            set {
                if ((this.AccountLockedField.Equals(value) != true)) {
                    this.AccountLockedField = value;
                    this.RaisePropertyChanged("AccountLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChangePassword {
            get {
                return this.ChangePasswordField;
            }
            set {
                if ((this.ChangePasswordField.Equals(value) != true)) {
                    this.ChangePasswordField = value;
                    this.RaisePropertyChanged("ChangePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainUserID {
            get {
                return this.DomainUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainUserIDField, value) != true)) {
                    this.DomainUserIDField = value;
                    this.RaisePropertyChanged("DomainUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseID {
            get {
                return this.EnterpriseIDField;
            }
            set {
                if ((this.EnterpriseIDField.Equals(value) != true)) {
                    this.EnterpriseIDField = value;
                    this.RaisePropertyChanged("EnterpriseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReserved {
            get {
                return this.IsReservedField;
            }
            set {
                if ((this.IsReservedField.Equals(value) != true)) {
                    this.IsReservedField = value;
                    this.RaisePropertyChanged("IsReserved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedReason {
            get {
                return this.LockedReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedReasonField, value) != true)) {
                    this.LockedReasonField = value;
                    this.RaisePropertyChanged("LockedReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoginAttempts {
            get {
                return this.LoginAttemptsField;
            }
            set {
                if ((this.LoginAttemptsField.Equals(value) != true)) {
                    this.LoginAttemptsField = value;
                    this.RaisePropertyChanged("LoginAttempts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIDField, value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ManagerID {
            get {
                return this.ManagerIDField;
            }
            set {
                if ((this.ManagerIDField.Equals(value) != true)) {
                    this.ManagerIDField = value;
                    this.RaisePropertyChanged("ManagerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SSN {
            get {
                return this.SSNField;
            }
            set {
                if ((object.ReferenceEquals(this.SSNField, value) != true)) {
                    this.SSNField = value;
                    this.RaisePropertyChanged("SSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SecureDomain {
            get {
                return this.SecureDomainField;
            }
            set {
                if ((this.SecureDomainField.Equals(value) != true)) {
                    this.SecureDomainField = value;
                    this.RaisePropertyChanged("SecureDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SentLockoutEmail {
            get {
                return this.SentLockoutEmailField;
            }
            set {
                if ((this.SentLockoutEmailField.Equals(value) != true)) {
                    this.SentLockoutEmailField = value;
                    this.RaisePropertyChanged("SentLockoutEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suffix {
            get {
                return this.SuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SuffixField, value) != true)) {
                    this.SuffixField = value;
                    this.RaisePropertyChanged("Suffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TempPassword {
            get {
                return this.TempPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.TempPasswordField, value) != true)) {
                    this.TempPasswordField = value;
                    this.RaisePropertyChanged("TempPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserKey {
            get {
                return this.UserKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.UserKeyField, value) != true)) {
                    this.UserKeyField = value;
                    this.RaisePropertyChanged("UserKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int langId {
            get {
                return this.langIdField;
            }
            set {
                if ((this.langIdField.Equals(value) != true)) {
                    this.langIdField = value;
                    this.RaisePropertyChanged("langId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogAccess", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class LogAccess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LogAccActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LogAccDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LogAccIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LogAccLogUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogAccTableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LogAccUserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LogAccAction {
            get {
                return this.LogAccActionField;
            }
            set {
                if ((this.LogAccActionField.Equals(value) != true)) {
                    this.LogAccActionField = value;
                    this.RaisePropertyChanged("LogAccAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogAccDate {
            get {
                return this.LogAccDateField;
            }
            set {
                if ((this.LogAccDateField.Equals(value) != true)) {
                    this.LogAccDateField = value;
                    this.RaisePropertyChanged("LogAccDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LogAccId {
            get {
                return this.LogAccIdField;
            }
            set {
                if ((this.LogAccIdField.Equals(value) != true)) {
                    this.LogAccIdField = value;
                    this.RaisePropertyChanged("LogAccId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LogAccLogUserId {
            get {
                return this.LogAccLogUserIdField;
            }
            set {
                if ((this.LogAccLogUserIdField.Equals(value) != true)) {
                    this.LogAccLogUserIdField = value;
                    this.RaisePropertyChanged("LogAccLogUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogAccTable {
            get {
                return this.LogAccTableField;
            }
            set {
                if ((object.ReferenceEquals(this.LogAccTableField, value) != true)) {
                    this.LogAccTableField = value;
                    this.RaisePropertyChanged("LogAccTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LogAccUserId {
            get {
                return this.LogAccUserIdField;
            }
            set {
                if ((this.LogAccUserIdField.Equals(value) != true)) {
                    this.LogAccUserIdField = value;
                    this.RaisePropertyChanged("LogAccUserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDisplay", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class UserDisplay : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccountLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayAddress> AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChangePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayEmail> EmailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupUserRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReservedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastActivityDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoginActivityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoginAttemptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char LoginStatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LogoutDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ManagerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayPhone> PhonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProfileConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserProfileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int langIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccountLocked {
            get {
                return this.AccountLockedField;
            }
            set {
                if ((this.AccountLockedField.Equals(value) != true)) {
                    this.AccountLockedField = value;
                    this.RaisePropertyChanged("AccountLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActiveData {
            get {
                return this.ActiveDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveDataField, value) != true)) {
                    this.ActiveDataField = value;
                    this.RaisePropertyChanged("ActiveData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayAddress> Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChangePassword {
            get {
                return this.ChangePasswordField;
            }
            set {
                if ((this.ChangePasswordField.Equals(value) != true)) {
                    this.ChangePasswordField = value;
                    this.RaisePropertyChanged("ChangePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainUserID {
            get {
                return this.DomainUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainUserIDField, value) != true)) {
                    this.DomainUserIDField = value;
                    this.RaisePropertyChanged("DomainUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayEmail> Emails {
            get {
                return this.EmailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailsField, value) != true)) {
                    this.EmailsField = value;
                    this.RaisePropertyChanged("Emails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseID {
            get {
                return this.EnterpriseIDField;
            }
            set {
                if ((this.EnterpriseIDField.Equals(value) != true)) {
                    this.EnterpriseIDField = value;
                    this.RaisePropertyChanged("EnterpriseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupUserRoleID {
            get {
                return this.GroupUserRoleIDField;
            }
            set {
                if ((this.GroupUserRoleIDField.Equals(value) != true)) {
                    this.GroupUserRoleIDField = value;
                    this.RaisePropertyChanged("GroupUserRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReserved {
            get {
                return this.IsReservedField;
            }
            set {
                if ((this.IsReservedField.Equals(value) != true)) {
                    this.IsReservedField = value;
                    this.RaisePropertyChanged("IsReserved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastActivity {
            get {
                return this.LastActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.LastActivityField, value) != true)) {
                    this.LastActivityField = value;
                    this.RaisePropertyChanged("LastActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastActivityDate {
            get {
                return this.LastActivityDateField;
            }
            set {
                if ((this.LastActivityDateField.Equals(value) != true)) {
                    this.LastActivityDateField = value;
                    this.RaisePropertyChanged("LastActivityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedReason {
            get {
                return this.LockedReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedReasonField, value) != true)) {
                    this.LockedReasonField = value;
                    this.RaisePropertyChanged("LockedReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoginActivityID {
            get {
                return this.LoginActivityIDField;
            }
            set {
                if ((this.LoginActivityIDField.Equals(value) != true)) {
                    this.LoginActivityIDField = value;
                    this.RaisePropertyChanged("LoginActivityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoginAttempts {
            get {
                return this.LoginAttemptsField;
            }
            set {
                if ((this.LoginAttemptsField.Equals(value) != true)) {
                    this.LoginAttemptsField = value;
                    this.RaisePropertyChanged("LoginAttempts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LoginDate {
            get {
                return this.LoginDateField;
            }
            set {
                if ((this.LoginDateField.Equals(value) != true)) {
                    this.LoginDateField = value;
                    this.RaisePropertyChanged("LoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIDField, value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char LoginStatusFlag {
            get {
                return this.LoginStatusFlagField;
            }
            set {
                if ((this.LoginStatusFlagField.Equals(value) != true)) {
                    this.LoginStatusFlagField = value;
                    this.RaisePropertyChanged("LoginStatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LogoutDate {
            get {
                return this.LogoutDateField;
            }
            set {
                if ((this.LogoutDateField.Equals(value) != true)) {
                    this.LogoutDateField = value;
                    this.RaisePropertyChanged("LogoutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ManagerID {
            get {
                return this.ManagerIDField;
            }
            set {
                if ((this.ManagerIDField.Equals(value) != true)) {
                    this.ManagerIDField = value;
                    this.RaisePropertyChanged("ManagerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayPhone> Phones {
            get {
                return this.PhonesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhonesField, value) != true)) {
                    this.PhonesField = value;
                    this.RaisePropertyChanged("Phones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProfileConfigID {
            get {
                return this.ProfileConfigIDField;
            }
            set {
                if ((this.ProfileConfigIDField.Equals(value) != true)) {
                    this.ProfileConfigIDField = value;
                    this.RaisePropertyChanged("ProfileConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileSet {
            get {
                return this.ProfileSetField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileSetField, value) != true)) {
                    this.ProfileSetField = value;
                    this.RaisePropertyChanged("ProfileSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusText {
            get {
                return this.StatusTextField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTextField, value) != true)) {
                    this.StatusTextField = value;
                    this.RaisePropertyChanged("StatusText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suffix {
            get {
                return this.SuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SuffixField, value) != true)) {
                    this.SuffixField = value;
                    this.RaisePropertyChanged("Suffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TempPassword {
            get {
                return this.TempPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.TempPasswordField, value) != true)) {
                    this.TempPasswordField = value;
                    this.RaisePropertyChanged("TempPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserKey {
            get {
                return this.UserKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.UserKeyField, value) != true)) {
                    this.UserKeyField = value;
                    this.RaisePropertyChanged("UserKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserProfileID {
            get {
                return this.UserProfileIDField;
            }
            set {
                if ((this.UserProfileIDField.Equals(value) != true)) {
                    this.UserProfileIDField = value;
                    this.RaisePropertyChanged("UserProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int langId {
            get {
                return this.langIdField;
            }
            set {
                if ((this.langIdField.Equals(value) != true)) {
                    this.langIdField = value;
                    this.RaisePropertyChanged("langId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDisplayAddress", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class UserDisplayAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MayContactAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserAddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZIPField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MayContactAddress {
            get {
                return this.MayContactAddressField;
            }
            set {
                if ((this.MayContactAddressField.Equals(value) != true)) {
                    this.MayContactAddressField = value;
                    this.RaisePropertyChanged("MayContactAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserAddressID {
            get {
                return this.UserAddressIDField;
            }
            set {
                if ((this.UserAddressIDField.Equals(value) != true)) {
                    this.UserAddressIDField = value;
                    this.RaisePropertyChanged("UserAddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZIP {
            get {
                return this.ZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ZIPField, value) != true)) {
                    this.ZIPField = value;
                    this.RaisePropertyChanged("ZIP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDisplayEmail", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class UserDisplayEmail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MayContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserEmailIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MayContactEmail {
            get {
                return this.MayContactEmailField;
            }
            set {
                if ((this.MayContactEmailField.Equals(value) != true)) {
                    this.MayContactEmailField = value;
                    this.RaisePropertyChanged("MayContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserEmailID {
            get {
                return this.UserEmailIDField;
            }
            set {
                if ((this.UserEmailIDField.Equals(value) != true)) {
                    this.UserEmailIDField = value;
                    this.RaisePropertyChanged("UserEmailID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDisplayPhone", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class UserDisplayPhone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MayContactPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserPhoneIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ext {
            get {
                return this.ExtField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtField, value) != true)) {
                    this.ExtField = value;
                    this.RaisePropertyChanged("Ext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MayContactPhone {
            get {
                return this.MayContactPhoneField;
            }
            set {
                if ((this.MayContactPhoneField.Equals(value) != true)) {
                    this.MayContactPhoneField = value;
                    this.RaisePropertyChanged("MayContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserPhoneID {
            get {
                return this.UserPhoneIDField;
            }
            set {
                if ((this.UserPhoneIDField.Equals(value) != true)) {
                    this.UserPhoneIDField = value;
                    this.RaisePropertyChanged("UserPhoneID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserContextLightweight", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.Business.ServiceImplementation")]
    [System.SerializableAttribute()]
    public partial class UserContextLightweight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Assmnts.UasServiceRef.GroupLightweight> GroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsoLanguageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseDescription {
            get {
                return this.EnterpriseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseDescriptionField, value) != true)) {
                    this.EnterpriseDescriptionField = value;
                    this.RaisePropertyChanged("EnterpriseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseId {
            get {
                return this.EnterpriseIdField;
            }
            set {
                if ((this.EnterpriseIdField.Equals(value) != true)) {
                    this.EnterpriseIdField = value;
                    this.RaisePropertyChanged("EnterpriseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseName {
            get {
                return this.EnterpriseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseNameField, value) != true)) {
                    this.EnterpriseNameField = value;
                    this.RaisePropertyChanged("EnterpriseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Assmnts.UasServiceRef.GroupLightweight> Groups {
            get {
                return this.GroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupsField, value) != true)) {
                    this.GroupsField = value;
                    this.RaisePropertyChanged("Groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsoLanguageCode {
            get {
                return this.IsoLanguageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IsoLanguageCodeField, value) != true)) {
                    this.IsoLanguageCodeField = value;
                    this.RaisePropertyChanged("IsoLanguageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageTitle {
            get {
                return this.LanguageTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageTitleField, value) != true)) {
                    this.LanguageTitleField = value;
                    this.RaisePropertyChanged("LanguageTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SSN {
            get {
                return this.SSNField;
            }
            set {
                if ((object.ReferenceEquals(this.SSNField, value) != true)) {
                    this.SSNField = value;
                    this.RaisePropertyChanged("SSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserKey {
            get {
                return this.UserKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.UserKeyField, value) != true)) {
                    this.UserKeyField = value;
                    this.RaisePropertyChanged("UserKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupLightweight", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.Business.ServiceImplementation")]
    [System.SerializableAttribute()]
    public partial class GroupLightweight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionGroupLightweight> PermissionGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecuritySetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionGroupLightweight> PermissionGroups {
            get {
                return this.PermissionGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionGroupsField, value) != true)) {
                    this.PermissionGroupsField = value;
                    this.RaisePropertyChanged("PermissionGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecuritySet {
            get {
                return this.SecuritySetField;
            }
            set {
                if ((object.ReferenceEquals(this.SecuritySetField, value) != true)) {
                    this.SecuritySetField = value;
                    this.RaisePropertyChanged("SecuritySet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionGroupLightweight", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.Business.ServiceImplementation")]
    [System.SerializableAttribute()]
    public partial class PermissionGroupLightweight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionLightweight> PermissionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermissionGroupId {
            get {
                return this.PermissionGroupIdField;
            }
            set {
                if ((this.PermissionGroupIdField.Equals(value) != true)) {
                    this.PermissionGroupIdField = value;
                    this.RaisePropertyChanged("PermissionGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionLightweight> Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionsField, value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionLightweight", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.Business.ServiceImplementation")]
    [System.SerializableAttribute()]
    public partial class PermissionLightweight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermissionId {
            get {
                return this.PermissionIdField;
            }
            set {
                if ((this.PermissionIdField.Equals(value) != true)) {
                    this.PermissionIdField = value;
                    this.RaisePropertyChanged("PermissionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLoginActivity", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class UserLoginActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EnterpriseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastActivityDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LogoutDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SessionExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserLoginActivityIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActiveData {
            get {
                return this.ActiveDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveDataField, value) != true)) {
                    this.ActiveDataField = value;
                    this.RaisePropertyChanged("ActiveData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EnterpriseID {
            get {
                return this.EnterpriseIDField;
            }
            set {
                if ((this.EnterpriseIDField.Equals(value) != true)) {
                    this.EnterpriseIDField = value;
                    this.RaisePropertyChanged("EnterpriseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastActivity {
            get {
                return this.LastActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.LastActivityField, value) != true)) {
                    this.LastActivityField = value;
                    this.RaisePropertyChanged("LastActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastActivityDate {
            get {
                return this.LastActivityDateField;
            }
            set {
                if ((this.LastActivityDateField.Equals(value) != true)) {
                    this.LastActivityDateField = value;
                    this.RaisePropertyChanged("LastActivityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LoginDate {
            get {
                return this.LoginDateField;
            }
            set {
                if ((this.LoginDateField.Equals(value) != true)) {
                    this.LoginDateField = value;
                    this.RaisePropertyChanged("LoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LogoutDate {
            get {
                return this.LogoutDateField;
            }
            set {
                if ((this.LogoutDateField.Equals(value) != true)) {
                    this.LogoutDateField = value;
                    this.RaisePropertyChanged("LogoutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SessionExpirationDate {
            get {
                return this.SessionExpirationDateField;
            }
            set {
                if ((this.SessionExpirationDateField.Equals(value) != true)) {
                    this.SessionExpirationDateField = value;
                    this.RaisePropertyChanged("SessionExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserLoginActivityID {
            get {
                return this.UserLoginActivityIDField;
            }
            set {
                if ((this.UserLoginActivityIDField.Equals(value) != true)) {
                    this.UserLoginActivityIDField = value;
                    this.RaisePropertyChanged("UserLoginActivityID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemConfig", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class SystemConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemConfigIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigLabel {
            get {
                return this.ConfigLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigLabelField, value) != true)) {
                    this.ConfigLabelField = value;
                    this.RaisePropertyChanged("ConfigLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemConfigID {
            get {
                return this.SystemConfigIDField;
            }
            set {
                if ((this.SystemConfigIDField.Equals(value) != true)) {
                    this.SystemConfigIDField = value;
                    this.RaisePropertyChanged("SystemConfigID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseType", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class BaseType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short baseTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string enumerationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short baseTypeId {
            get {
                return this.baseTypeIdField;
            }
            set {
                if ((this.baseTypeIdField.Equals(value) != true)) {
                    this.baseTypeIdField = value;
                    this.RaisePropertyChanged("baseTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string enumeration {
            get {
                return this.enumerationField;
            }
            set {
                if ((object.ReferenceEquals(this.enumerationField, value) != true)) {
                    this.enumerationField = value;
                    this.RaisePropertyChanged("enumeration");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enterprise", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class Enterprise : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConfigID {
            get {
                return this.ConfigIDField;
            }
            set {
                if ((this.ConfigIDField.Equals(value) != true)) {
                    this.ConfigIDField = value;
                    this.RaisePropertyChanged("ConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigParams {
            get {
                return this.ConfigParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigParamsField, value) != true)) {
                    this.ConfigParamsField = value;
                    this.RaisePropertyChanged("ConfigParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseDescription {
            get {
                return this.EnterpriseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseDescriptionField, value) != true)) {
                    this.EnterpriseDescriptionField = value;
                    this.RaisePropertyChanged("EnterpriseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseID {
            get {
                return this.EnterpriseIDField;
            }
            set {
                if ((this.EnterpriseIDField.Equals(value) != true)) {
                    this.EnterpriseIDField = value;
                    this.RaisePropertyChanged("EnterpriseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseName {
            get {
                return this.EnterpriseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseNameField, value) != true)) {
                    this.EnterpriseNameField = value;
                    this.RaisePropertyChanged("EnterpriseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppEnt", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class AppEnt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppEntIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IPRangeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlLinkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppEntID {
            get {
                return this.AppEntIDField;
            }
            set {
                if ((this.AppEntIDField.Equals(value) != true)) {
                    this.AppEntIDField = value;
                    this.RaisePropertyChanged("AppEntID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseID {
            get {
                return this.EnterpriseIDField;
            }
            set {
                if ((this.EnterpriseIDField.Equals(value) != true)) {
                    this.EnterpriseIDField = value;
                    this.RaisePropertyChanged("EnterpriseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IPRangeID {
            get {
                return this.IPRangeIDField;
            }
            set {
                if ((this.IPRangeIDField.Equals(value) != true)) {
                    this.IPRangeIDField = value;
                    this.RaisePropertyChanged("IPRangeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string urlLink {
            get {
                return this.urlLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.urlLinkField, value) != true)) {
                    this.urlLinkField = value;
                    this.RaisePropertyChanged("urlLink");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntAppConfig", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class EntAppConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntAppConfigIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnumCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short baseTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigName {
            get {
                return this.ConfigNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigNameField, value) != true)) {
                    this.ConfigNameField = value;
                    this.RaisePropertyChanged("ConfigName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntAppConfigId {
            get {
                return this.EntAppConfigIdField;
            }
            set {
                if ((this.EntAppConfigIdField.Equals(value) != true)) {
                    this.EntAppConfigIdField = value;
                    this.RaisePropertyChanged("EntAppConfigId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseID {
            get {
                return this.EnterpriseIDField;
            }
            set {
                if ((this.EnterpriseIDField.Equals(value) != true)) {
                    this.EnterpriseIDField = value;
                    this.RaisePropertyChanged("EnterpriseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnumCode {
            get {
                return this.EnumCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EnumCodeField, value) != true)) {
                    this.EnumCodeField = value;
                    this.RaisePropertyChanged("EnumCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short baseTypeId {
            get {
                return this.baseTypeIdField;
            }
            set {
                if ((this.baseTypeIdField.Equals(value) != true)) {
                    this.baseTypeIdField = value;
                    this.RaisePropertyChanged("baseTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveEnrollmentSites", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class ActiveEnrollmentSites : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupDescription {
            get {
                return this.GroupDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupDescriptionField, value) != true)) {
                    this.GroupDescriptionField = value;
                    this.RaisePropertyChanged("GroupDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupNumber {
            get {
                return this.GroupNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNumberField, value) != true)) {
                    this.GroupNumberField = value;
                    this.RaisePropertyChanged("GroupNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientHandout", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class ClientHandout : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Enrollment_WorkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Re_Enrollment_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVF_no_laterthanField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Enrollment_Worker {
            get {
                return this.Enrollment_WorkerField;
            }
            set {
                if ((object.ReferenceEquals(this.Enrollment_WorkerField, value) != true)) {
                    this.Enrollment_WorkerField = value;
                    this.RaisePropertyChanged("Enrollment_Worker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginId {
            get {
                return this.LoginIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIdField, value) != true)) {
                    this.LoginIdField = value;
                    this.RaisePropertyChanged("LoginId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberID {
            get {
                return this.MemberIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberIDField, value) != true)) {
                    this.MemberIDField = value;
                    this.RaisePropertyChanged("MemberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone_Number {
            get {
                return this.Phone_NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Phone_NumberField, value) != true)) {
                    this.Phone_NumberField = value;
                    this.RaisePropertyChanged("Phone_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Re_Enrollment_Date {
            get {
                return this.Re_Enrollment_DateField;
            }
            set {
                if ((object.ReferenceEquals(this.Re_Enrollment_DateField, value) != true)) {
                    this.Re_Enrollment_DateField = value;
                    this.RaisePropertyChanged("Re_Enrollment_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVF_no_laterthan {
            get {
                return this.SVF_no_laterthanField;
            }
            set {
                if ((object.ReferenceEquals(this.SVF_no_laterthanField, value) != true)) {
                    this.SVF_no_laterthanField = value;
                    this.RaisePropertyChanged("SVF_no_laterthan");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseID {
            get {
                return this.EnterpriseIDField;
            }
            set {
                if ((this.EnterpriseIDField.Equals(value) != true)) {
                    this.EnterpriseIDField = value;
                    this.RaisePropertyChanged("EnterpriseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupDescription {
            get {
                return this.GroupDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupDescriptionField, value) != true)) {
                    this.GroupDescriptionField = value;
                    this.RaisePropertyChanged("GroupDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupTypeID {
            get {
                return this.GroupTypeIDField;
            }
            set {
                if ((this.GroupTypeIDField.Equals(value) != true)) {
                    this.GroupTypeIDField = value;
                    this.RaisePropertyChanged("GroupTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentGroupId {
            get {
                return this.ParentGroupIdField;
            }
            set {
                if ((this.ParentGroupIdField.Equals(value) != true)) {
                    this.ParentGroupIdField = value;
                    this.RaisePropertyChanged("ParentGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupType", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class GroupType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GroupTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConfigID {
            get {
                return this.ConfigIDField;
            }
            set {
                if ((this.ConfigIDField.Equals(value) != true)) {
                    this.ConfigIDField = value;
                    this.RaisePropertyChanged("ConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseID {
            get {
                return this.EnterpriseIDField;
            }
            set {
                if ((this.EnterpriseIDField.Equals(value) != true)) {
                    this.EnterpriseIDField = value;
                    this.RaisePropertyChanged("EnterpriseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupTypeDescription {
            get {
                return this.GroupTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupTypeDescriptionField, value) != true)) {
                    this.GroupTypeDescriptionField = value;
                    this.RaisePropertyChanged("GroupTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GroupTypeID {
            get {
                return this.GroupTypeIDField;
            }
            set {
                if ((this.GroupTypeIDField.Equals(value) != true)) {
                    this.GroupTypeIDField = value;
                    this.RaisePropertyChanged("GroupTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupTypeName {
            get {
                return this.GroupTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupTypeNameField, value) != true)) {
                    this.GroupTypeNameField = value;
                    this.RaisePropertyChanged("GroupTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupUserAppPermissions", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class GroupUserAppPermissions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupUserAppPermissionsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleAppPermissionsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecuritySetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupUserAppPermissionsID {
            get {
                return this.GroupUserAppPermissionsIDField;
            }
            set {
                if ((this.GroupUserAppPermissionsIDField.Equals(value) != true)) {
                    this.GroupUserAppPermissionsIDField = value;
                    this.RaisePropertyChanged("GroupUserAppPermissionsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleAppPermissionsID {
            get {
                return this.RoleAppPermissionsIDField;
            }
            set {
                if ((this.RoleAppPermissionsIDField.Equals(value) != true)) {
                    this.RoleAppPermissionsIDField = value;
                    this.RaisePropertyChanged("RoleAppPermissionsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecuritySet {
            get {
                return this.SecuritySetField;
            }
            set {
                if ((object.ReferenceEquals(this.SecuritySetField, value) != true)) {
                    this.SecuritySetField = value;
                    this.RaisePropertyChanged("SecuritySet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupApplication", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class GroupApplication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupDescription {
            get {
                return this.GroupDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupDescriptionField, value) != true)) {
                    this.GroupDescriptionField = value;
                    this.RaisePropertyChanged("GroupDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleAppPermissions", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class RoleAppPermissions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleAppPermissionsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecuritySetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleAppPermissionsID {
            get {
                return this.RoleAppPermissionsIDField;
            }
            set {
                if ((this.RoleAppPermissionsIDField.Equals(value) != true)) {
                    this.RoleAppPermissionsIDField = value;
                    this.RaisePropertyChanged("RoleAppPermissionsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecuritySet {
            get {
                return this.SecuritySetField;
            }
            set {
                if ((object.ReferenceEquals(this.SecuritySetField, value) != true)) {
                    this.SecuritySetField = value;
                    this.RaisePropertyChanged("SecuritySet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationPermission", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class ApplicationPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationPermissionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecuritySetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationPermissionID {
            get {
                return this.ApplicationPermissionIDField;
            }
            set {
                if ((this.ApplicationPermissionIDField.Equals(value) != true)) {
                    this.ApplicationPermissionIDField = value;
                    this.RaisePropertyChanged("ApplicationPermissionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecuritySet {
            get {
                return this.SecuritySetField;
            }
            set {
                if ((object.ReferenceEquals(this.SecuritySetField, value) != true)) {
                    this.SecuritySetField = value;
                    this.RaisePropertyChanged("SecuritySet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseID {
            get {
                return this.EnterpriseIDField;
            }
            set {
                if ((this.EnterpriseIDField.Equals(value) != true)) {
                    this.EnterpriseIDField = value;
                    this.RaisePropertyChanged("EnterpriseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleDescription {
            get {
                return this.RoleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleDescriptionField, value) != true)) {
                    this.RoleDescriptionField = value;
                    this.RaisePropertyChanged("RoleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleTypeID {
            get {
                return this.RoleTypeIDField;
            }
            set {
                if ((this.RoleTypeIDField.Equals(value) != true)) {
                    this.RoleTypeIDField = value;
                    this.RaisePropertyChanged("RoleTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Application", Namespace="http://schemas.datacontract.org/2004/07/WS_UAS.DataDTO")]
    [System.SerializableAttribute()]
    public partial class Application : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ParamsModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultSet {
            get {
                return this.DefaultSetField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultSetField, value) != true)) {
                    this.DefaultSetField = value;
                    this.RaisePropertyChanged("DefaultSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ParamsModified {
            get {
                return this.ParamsModifiedField;
            }
            set {
                if ((this.ParamsModifiedField.Equals(value) != true)) {
                    this.ParamsModifiedField = value;
                    this.RaisePropertyChanged("ParamsModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UasServiceRef.IAuthentication")]
    public interface IAuthentication {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRoleTypes", ReplyAction="http://tempuri.org/IAuthentication/GetRoleTypesResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.RoleType> GetRoleTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRoleTypes", ReplyAction="http://tempuri.org/IAuthentication/GetRoleTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.RoleType>> GetRoleTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddUserProfile", ReplyAction="http://tempuri.org/IAuthentication/AddUserProfileResponse")]
        bool AddUserProfile(Assmnts.UasServiceRef.UserProfile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddUserProfile", ReplyAction="http://tempuri.org/IAuthentication/AddUserProfileResponse")]
        System.Threading.Tasks.Task<bool> AddUserProfileAsync(Assmnts.UasServiceRef.UserProfile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserProfiles", ReplyAction="http://tempuri.org/IAuthentication/GetUserProfilesResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.UserProfile> GetUserProfiles(int profileConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserProfiles", ReplyAction="http://tempuri.org/IAuthentication/GetUserProfilesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.UserProfile>> GetUserProfilesAsync(int profileConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSecretQuestion", ReplyAction="http://tempuri.org/IAuthentication/GetSecretQuestionResponse")]
        Assmnts.UasServiceRef.SecretQuestion GetSecretQuestion(int scrtQstnId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSecretQuestion", ReplyAction="http://tempuri.org/IAuthentication/GetSecretQuestionResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.SecretQuestion> GetSecretQuestionAsync(int scrtQstnId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSecretQuestionIDs", ReplyAction="http://tempuri.org/IAuthentication/GetSecretQuestionIDsResponse")]
        System.Collections.Generic.List<int> GetSecretQuestionIDs(int langId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSecretQuestionIDs", ReplyAction="http://tempuri.org/IAuthentication/GetSecretQuestionIDsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetSecretQuestionIDsAsync(int langId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddSecretQuestionAnswer", ReplyAction="http://tempuri.org/IAuthentication/AddSecretQuestionAnswerResponse")]
        bool AddSecretQuestionAnswer(Assmnts.UasServiceRef.SecretQuestionAnswer ans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddSecretQuestionAnswer", ReplyAction="http://tempuri.org/IAuthentication/AddSecretQuestionAnswerResponse")]
        System.Threading.Tasks.Task<bool> AddSecretQuestionAnswerAsync(Assmnts.UasServiceRef.SecretQuestionAnswer ans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSecretQuestionIDsByUser", ReplyAction="http://tempuri.org/IAuthentication/GetSecretQuestionIDsByUserResponse")]
        System.Collections.Generic.List<int> GetSecretQuestionIDsByUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSecretQuestionIDsByUser", ReplyAction="http://tempuri.org/IAuthentication/GetSecretQuestionIDsByUserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetSecretQuestionIDsByUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSecretQuestionAnswersByUser", ReplyAction="http://tempuri.org/IAuthentication/GetSecretQuestionAnswersByUserResponse")]
        System.Collections.Generic.List<string> GetSecretQuestionAnswersByUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSecretQuestionAnswersByUser", ReplyAction="http://tempuri.org/IAuthentication/GetSecretQuestionAnswersByUserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetSecretQuestionAnswersByUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ResetSecretQuestionAnswers", ReplyAction="http://tempuri.org/IAuthentication/ResetSecretQuestionAnswersResponse")]
        bool ResetSecretQuestionAnswers(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ResetSecretQuestionAnswers", ReplyAction="http://tempuri.org/IAuthentication/ResetSecretQuestionAnswersResponse")]
        System.Threading.Tasks.Task<bool> ResetSecretQuestionAnswersAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetLanguageByTwoLetterISOCode", ReplyAction="http://tempuri.org/IAuthentication/GetLanguageByTwoLetterISOCodeResponse")]
        Assmnts.UasServiceRef.Language GetLanguageByTwoLetterISOCode(string isoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetLanguageByTwoLetterISOCode", ReplyAction="http://tempuri.org/IAuthentication/GetLanguageByTwoLetterISOCodeResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.Language> GetLanguageByTwoLetterISOCodeAsync(string isoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserInfo", ReplyAction="http://tempuri.org/IAuthentication/GetUserInfoResponse")]
        Assmnts.UasServiceRef.GetUserInfoResponse GetUserInfo(Assmnts.UasServiceRef.GetUserInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserInfo", ReplyAction="http://tempuri.org/IAuthentication/GetUserInfoResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.GetUserInfoResponse> GetUserInfoAsync(Assmnts.UasServiceRef.GetUserInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/CreateUser", ReplyAction="http://tempuri.org/IAuthentication/CreateUserResponse")]
        bool CreateUser(string userId, string userData, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/CreateUser", ReplyAction="http://tempuri.org/IAuthentication/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(string userId, string userData, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateUser", ReplyAction="http://tempuri.org/IAuthentication/UpdateUserResponse")]
        bool UpdateUser(string userId, string userData, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateUser", ReplyAction="http://tempuri.org/IAuthentication/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(string userId, string userData, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteUserByUserName", ReplyAction="http://tempuri.org/IAuthentication/DeleteUserByUserNameResponse")]
        bool DeleteUserByUserName(string userId, string userIdToDelete, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteUserByUserName", ReplyAction="http://tempuri.org/IAuthentication/DeleteUserByUserNameResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserByUserNameAsync(string userId, string userIdToDelete, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetAllUsers", ReplyAction="http://tempuri.org/IAuthentication/GetAllUsersResponse")]
        Assmnts.UasServiceRef.GetAllUsersResponse GetAllUsers(Assmnts.UasServiceRef.GetAllUsersRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetAllUsers", ReplyAction="http://tempuri.org/IAuthentication/GetAllUsersResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.GetAllUsersResponse> GetAllUsersAsync(Assmnts.UasServiceRef.GetAllUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateSentLockoutEmail", ReplyAction="http://tempuri.org/IAuthentication/UpdateSentLockoutEmailResponse")]
        void UpdateSentLockoutEmail(int userId, bool locked);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateSentLockoutEmail", ReplyAction="http://tempuri.org/IAuthentication/UpdateSentLockoutEmailResponse")]
        System.Threading.Tasks.Task UpdateSentLockoutEmailAsync(int userId, bool locked);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetLastLoginTime", ReplyAction="http://tempuri.org/IAuthentication/GetLastLoginTimeResponse")]
        System.Nullable<System.DateTime> GetLastLoginTime(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetLastLoginTime", ReplyAction="http://tempuri.org/IAuthentication/GetLastLoginTimeResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetLastLoginTimeAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_Enrollment_Sites", ReplyAction="http://tempuri.org/IAuthentication/List_Enrollment_SitesResponse")]
        Assmnts.UasServiceRef.List_Enrollment_SitesResponse List_Enrollment_Sites(Assmnts.UasServiceRef.List_Enrollment_SitesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_Enrollment_Sites", ReplyAction="http://tempuri.org/IAuthentication/List_Enrollment_SitesResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.List_Enrollment_SitesResponse> List_Enrollment_SitesAsync(Assmnts.UasServiceRef.List_Enrollment_SitesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetADAPIdentifier", ReplyAction="http://tempuri.org/IAuthentication/GetADAPIdentifierResponse")]
        string GetADAPIdentifier(int UAS_ID, int EnterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetADAPIdentifier", ReplyAction="http://tempuri.org/IAuthentication/GetADAPIdentifierResponse")]
        System.Threading.Tasks.Task<string> GetADAPIdentifierAsync(int UAS_ID, int EnterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetExistingAdapIdentifier", ReplyAction="http://tempuri.org/IAuthentication/GetExistingAdapIdentifierResponse")]
        string GetExistingAdapIdentifier(int UAS_ID, int EnterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetExistingAdapIdentifier", ReplyAction="http://tempuri.org/IAuthentication/GetExistingAdapIdentifierResponse")]
        System.Threading.Tasks.Task<string> GetExistingAdapIdentifierAsync(int UAS_ID, int EnterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_people_Users", ReplyAction="http://tempuri.org/IAuthentication/List_people_UsersResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<string>> List_people_Users(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string adapId, string ssn, string esNumber, string dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_people_Users", ReplyAction="http://tempuri.org/IAuthentication/List_people_UsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_people_UsersAsync(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string adapId, string ssn, string esNumber, string dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_CSS_people_Users", ReplyAction="http://tempuri.org/IAuthentication/List_CSS_people_UsersResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<string>> List_CSS_people_Users(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string loginId, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_CSS_people_Users", ReplyAction="http://tempuri.org/IAuthentication/List_CSS_people_UsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_CSS_people_UsersAsync(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string loginId, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListUsersClientSearch", ReplyAction="http://tempuri.org/IAuthentication/ListUsersClientSearchResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<string>> ListUsersClientSearch(string searchContext, int skipCount, int takeCount, string firstName, string lastName, string DOB, string SSN, bool noSSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListUsersClientSearch", ReplyAction="http://tempuri.org/IAuthentication/ListUsersClientSearchResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> ListUsersClientSearchAsync(string searchContext, int skipCount, int takeCount, string firstName, string lastName, string DOB, string SSN, bool noSSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateUserGroup", ReplyAction="http://tempuri.org/IAuthentication/UpdateUserGroupResponse")]
        string UpdateUserGroup(Assmnts.UasServiceRef.ClientMoveParameters updateParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateUserGroup", ReplyAction="http://tempuri.org/IAuthentication/UpdateUserGroupResponse")]
        System.Threading.Tasks.Task<string> UpdateUserGroupAsync(Assmnts.UasServiceRef.ClientMoveParameters updateParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEmailUsers", ReplyAction="http://tempuri.org/IAuthentication/GetEmailUsersResponse")]
        System.Collections.Generic.List<int> GetEmailUsers(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEmailUsers", ReplyAction="http://tempuri.org/IAuthentication/GetEmailUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetEmailUsersAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_Email_Users", ReplyAction="http://tempuri.org/IAuthentication/List_Email_UsersResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<string>> List_Email_Users(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string emailAddress, string esNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_Email_Users", ReplyAction="http://tempuri.org/IAuthentication/List_Email_UsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_Email_UsersAsync(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string emailAddress, string esNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_ENWorkers", ReplyAction="http://tempuri.org/IAuthentication/List_ENWorkersResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort> List_ENWorkers(int enterpriseid, int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_ENWorkers", ReplyAction="http://tempuri.org/IAuthentication/List_ENWorkersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort>> List_ENWorkersAsync(int enterpriseid, int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/IsEnrollmentWorker", ReplyAction="http://tempuri.org/IAuthentication/IsEnrollmentWorkerResponse")]
        bool IsEnrollmentWorker(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/IsEnrollmentWorker", ReplyAction="http://tempuri.org/IAuthentication/IsEnrollmentWorkerResponse")]
        System.Threading.Tasks.Task<bool> IsEnrollmentWorkerAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListPermissionGroupsByApplicationId", ReplyAction="http://tempuri.org/IAuthentication/ListPermissionGroupsByApplicationIdResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionGroup> ListPermissionGroupsByApplicationId(int appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListPermissionGroupsByApplicationId", ReplyAction="http://tempuri.org/IAuthentication/ListPermissionGroupsByApplicationIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionGroup>> ListPermissionGroupsByApplicationIdAsync(int appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListPermissionGroups", ReplyAction="http://tempuri.org/IAuthentication/ListPermissionGroupsResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionGroup> ListPermissionGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListPermissionGroups", ReplyAction="http://tempuri.org/IAuthentication/ListPermissionGroupsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionGroup>> ListPermissionGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetPermissionGroupById", ReplyAction="http://tempuri.org/IAuthentication/GetPermissionGroupByIdResponse")]
        Assmnts.UasServiceRef.PermissionGroup GetPermissionGroupById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetPermissionGroupById", ReplyAction="http://tempuri.org/IAuthentication/GetPermissionGroupByIdResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.PermissionGroup> GetPermissionGroupByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddPermissionGroup", ReplyAction="http://tempuri.org/IAuthentication/AddPermissionGroupResponse")]
        int AddPermissionGroup(Assmnts.UasServiceRef.PermissionGroup pg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddPermissionGroup", ReplyAction="http://tempuri.org/IAuthentication/AddPermissionGroupResponse")]
        System.Threading.Tasks.Task<int> AddPermissionGroupAsync(Assmnts.UasServiceRef.PermissionGroup pg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeletePermissionGroupById", ReplyAction="http://tempuri.org/IAuthentication/DeletePermissionGroupByIdResponse")]
        bool DeletePermissionGroupById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeletePermissionGroupById", ReplyAction="http://tempuri.org/IAuthentication/DeletePermissionGroupByIdResponse")]
        System.Threading.Tasks.Task<bool> DeletePermissionGroupByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdatePermissionGroup", ReplyAction="http://tempuri.org/IAuthentication/UpdatePermissionGroupResponse")]
        bool UpdatePermissionGroup(Assmnts.UasServiceRef.PermissionGroup pg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdatePermissionGroup", ReplyAction="http://tempuri.org/IAuthentication/UpdatePermissionGroupResponse")]
        System.Threading.Tasks.Task<bool> UpdatePermissionGroupAsync(Assmnts.UasServiceRef.PermissionGroup pg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListPermissionCodes", ReplyAction="http://tempuri.org/IAuthentication/ListPermissionCodesResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionCode> ListPermissionCodes(int permGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListPermissionCodes", ReplyAction="http://tempuri.org/IAuthentication/ListPermissionCodesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionCode>> ListPermissionCodesAsync(int permGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetPermissionCodeById", ReplyAction="http://tempuri.org/IAuthentication/GetPermissionCodeByIdResponse")]
        Assmnts.UasServiceRef.PermissionCode GetPermissionCodeById(int permCodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetPermissionCodeById", ReplyAction="http://tempuri.org/IAuthentication/GetPermissionCodeByIdResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.PermissionCode> GetPermissionCodeByIdAsync(int permCodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddPermissionCode", ReplyAction="http://tempuri.org/IAuthentication/AddPermissionCodeResponse")]
        int AddPermissionCode(Assmnts.UasServiceRef.PermissionCode pg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddPermissionCode", ReplyAction="http://tempuri.org/IAuthentication/AddPermissionCodeResponse")]
        System.Threading.Tasks.Task<int> AddPermissionCodeAsync(Assmnts.UasServiceRef.PermissionCode pg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeletePermissionCodeById", ReplyAction="http://tempuri.org/IAuthentication/DeletePermissionCodeByIdResponse")]
        bool DeletePermissionCodeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeletePermissionCodeById", ReplyAction="http://tempuri.org/IAuthentication/DeletePermissionCodeByIdResponse")]
        System.Threading.Tasks.Task<bool> DeletePermissionCodeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdatePermissionCode", ReplyAction="http://tempuri.org/IAuthentication/UpdatePermissionCodeResponse")]
        bool UpdatePermissionCode(Assmnts.UasServiceRef.PermissionCode pg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdatePermissionCode", ReplyAction="http://tempuri.org/IAuthentication/UpdatePermissionCodeResponse")]
        System.Threading.Tasks.Task<bool> UpdatePermissionCodeAsync(Assmnts.UasServiceRef.PermissionCode pg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SecureDomain", ReplyAction="http://tempuri.org/IAuthentication/SecureDomainResponse")]
        int SecureDomain(string userDomain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SecureDomain", ReplyAction="http://tempuri.org/IAuthentication/SecureDomainResponse")]
        System.Threading.Tasks.Task<int> SecureDomainAsync(string userDomain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/CheckActiveUser", ReplyAction="http://tempuri.org/IAuthentication/CheckActiveUserResponse")]
        Assmnts.UasServiceRef.User CheckActiveUser(int userId, string tempPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/CheckActiveUser", ReplyAction="http://tempuri.org/IAuthentication/CheckActiveUserResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.User> CheckActiveUserAsync(int userId, string tempPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AuthenticateUser", ReplyAction="http://tempuri.org/IAuthentication/AuthenticateUserResponse")]
        string AuthenticateUser(string passkey, string application, string domainid, string loginid, string password, string sessiondata, string timestamp, string signature, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AuthenticateUser", ReplyAction="http://tempuri.org/IAuthentication/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<string> AuthenticateUserAsync(string passkey, string application, string domainid, string loginid, string password, string sessiondata, string timestamp, string signature, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SignUserOut", ReplyAction="http://tempuri.org/IAuthentication/SignUserOutResponse")]
        string SignUserOut(string passkey, string loginid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SignUserOut", ReplyAction="http://tempuri.org/IAuthentication/SignUserOutResponse")]
        System.Threading.Tasks.Task<string> SignUserOutAsync(string passkey, string loginid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SsoLogin", ReplyAction="http://tempuri.org/IAuthentication/SsoLoginResponse")]
        string SsoLogin(string sessionId, string ipAddress, int applicationId, string applicationSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SsoLogin", ReplyAction="http://tempuri.org/IAuthentication/SsoLoginResponse")]
        System.Threading.Tasks.Task<string> SsoLoginAsync(string sessionId, string ipAddress, int applicationId, string applicationSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SsoLogout", ReplyAction="http://tempuri.org/IAuthentication/SsoLogoutResponse")]
        string SsoLogout(int userId, string sessionId, int applicationId, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SsoLogout", ReplyAction="http://tempuri.org/IAuthentication/SsoLogoutResponse")]
        System.Threading.Tasks.Task<string> SsoLogoutAsync(int userId, string sessionId, int applicationId, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/CheckUserLoginStatus", ReplyAction="http://tempuri.org/IAuthentication/CheckUserLoginStatusResponse")]
        string CheckUserLoginStatus(string passkey, string loginid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/CheckUserLoginStatus", ReplyAction="http://tempuri.org/IAuthentication/CheckUserLoginStatusResponse")]
        System.Threading.Tasks.Task<string> CheckUserLoginStatusAsync(string passkey, string loginid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AuthenticateAdminUser", ReplyAction="http://tempuri.org/IAuthentication/AuthenticateAdminUserResponse")]
        int AuthenticateAdminUser(string passkey, string loginid, string password, string sessiondata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AuthenticateAdminUser", ReplyAction="http://tempuri.org/IAuthentication/AuthenticateAdminUserResponse")]
        System.Threading.Tasks.Task<int> AuthenticateAdminUserAsync(string passkey, string loginid, string password, string sessiondata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/IsUserLoginIDUnique", ReplyAction="http://tempuri.org/IAuthentication/IsUserLoginIDUniqueResponse")]
        bool IsUserLoginIDUnique(string LoginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/IsUserLoginIDUnique", ReplyAction="http://tempuri.org/IAuthentication/IsUserLoginIDUniqueResponse")]
        System.Threading.Tasks.Task<bool> IsUserLoginIDUniqueAsync(string LoginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUsers", ReplyAction="http://tempuri.org/IAuthentication/GetUsersResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort> GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUsers", ReplyAction="http://tempuri.org/IAuthentication/GetUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort>> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUsersByEnterpriseId", ReplyAction="http://tempuri.org/IAuthentication/GetUsersByEnterpriseIdResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort> GetUsersByEnterpriseId(int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUsersByEnterpriseId", ReplyAction="http://tempuri.org/IAuthentication/GetUsersByEnterpriseIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort>> GetUsersByEnterpriseIdAsync(int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_limited_Users", ReplyAction="http://tempuri.org/IAuthentication/List_limited_UsersResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<string>> List_limited_Users(
                    int userID, 
                    int entId, 
                    int iniIndex, 
                    int noDsplyRecs, 
                    string log, 
                    string first, 
                    string last, 
                    string email, 
                    string status, 
                    int groupId, 
                    int roleId, 
                    int applicationId, 
                    string dob, 
                    string ssn, 
                    string adapId, 
                    string groupIdExplicit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_limited_Users", ReplyAction="http://tempuri.org/IAuthentication/List_limited_UsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_limited_UsersAsync(
                    int userID, 
                    int entId, 
                    int iniIndex, 
                    int noDsplyRecs, 
                    string log, 
                    string first, 
                    string last, 
                    string email, 
                    string status, 
                    int groupId, 
                    int roleId, 
                    int applicationId, 
                    string dob, 
                    string ssn, 
                    string adapId, 
                    string groupIdExplicit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_simple_Users", ReplyAction="http://tempuri.org/IAuthentication/List_simple_UsersResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<string>> List_simple_Users(
                    int userID, 
                    int entId, 
                    int iniIndex, 
                    int noDsplyRecs, 
                    string log, 
                    string first, 
                    string last, 
                    string email, 
                    string status, 
                    int groupId, 
                    int roleId, 
                    int applicationId, 
                    string dob, 
                    string ssn, 
                    string adapId, 
                    string groupIdExplicit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_simple_Users", ReplyAction="http://tempuri.org/IAuthentication/List_simple_UsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_simple_UsersAsync(
                    int userID, 
                    int entId, 
                    int iniIndex, 
                    int noDsplyRecs, 
                    string log, 
                    string first, 
                    string last, 
                    string email, 
                    string status, 
                    int groupId, 
                    int roleId, 
                    int applicationId, 
                    string dob, 
                    string ssn, 
                    string adapId, 
                    string groupIdExplicit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_limited_LogAccess", ReplyAction="http://tempuri.org/IAuthentication/List_limited_LogAccessResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<string>> List_limited_LogAccess(int entId, int iniIndex, int noDsplyRecs, string viewer, string viewed, string table);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_limited_LogAccess", ReplyAction="http://tempuri.org/IAuthentication/List_limited_LogAccessResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_limited_LogAccessAsync(int entId, int iniIndex, int noDsplyRecs, string viewer, string viewed, string table);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_limited_PermLogs", ReplyAction="http://tempuri.org/IAuthentication/List_limited_PermLogsResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<string>> List_limited_PermLogs(int entId, int iniIndex, int noDsplyRecs, string allrec, string permission, string user, string modified, string app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_limited_PermLogs", ReplyAction="http://tempuri.org/IAuthentication/List_limited_PermLogsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_limited_PermLogsAsync(int entId, int iniIndex, int noDsplyRecs, string allrec, string permission, string user, string modified, string app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/Insert_LogAccess", ReplyAction="http://tempuri.org/IAuthentication/Insert_LogAccessResponse")]
        bool Insert_LogAccess(Assmnts.UasServiceRef.LogAccess la);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/Insert_LogAccess", ReplyAction="http://tempuri.org/IAuthentication/Insert_LogAccessResponse")]
        System.Threading.Tasks.Task<bool> Insert_LogAccessAsync(Assmnts.UasServiceRef.LogAccess la);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/Insert_Multiple_LogAccesses", ReplyAction="http://tempuri.org/IAuthentication/Insert_Multiple_LogAccessesResponse")]
        bool Insert_Multiple_LogAccesses(System.Collections.Generic.List<Assmnts.UasServiceRef.LogAccess> la);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/Insert_Multiple_LogAccesses", ReplyAction="http://tempuri.org/IAuthentication/Insert_Multiple_LogAccessesResponse")]
        System.Threading.Tasks.Task<bool> Insert_Multiple_LogAccessesAsync(System.Collections.Generic.List<Assmnts.UasServiceRef.LogAccess> la);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserDisplay", ReplyAction="http://tempuri.org/IAuthentication/GetUserDisplayResponse")]
        Assmnts.UasServiceRef.UserDisplay GetUserDisplay(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserDisplay", ReplyAction="http://tempuri.org/IAuthentication/GetUserDisplayResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.UserDisplay> GetUserDisplayAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserDisplayByLoginId", ReplyAction="http://tempuri.org/IAuthentication/GetUserDisplayByLoginIdResponse")]
        Assmnts.UasServiceRef.UserDisplay GetUserDisplayByLoginId(string loginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserDisplayByLoginId", ReplyAction="http://tempuri.org/IAuthentication/GetUserDisplayByLoginIdResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.UserDisplay> GetUserDisplayByLoginIdAsync(string loginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserStringCSV", ReplyAction="http://tempuri.org/IAuthentication/GetUserStringCSVResponse")]
        string GetUserStringCSV(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserStringCSV", ReplyAction="http://tempuri.org/IAuthentication/GetUserStringCSVResponse")]
        System.Threading.Tasks.Task<string> GetUserStringCSVAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUser", ReplyAction="http://tempuri.org/IAuthentication/GetUserResponse")]
        Assmnts.UasServiceRef.User GetUser(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUser", ReplyAction="http://tempuri.org/IAuthentication/GetUserResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.User> GetUserAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserByLoginID", ReplyAction="http://tempuri.org/IAuthentication/GetUserByLoginIDResponse")]
        Assmnts.UasServiceRef.User GetUserByLoginID(string loginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserByLoginID", ReplyAction="http://tempuri.org/IAuthentication/GetUserByLoginIDResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.User> GetUserByLoginIDAsync(string loginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserByNameAndBirthday", ReplyAction="http://tempuri.org/IAuthentication/GetUserByNameAndBirthdayResponse")]
        Assmnts.UasServiceRef.User GetUserByNameAndBirthday(string firstName, string lastName, System.Nullable<System.DateTime> dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserByNameAndBirthday", ReplyAction="http://tempuri.org/IAuthentication/GetUserByNameAndBirthdayResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.User> GetUserByNameAndBirthdayAsync(string firstName, string lastName, System.Nullable<System.DateTime> dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserIDByEmail", ReplyAction="http://tempuri.org/IAuthentication/GetUserIDByEmailResponse")]
        int GetUserIDByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserIDByEmail", ReplyAction="http://tempuri.org/IAuthentication/GetUserIDByEmailResponse")]
        System.Threading.Tasks.Task<int> GetUserIDByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateUserDisplay", ReplyAction="http://tempuri.org/IAuthentication/UpdateUserDisplayResponse")]
        bool UpdateUserDisplay(Assmnts.UasServiceRef.UserDisplay usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateUserDisplay", ReplyAction="http://tempuri.org/IAuthentication/UpdateUserDisplayResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserDisplayAsync(Assmnts.UasServiceRef.UserDisplay usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateUserPassword", ReplyAction="http://tempuri.org/IAuthentication/UpdateUserPasswordResponse")]
        bool UpdateUserPassword(Assmnts.UasServiceRef.UserDisplay usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateUserPassword", ReplyAction="http://tempuri.org/IAuthentication/UpdateUserPasswordResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserPasswordAsync(Assmnts.UasServiceRef.UserDisplay usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateUserKey", ReplyAction="http://tempuri.org/IAuthentication/UpdateUserKeyResponse")]
        bool UpdateUserKey(Assmnts.UasServiceRef.UserDisplay usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateUserKey", ReplyAction="http://tempuri.org/IAuthentication/UpdateUserKeyResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserKeyAsync(Assmnts.UasServiceRef.UserDisplay usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddUser", ReplyAction="http://tempuri.org/IAuthentication/AddUserResponse")]
        bool AddUser(Assmnts.UasServiceRef.UserDisplay usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddUser", ReplyAction="http://tempuri.org/IAuthentication/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(Assmnts.UasServiceRef.UserDisplay usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteUser", ReplyAction="http://tempuri.org/IAuthentication/DeleteUserResponse")]
        bool DeleteUser(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteUser", ReplyAction="http://tempuri.org/IAuthentication/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetFirstContactableEmail", ReplyAction="http://tempuri.org/IAuthentication/GetFirstContactableEmailResponse")]
        string GetFirstContactableEmail(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetFirstContactableEmail", ReplyAction="http://tempuri.org/IAuthentication/GetFirstContactableEmailResponse")]
        System.Threading.Tasks.Task<string> GetFirstContactableEmailAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/CountUsers", ReplyAction="http://tempuri.org/IAuthentication/CountUsersResponse")]
        int CountUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/CountUsers", ReplyAction="http://tempuri.org/IAuthentication/CountUsersResponse")]
        System.Threading.Tasks.Task<int> CountUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SignUsersOut", ReplyAction="http://tempuri.org/IAuthentication/SignUsersOutResponse")]
        bool SignUsersOut(string sessionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SignUsersOut", ReplyAction="http://tempuri.org/IAuthentication/SignUsersOutResponse")]
        System.Threading.Tasks.Task<bool> SignUsersOutAsync(string sessionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserContextLightweight", ReplyAction="http://tempuri.org/IAuthentication/GetUserContextLightweightResponse")]
        Assmnts.UasServiceRef.UserContextLightweight GetUserContextLightweight(int enterpriseId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserContextLightweight", ReplyAction="http://tempuri.org/IAuthentication/GetUserContextLightweightResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.UserContextLightweight> GetUserContextLightweightAsync(int enterpriseId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRecentUserLoginActivity", ReplyAction="http://tempuri.org/IAuthentication/GetRecentUserLoginActivityResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.UserLoginActivity> GetRecentUserLoginActivity(int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRecentUserLoginActivity", ReplyAction="http://tempuri.org/IAuthentication/GetRecentUserLoginActivityResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.UserLoginActivity>> GetRecentUserLoginActivityAsync(int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSystemConfigsByAppId", ReplyAction="http://tempuri.org/IAuthentication/GetSystemConfigsByAppIdResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> GetSystemConfigsByAppId(int appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSystemConfigsByAppId", ReplyAction="http://tempuri.org/IAuthentication/GetSystemConfigsByAppIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig>> GetSystemConfigsByAppIdAsync(int appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddSystemConfig", ReplyAction="http://tempuri.org/IAuthentication/AddSystemConfigResponse")]
        bool AddSystemConfig(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddSystemConfig", ReplyAction="http://tempuri.org/IAuthentication/AddSystemConfigResponse")]
        System.Threading.Tasks.Task<bool> AddSystemConfigAsync(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateSystemConfig", ReplyAction="http://tempuri.org/IAuthentication/UpdateSystemConfigResponse")]
        bool UpdateSystemConfig(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateSystemConfig", ReplyAction="http://tempuri.org/IAuthentication/UpdateSystemConfigResponse")]
        System.Threading.Tasks.Task<bool> UpdateSystemConfigAsync(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteSystemConfigById", ReplyAction="http://tempuri.org/IAuthentication/DeleteSystemConfigByIdResponse")]
        bool DeleteSystemConfigById(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteSystemConfigById", ReplyAction="http://tempuri.org/IAuthentication/DeleteSystemConfigByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteSystemConfigByIdAsync(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetBaseTypes", ReplyAction="http://tempuri.org/IAuthentication/GetBaseTypesResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.BaseType> GetBaseTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetBaseTypes", ReplyAction="http://tempuri.org/IAuthentication/GetBaseTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.BaseType>> GetBaseTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEnterprises", ReplyAction="http://tempuri.org/IAuthentication/GetEnterprisesResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Enterprise> GetEnterprises();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEnterprises", ReplyAction="http://tempuri.org/IAuthentication/GetEnterprisesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Enterprise>> GetEnterprisesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetAllEnterprises", ReplyAction="http://tempuri.org/IAuthentication/GetAllEnterprisesResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Enterprise> GetAllEnterprises();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetAllEnterprises", ReplyAction="http://tempuri.org/IAuthentication/GetAllEnterprisesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Enterprise>> GetAllEnterprisesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_a_Enterprises", ReplyAction="http://tempuri.org/IAuthentication/List_a_EnterprisesResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<string>> List_a_Enterprises(int entId, int iniIndex, int noDsplyRecs, string sEnterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/List_a_Enterprises", ReplyAction="http://tempuri.org/IAuthentication/List_a_EnterprisesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_a_EnterprisesAsync(int entId, int iniIndex, int noDsplyRecs, string sEnterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEnterpriseStringCSV", ReplyAction="http://tempuri.org/IAuthentication/GetEnterpriseStringCSVResponse")]
        string GetEnterpriseStringCSV(int enterpriseid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEnterpriseStringCSV", ReplyAction="http://tempuri.org/IAuthentication/GetEnterpriseStringCSVResponse")]
        System.Threading.Tasks.Task<string> GetEnterpriseStringCSVAsync(int enterpriseid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEnterprise", ReplyAction="http://tempuri.org/IAuthentication/GetEnterpriseResponse")]
        Assmnts.UasServiceRef.Enterprise GetEnterprise(int enterpriseid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEnterprise", ReplyAction="http://tempuri.org/IAuthentication/GetEnterpriseResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.Enterprise> GetEnterpriseAsync(int enterpriseid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEnterpriseByName", ReplyAction="http://tempuri.org/IAuthentication/GetEnterpriseByNameResponse")]
        Assmnts.UasServiceRef.Enterprise GetEnterpriseByName(string entName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEnterpriseByName", ReplyAction="http://tempuri.org/IAuthentication/GetEnterpriseByNameResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.Enterprise> GetEnterpriseByNameAsync(string entName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateEnterprise", ReplyAction="http://tempuri.org/IAuthentication/UpdateEnterpriseResponse")]
        bool UpdateEnterprise(Assmnts.UasServiceRef.Enterprise ent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateEnterprise", ReplyAction="http://tempuri.org/IAuthentication/UpdateEnterpriseResponse")]
        System.Threading.Tasks.Task<bool> UpdateEnterpriseAsync(Assmnts.UasServiceRef.Enterprise ent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteEnterprise", ReplyAction="http://tempuri.org/IAuthentication/DeleteEnterpriseResponse")]
        bool DeleteEnterprise(int enterpriseid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteEnterprise", ReplyAction="http://tempuri.org/IAuthentication/DeleteEnterpriseResponse")]
        System.Threading.Tasks.Task<bool> DeleteEnterpriseAsync(int enterpriseid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddEnterprise", ReplyAction="http://tempuri.org/IAuthentication/AddEnterpriseResponse")]
        bool AddEnterprise(Assmnts.UasServiceRef.Enterprise ent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddEnterprise", ReplyAction="http://tempuri.org/IAuthentication/AddEnterpriseResponse")]
        System.Threading.Tasks.Task<bool> AddEnterpriseAsync(Assmnts.UasServiceRef.Enterprise ent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetAppEnt", ReplyAction="http://tempuri.org/IAuthentication/GetAppEntResponse")]
        Assmnts.UasServiceRef.AppEnt GetAppEnt(int ApplicationID, int EnterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetAppEnt", ReplyAction="http://tempuri.org/IAuthentication/GetAppEntResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.AppEnt> GetAppEntAsync(int ApplicationID, int EnterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEntAppConfigs", ReplyAction="http://tempuri.org/IAuthentication/GetEntAppConfigsResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.EntAppConfig> GetEntAppConfigs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEntAppConfigs", ReplyAction="http://tempuri.org/IAuthentication/GetEntAppConfigsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.EntAppConfig>> GetEntAppConfigsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEntAppConfigsFiltered", ReplyAction="http://tempuri.org/IAuthentication/GetEntAppConfigsFilteredResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.EntAppConfig> GetEntAppConfigsFiltered(int EnterpriseID, int ApplicationID, string EnumCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEntAppConfigsFiltered", ReplyAction="http://tempuri.org/IAuthentication/GetEntAppConfigsFilteredResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.EntAppConfig>> GetEntAppConfigsFilteredAsync(int EnterpriseID, int ApplicationID, string EnumCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddEntAppConfig", ReplyAction="http://tempuri.org/IAuthentication/AddEntAppConfigResponse")]
        int AddEntAppConfig(Assmnts.UasServiceRef.EntAppConfig cfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddEntAppConfig", ReplyAction="http://tempuri.org/IAuthentication/AddEntAppConfigResponse")]
        System.Threading.Tasks.Task<int> AddEntAppConfigAsync(Assmnts.UasServiceRef.EntAppConfig cfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEntAppConfig", ReplyAction="http://tempuri.org/IAuthentication/GetEntAppConfigResponse")]
        Assmnts.UasServiceRef.EntAppConfig GetEntAppConfig(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEntAppConfig", ReplyAction="http://tempuri.org/IAuthentication/GetEntAppConfigResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.EntAppConfig> GetEntAppConfigAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEntAppConfigByEnumAndEnt", ReplyAction="http://tempuri.org/IAuthentication/GetEntAppConfigByEnumAndEntResponse")]
        Assmnts.UasServiceRef.EntAppConfig GetEntAppConfigByEnumAndEnt(string EnumCode, int EnterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEntAppConfigByEnumAndEnt", ReplyAction="http://tempuri.org/IAuthentication/GetEntAppConfigByEnumAndEntResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.EntAppConfig> GetEntAppConfigByEnumAndEntAsync(string EnumCode, int EnterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEntAppConfigByEntAppAndEnum", ReplyAction="http://tempuri.org/IAuthentication/GetEntAppConfigByEntAppAndEnumResponse")]
        Assmnts.UasServiceRef.EntAppConfig GetEntAppConfigByEntAppAndEnum(int EnterpriseID, int ApplicationID, string EnumCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEntAppConfigByEntAppAndEnum", ReplyAction="http://tempuri.org/IAuthentication/GetEntAppConfigByEntAppAndEnumResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.EntAppConfig> GetEntAppConfigByEntAppAndEnumAsync(int EnterpriseID, int ApplicationID, string EnumCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateEntAppConfig", ReplyAction="http://tempuri.org/IAuthentication/UpdateEntAppConfigResponse")]
        int UpdateEntAppConfig(Assmnts.UasServiceRef.EntAppConfig cfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateEntAppConfig", ReplyAction="http://tempuri.org/IAuthentication/UpdateEntAppConfigResponse")]
        System.Threading.Tasks.Task<int> UpdateEntAppConfigAsync(Assmnts.UasServiceRef.EntAppConfig cfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteEntAppConfig", ReplyAction="http://tempuri.org/IAuthentication/DeleteEntAppConfigResponse")]
        bool DeleteEntAppConfig(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteEntAppConfig", ReplyAction="http://tempuri.org/IAuthentication/DeleteEntAppConfigResponse")]
        System.Threading.Tasks.Task<bool> DeleteEntAppConfigAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListEnrollment", ReplyAction="http://tempuri.org/IAuthentication/ListEnrollmentResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.ActiveEnrollmentSites> ListEnrollment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListEnrollment", ReplyAction="http://tempuri.org/IAuthentication/ListEnrollmentResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.ActiveEnrollmentSites>> ListEnrollmentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListHandout", ReplyAction="http://tempuri.org/IAuthentication/ListHandoutResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.ClientHandout> ListHandout(int formresultId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListHandout", ReplyAction="http://tempuri.org/IAuthentication/ListHandoutResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.ClientHandout>> ListHandoutAsync(int formresultId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroups", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroups", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsByEnterprise", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsByEnterpriseResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroupsByEnterprise(Assmnts.UasServiceRef.Enterprise ent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsByEnterprise", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsByEnterpriseResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsByEnterpriseAsync(Assmnts.UasServiceRef.Enterprise ent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsByEnterpriseID", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsByEnterpriseIDResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroupsByEnterpriseID(int enterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsByEnterpriseID", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsByEnterpriseIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsByEnterpriseIDAsync(int enterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetActiveGroupsByGroupTypeID", ReplyAction="http://tempuri.org/IAuthentication/GetActiveGroupsByGroupTypeIDResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetActiveGroupsByGroupTypeID(int groupTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetActiveGroupsByGroupTypeID", ReplyAction="http://tempuri.org/IAuthentication/GetActiveGroupsByGroupTypeIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetActiveGroupsByGroupTypeIDAsync(int groupTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetActiveGroupsByGroupTypeIDIncludingSelectedI" +
            "nactive", ReplyAction="http://tempuri.org/IAuthentication/GetActiveGroupsByGroupTypeIDIncludingSelectedI" +
            "nactiveResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetActiveGroupsByGroupTypeIDIncludingSelectedInactive(int groupTypeID, int SelectedSiteGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetActiveGroupsByGroupTypeIDIncludingSelectedI" +
            "nactive", ReplyAction="http://tempuri.org/IAuthentication/GetActiveGroupsByGroupTypeIDIncludingSelectedI" +
            "nactiveResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetActiveGroupsByGroupTypeIDIncludingSelectedInactiveAsync(int groupTypeID, int SelectedSiteGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsByEnterpriseIDIncludingGroupZero", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsByEnterpriseIDIncludingGroupZeroRespo" +
            "nse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroupsByEnterpriseIDIncludingGroupZero(int enterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsByEnterpriseIDIncludingGroupZero", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsByEnterpriseIDIncludingGroupZeroRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsByEnterpriseIDIncludingGroupZeroAsync(int enterpriseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsInUserPermissions", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsInUserPermissionsResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroupsInUserPermissions(int entID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsInUserPermissions", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsInUserPermissionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsInUserPermissionsAsync(int entID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsInUserPermissionsDDL", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsInUserPermissionsDDLResponse")]
        System.Collections.Generic.Dictionary<int, string> GetGroupsInUserPermissionsDDL(int entID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsInUserPermissionsDDL", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsInUserPermissionsDDLResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetGroupsInUserPermissionsDDLAsync(int entID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsByGroupNameAndEnterpriseID", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsByGroupNameAndEnterpriseIDResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroupsByGroupNameAndEnterpriseID(string groupName, int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupsByGroupNameAndEnterpriseID", ReplyAction="http://tempuri.org/IAuthentication/GetGroupsByGroupNameAndEnterpriseIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsByGroupNameAndEnterpriseIDAsync(string groupName, int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetChildGroups", ReplyAction="http://tempuri.org/IAuthentication/GetChildGroupsResponse")]
        System.Collections.Generic.List<int> GetChildGroups(int entId, int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetChildGroups", ReplyAction="http://tempuri.org/IAuthentication/GetChildGroupsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetChildGroupsAsync(int entId, int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/IsAuthorizedGroup", ReplyAction="http://tempuri.org/IAuthentication/IsAuthorizedGroupResponse")]
        bool IsAuthorizedGroup(int groupId, int applicationId, int userId, int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/IsAuthorizedGroup", ReplyAction="http://tempuri.org/IAuthentication/IsAuthorizedGroupResponse")]
        System.Threading.Tasks.Task<bool> IsAuthorizedGroupAsync(int groupId, int applicationId, int userId, int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/getGroup", ReplyAction="http://tempuri.org/IAuthentication/getGroupResponse")]
        Assmnts.UasServiceRef.Group getGroup(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/getGroup", ReplyAction="http://tempuri.org/IAuthentication/getGroupResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.Group> getGroupAsync(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateGroup", ReplyAction="http://tempuri.org/IAuthentication/UpdateGroupResponse")]
        bool UpdateGroup(Assmnts.UasServiceRef.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateGroup", ReplyAction="http://tempuri.org/IAuthentication/UpdateGroupResponse")]
        System.Threading.Tasks.Task<bool> UpdateGroupAsync(Assmnts.UasServiceRef.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddGroup", ReplyAction="http://tempuri.org/IAuthentication/AddGroupResponse")]
        int AddGroup(Assmnts.UasServiceRef.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddGroup", ReplyAction="http://tempuri.org/IAuthentication/AddGroupResponse")]
        System.Threading.Tasks.Task<int> AddGroupAsync(Assmnts.UasServiceRef.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteGroup", ReplyAction="http://tempuri.org/IAuthentication/DeleteGroupResponse")]
        bool DeleteGroup(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteGroup", ReplyAction="http://tempuri.org/IAuthentication/DeleteGroupResponse")]
        System.Threading.Tasks.Task<bool> DeleteGroupAsync(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddGroupType", ReplyAction="http://tempuri.org/IAuthentication/AddGroupTypeResponse")]
        bool AddGroupType(Assmnts.UasServiceRef.GroupType groupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddGroupType", ReplyAction="http://tempuri.org/IAuthentication/AddGroupTypeResponse")]
        System.Threading.Tasks.Task<bool> AddGroupTypeAsync(Assmnts.UasServiceRef.GroupType groupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateGroupType", ReplyAction="http://tempuri.org/IAuthentication/UpdateGroupTypeResponse")]
        bool UpdateGroupType(Assmnts.UasServiceRef.GroupType groupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateGroupType", ReplyAction="http://tempuri.org/IAuthentication/UpdateGroupTypeResponse")]
        System.Threading.Tasks.Task<bool> UpdateGroupTypeAsync(Assmnts.UasServiceRef.GroupType groupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteGroupType", ReplyAction="http://tempuri.org/IAuthentication/DeleteGroupTypeResponse")]
        bool DeleteGroupType(int groupTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteGroupType", ReplyAction="http://tempuri.org/IAuthentication/DeleteGroupTypeResponse")]
        System.Threading.Tasks.Task<bool> DeleteGroupTypeAsync(int groupTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupTypes", ReplyAction="http://tempuri.org/IAuthentication/GetGroupTypesResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.GroupType> GetGroupTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupTypes", ReplyAction="http://tempuri.org/IAuthentication/GetGroupTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.GroupType>> GetGroupTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupType", ReplyAction="http://tempuri.org/IAuthentication/GetGroupTypeResponse")]
        Assmnts.UasServiceRef.GroupType GetGroupType(int groupTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupType", ReplyAction="http://tempuri.org/IAuthentication/GetGroupTypeResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.GroupType> GetGroupTypeAsync(int groupTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupTypesByEnterpriseID", ReplyAction="http://tempuri.org/IAuthentication/GetGroupTypesByEnterpriseIDResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.GroupType> GetGroupTypesByEnterpriseID(int enterpriseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupTypesByEnterpriseID", ReplyAction="http://tempuri.org/IAuthentication/GetGroupTypesByEnterpriseIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.GroupType>> GetGroupTypesByEnterpriseIDAsync(int enterpriseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupUserAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsResponse")]
        Assmnts.UasServiceRef.GroupUserAppPermissions GetGroupUserAppPermissions(int groupUserAppPermissionsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupUserAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.GroupUserAppPermissions> GetGroupUserAppPermissionsAsync(int groupUserAppPermissionsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByGroupUserAppId", ReplyAction="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByGroupUserAppIdResp" +
            "onse")]
        Assmnts.UasServiceRef.GroupUserAppPermissions GetGroupUserAppPermissionsByGroupUserAppId(int groupId, int userId, int appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByGroupUserAppId", ReplyAction="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByGroupUserAppIdResp" +
            "onse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.GroupUserAppPermissions> GetGroupUserAppPermissionsByGroupUserAppIdAsync(int groupId, int userId, int appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByUser", ReplyAction="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByUserResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.GroupUserAppPermissions> GetGroupUserAppPermissionsByUser(Assmnts.UasServiceRef.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByUser", ReplyAction="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByUserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.GroupUserAppPermissions>> GetGroupUserAppPermissionsByUserAsync(Assmnts.UasServiceRef.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByUserID", ReplyAction="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByUserIDResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.GroupUserAppPermissions> GetGroupUserAppPermissionsByUserID(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByUserID", ReplyAction="http://tempuri.org/IAuthentication/GetGroupUserAppPermissionsByUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.GroupUserAppPermissions>> GetGroupUserAppPermissionsByUserIDAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserGroupAffiliation", ReplyAction="http://tempuri.org/IAuthentication/GetUserGroupAffiliationResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.GroupApplication> GetUserGroupAffiliation(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetUserGroupAffiliation", ReplyAction="http://tempuri.org/IAuthentication/GetUserGroupAffiliationResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.GroupApplication>> GetUserGroupAffiliationAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateGroupUserAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/UpdateGroupUserAppPermissionsResponse")]
        bool UpdateGroupUserAppPermissions(Assmnts.UasServiceRef.GroupUserAppPermissions guap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateGroupUserAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/UpdateGroupUserAppPermissionsResponse")]
        System.Threading.Tasks.Task<bool> UpdateGroupUserAppPermissionsAsync(Assmnts.UasServiceRef.GroupUserAppPermissions guap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteGroupUserAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/DeleteGroupUserAppPermissionsResponse")]
        bool DeleteGroupUserAppPermissions(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteGroupUserAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/DeleteGroupUserAppPermissionsResponse")]
        System.Threading.Tasks.Task<bool> DeleteGroupUserAppPermissionsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddGroupUserAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/AddGroupUserAppPermissionsResponse")]
        int AddGroupUserAppPermissions(Assmnts.UasServiceRef.GroupUserAppPermissions guap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddGroupUserAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/AddGroupUserAppPermissionsResponse")]
        System.Threading.Tasks.Task<int> AddGroupUserAppPermissionsAsync(Assmnts.UasServiceRef.GroupUserAppPermissions guap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GenerateMinimalGroupUserAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/GenerateMinimalGroupUserAppPermissionsResponse" +
            "")]
        int GenerateMinimalGroupUserAppPermissions(int applicationId, int userId, int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GenerateMinimalGroupUserAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/GenerateMinimalGroupUserAppPermissionsResponse" +
            "")]
        System.Threading.Tasks.Task<int> GenerateMinimalGroupUserAppPermissionsAsync(int applicationId, int userId, int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GenerateMinimalGroupUserAppPermissionsWithGrou" +
            "p", ReplyAction="http://tempuri.org/IAuthentication/GenerateMinimalGroupUserAppPermissionsWithGrou" +
            "pResponse")]
        int GenerateMinimalGroupUserAppPermissionsWithGroup(int applicationId, int groupId, int userId, int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GenerateMinimalGroupUserAppPermissionsWithGrou" +
            "p", ReplyAction="http://tempuri.org/IAuthentication/GenerateMinimalGroupUserAppPermissionsWithGrou" +
            "pResponse")]
        System.Threading.Tasks.Task<int> GenerateMinimalGroupUserAppPermissionsWithGroupAsync(int applicationId, int groupId, int userId, int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListRoleAppPermissionsByRoleID", ReplyAction="http://tempuri.org/IAuthentication/ListRoleAppPermissionsByRoleIDResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions> ListRoleAppPermissionsByRoleID(int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListRoleAppPermissionsByRoleID", ReplyAction="http://tempuri.org/IAuthentication/ListRoleAppPermissionsByRoleIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions>> ListRoleAppPermissionsByRoleIDAsync(int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListActiveRoleAppPermissionsByEnterpriseID", ReplyAction="http://tempuri.org/IAuthentication/ListActiveRoleAppPermissionsByEnterpriseIDResp" +
            "onse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions> ListActiveRoleAppPermissionsByEnterpriseID(int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListActiveRoleAppPermissionsByEnterpriseID", ReplyAction="http://tempuri.org/IAuthentication/ListActiveRoleAppPermissionsByEnterpriseIDResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions>> ListActiveRoleAppPermissionsByEnterpriseIDAsync(int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListActiveRoleAppPermissionsByAppIDEnterpriseI" +
            "D", ReplyAction="http://tempuri.org/IAuthentication/ListActiveRoleAppPermissionsByAppIDEnterpriseI" +
            "DResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions> ListActiveRoleAppPermissionsByAppIDEnterpriseID(int appId, int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListActiveRoleAppPermissionsByAppIDEnterpriseI" +
            "D", ReplyAction="http://tempuri.org/IAuthentication/ListActiveRoleAppPermissionsByAppIDEnterpriseI" +
            "DResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions>> ListActiveRoleAppPermissionsByAppIDEnterpriseIDAsync(int appId, int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListRoleAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/ListRoleAppPermissionsResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions> ListRoleAppPermissions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListRoleAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/ListRoleAppPermissionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions>> ListRoleAppPermissionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRoleAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/GetRoleAppPermissionsResponse")]
        Assmnts.UasServiceRef.RoleAppPermissions GetRoleAppPermissions(int RoleAppPermissionsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRoleAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/GetRoleAppPermissionsResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.RoleAppPermissions> GetRoleAppPermissionsAsync(int RoleAppPermissionsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateRoleAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/UpdateRoleAppPermissionsResponse")]
        bool UpdateRoleAppPermissions(Assmnts.UasServiceRef.RoleAppPermissions guap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateRoleAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/UpdateRoleAppPermissionsResponse")]
        System.Threading.Tasks.Task<bool> UpdateRoleAppPermissionsAsync(Assmnts.UasServiceRef.RoleAppPermissions guap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddRoleAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/AddRoleAppPermissionsResponse")]
        bool AddRoleAppPermissions(Assmnts.UasServiceRef.RoleAppPermissions guap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddRoleAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/AddRoleAppPermissionsResponse")]
        System.Threading.Tasks.Task<bool> AddRoleAppPermissionsAsync(Assmnts.UasServiceRef.RoleAppPermissions guap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/RemoveRoleAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/RemoveRoleAppPermissionsResponse")]
        bool RemoveRoleAppPermissions(int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/RemoveRoleAppPermissions", ReplyAction="http://tempuri.org/IAuthentication/RemoveRoleAppPermissionsResponse")]
        System.Threading.Tasks.Task<bool> RemoveRoleAppPermissionsAsync(int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetApplicationPermission", ReplyAction="http://tempuri.org/IAuthentication/GetApplicationPermissionResponse")]
        Assmnts.UasServiceRef.ApplicationPermission GetApplicationPermission(int ApplicationPermissionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetApplicationPermission", ReplyAction="http://tempuri.org/IAuthentication/GetApplicationPermissionResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.ApplicationPermission> GetApplicationPermissionAsync(int ApplicationPermissionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListApplicationPermissionsByAppID", ReplyAction="http://tempuri.org/IAuthentication/ListApplicationPermissionsByAppIDResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.ApplicationPermission> ListApplicationPermissionsByAppID(int appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ListApplicationPermissionsByAppID", ReplyAction="http://tempuri.org/IAuthentication/ListApplicationPermissionsByAppIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.ApplicationPermission>> ListApplicationPermissionsByAppIDAsync(int appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateApplicationPermission", ReplyAction="http://tempuri.org/IAuthentication/UpdateApplicationPermissionResponse")]
        bool UpdateApplicationPermission(Assmnts.UasServiceRef.ApplicationPermission ap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateApplicationPermission", ReplyAction="http://tempuri.org/IAuthentication/UpdateApplicationPermissionResponse")]
        System.Threading.Tasks.Task<bool> UpdateApplicationPermissionAsync(Assmnts.UasServiceRef.ApplicationPermission ap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddApplicationPermission", ReplyAction="http://tempuri.org/IAuthentication/AddApplicationPermissionResponse")]
        bool AddApplicationPermission(Assmnts.UasServiceRef.ApplicationPermission ap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddApplicationPermission", ReplyAction="http://tempuri.org/IAuthentication/AddApplicationPermissionResponse")]
        System.Threading.Tasks.Task<bool> AddApplicationPermissionAsync(Assmnts.UasServiceRef.ApplicationPermission ap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRoles", ReplyAction="http://tempuri.org/IAuthentication/GetRolesResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Role> GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRoles", ReplyAction="http://tempuri.org/IAuthentication/GetRolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Role>> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRolesByEnterpriseID", ReplyAction="http://tempuri.org/IAuthentication/GetRolesByEnterpriseIDResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Role> GetRolesByEnterpriseID(int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRolesByEnterpriseID", ReplyAction="http://tempuri.org/IAuthentication/GetRolesByEnterpriseIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Role>> GetRolesByEnterpriseIDAsync(int entId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRole", ReplyAction="http://tempuri.org/IAuthentication/GetRoleResponse")]
        Assmnts.UasServiceRef.Role GetRole(int roleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRole", ReplyAction="http://tempuri.org/IAuthentication/GetRoleResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.Role> GetRoleAsync(int roleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRoleByName", ReplyAction="http://tempuri.org/IAuthentication/GetRoleByNameResponse")]
        Assmnts.UasServiceRef.Role GetRoleByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetRoleByName", ReplyAction="http://tempuri.org/IAuthentication/GetRoleByNameResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.Role> GetRoleByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateRole", ReplyAction="http://tempuri.org/IAuthentication/UpdateRoleResponse")]
        bool UpdateRole(Assmnts.UasServiceRef.Role ent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateRole", ReplyAction="http://tempuri.org/IAuthentication/UpdateRoleResponse")]
        System.Threading.Tasks.Task<bool> UpdateRoleAsync(Assmnts.UasServiceRef.Role ent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteRole", ReplyAction="http://tempuri.org/IAuthentication/DeleteRoleResponse")]
        bool DeleteRole(int roleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteRole", ReplyAction="http://tempuri.org/IAuthentication/DeleteRoleResponse")]
        System.Threading.Tasks.Task<bool> DeleteRoleAsync(int roleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddRole", ReplyAction="http://tempuri.org/IAuthentication/AddRoleResponse")]
        bool AddRole(Assmnts.UasServiceRef.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddRole", ReplyAction="http://tempuri.org/IAuthentication/AddRoleResponse")]
        System.Threading.Tasks.Task<bool> AddRoleAsync(Assmnts.UasServiceRef.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetApplications", ReplyAction="http://tempuri.org/IAuthentication/GetApplicationsResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Application> GetApplications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetApplications", ReplyAction="http://tempuri.org/IAuthentication/GetApplicationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Application>> GetApplicationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetApplication", ReplyAction="http://tempuri.org/IAuthentication/GetApplicationResponse")]
        Assmnts.UasServiceRef.Application GetApplication(int applicationid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetApplication", ReplyAction="http://tempuri.org/IAuthentication/GetApplicationResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.Application> GetApplicationAsync(int applicationid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetApplicationByName", ReplyAction="http://tempuri.org/IAuthentication/GetApplicationByNameResponse")]
        Assmnts.UasServiceRef.Application GetApplicationByName(string applicationname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetApplicationByName", ReplyAction="http://tempuri.org/IAuthentication/GetApplicationByNameResponse")]
        System.Threading.Tasks.Task<Assmnts.UasServiceRef.Application> GetApplicationByNameAsync(string applicationname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetApplicationsInUserPermissions", ReplyAction="http://tempuri.org/IAuthentication/GetApplicationsInUserPermissionsResponse")]
        System.Collections.Generic.List<Assmnts.UasServiceRef.Application> GetApplicationsInUserPermissions(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetApplicationsInUserPermissions", ReplyAction="http://tempuri.org/IAuthentication/GetApplicationsInUserPermissionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Application>> GetApplicationsInUserPermissionsAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateApplication", ReplyAction="http://tempuri.org/IAuthentication/UpdateApplicationResponse")]
        bool UpdateApplication(Assmnts.UasServiceRef.Application app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/UpdateApplication", ReplyAction="http://tempuri.org/IAuthentication/UpdateApplicationResponse")]
        System.Threading.Tasks.Task<bool> UpdateApplicationAsync(Assmnts.UasServiceRef.Application app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteApplication", ReplyAction="http://tempuri.org/IAuthentication/DeleteApplicationResponse")]
        bool DeleteApplication(int applicationid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/DeleteApplication", ReplyAction="http://tempuri.org/IAuthentication/DeleteApplicationResponse")]
        System.Threading.Tasks.Task<bool> DeleteApplicationAsync(int applicationid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddApplication", ReplyAction="http://tempuri.org/IAuthentication/AddApplicationResponse")]
        bool AddApplication(Assmnts.UasServiceRef.Application app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AddApplication", ReplyAction="http://tempuri.org/IAuthentication/AddApplicationResponse")]
        System.Threading.Tasks.Task<bool> AddApplicationAsync(Assmnts.UasServiceRef.Application app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEnterpriseConfigID", ReplyAction="http://tempuri.org/IAuthentication/GetEnterpriseConfigIDResponse")]
        int GetEnterpriseConfigID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetEnterpriseConfigID", ReplyAction="http://tempuri.org/IAuthentication/GetEnterpriseConfigIDResponse")]
        System.Threading.Tasks.Task<int> GetEnterpriseConfigIDAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUserInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string getUserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int applicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string info;
        
        public GetUserInfoRequest() {
        }
        
        public GetUserInfoRequest(string userId, string getUserId, int applicationId, string info) {
            this.userId = userId;
            this.getUserId = getUserId;
            this.applicationId = applicationId;
            this.info = info;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUserInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetUserInfoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string info;
        
        public GetUserInfoResponse() {
        }
        
        public GetUserInfoResponse(bool GetUserInfoResult, string info) {
            this.GetUserInfoResult = GetUserInfoResult;
            this.info = info;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllUsers", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int applicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string users;
        
        public GetAllUsersRequest() {
        }
        
        public GetAllUsersRequest(string userId, int applicationId, string users) {
            this.userId = userId;
            this.applicationId = applicationId;
            this.users = users;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllUsersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetAllUsersResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string users;
        
        public GetAllUsersResponse() {
        }
        
        public GetAllUsersResponse(bool GetAllUsersResult, string users) {
            this.GetAllUsersResult = GetAllUsersResult;
            this.users = users;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="List_Enrollment_Sites", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class List_Enrollment_SitesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int iniIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int noDsplyRecs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string zip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string county;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int count;
        
        public List_Enrollment_SitesRequest() {
        }
        
        public List_Enrollment_SitesRequest(int iniIndex, int noDsplyRecs, string city, string zip, string county, int count) {
            this.iniIndex = iniIndex;
            this.noDsplyRecs = noDsplyRecs;
            this.city = city;
            this.zip = zip;
            this.county = county;
            this.count = count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="List_Enrollment_SitesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class List_Enrollment_SitesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> List_Enrollment_SitesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int count;
        
        public List_Enrollment_SitesResponse() {
        }
        
        public List_Enrollment_SitesResponse(System.Collections.Generic.List<System.Collections.Generic.List<string>> List_Enrollment_SitesResult, int count) {
            this.List_Enrollment_SitesResult = List_Enrollment_SitesResult;
            this.count = count;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationChannel : Assmnts.UasServiceRef.IAuthentication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationClient : System.ServiceModel.ClientBase<Assmnts.UasServiceRef.IAuthentication>, Assmnts.UasServiceRef.IAuthentication {
        
        public AuthenticationClient() {
        }
        
        public AuthenticationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.RoleType> GetRoleTypes() {
            return base.Channel.GetRoleTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.RoleType>> GetRoleTypesAsync() {
            return base.Channel.GetRoleTypesAsync();
        }
        
        public bool AddUserProfile(Assmnts.UasServiceRef.UserProfile profile) {
            return base.Channel.AddUserProfile(profile);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserProfileAsync(Assmnts.UasServiceRef.UserProfile profile) {
            return base.Channel.AddUserProfileAsync(profile);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.UserProfile> GetUserProfiles(int profileConfigId) {
            return base.Channel.GetUserProfiles(profileConfigId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.UserProfile>> GetUserProfilesAsync(int profileConfigId) {
            return base.Channel.GetUserProfilesAsync(profileConfigId);
        }
        
        public Assmnts.UasServiceRef.SecretQuestion GetSecretQuestion(int scrtQstnId) {
            return base.Channel.GetSecretQuestion(scrtQstnId);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.SecretQuestion> GetSecretQuestionAsync(int scrtQstnId) {
            return base.Channel.GetSecretQuestionAsync(scrtQstnId);
        }
        
        public System.Collections.Generic.List<int> GetSecretQuestionIDs(int langId) {
            return base.Channel.GetSecretQuestionIDs(langId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetSecretQuestionIDsAsync(int langId) {
            return base.Channel.GetSecretQuestionIDsAsync(langId);
        }
        
        public bool AddSecretQuestionAnswer(Assmnts.UasServiceRef.SecretQuestionAnswer ans) {
            return base.Channel.AddSecretQuestionAnswer(ans);
        }
        
        public System.Threading.Tasks.Task<bool> AddSecretQuestionAnswerAsync(Assmnts.UasServiceRef.SecretQuestionAnswer ans) {
            return base.Channel.AddSecretQuestionAnswerAsync(ans);
        }
        
        public System.Collections.Generic.List<int> GetSecretQuestionIDsByUser(int userId) {
            return base.Channel.GetSecretQuestionIDsByUser(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetSecretQuestionIDsByUserAsync(int userId) {
            return base.Channel.GetSecretQuestionIDsByUserAsync(userId);
        }
        
        public System.Collections.Generic.List<string> GetSecretQuestionAnswersByUser(int userId) {
            return base.Channel.GetSecretQuestionAnswersByUser(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetSecretQuestionAnswersByUserAsync(int userId) {
            return base.Channel.GetSecretQuestionAnswersByUserAsync(userId);
        }
        
        public bool ResetSecretQuestionAnswers(int userId) {
            return base.Channel.ResetSecretQuestionAnswers(userId);
        }
        
        public System.Threading.Tasks.Task<bool> ResetSecretQuestionAnswersAsync(int userId) {
            return base.Channel.ResetSecretQuestionAnswersAsync(userId);
        }
        
        public Assmnts.UasServiceRef.Language GetLanguageByTwoLetterISOCode(string isoCode) {
            return base.Channel.GetLanguageByTwoLetterISOCode(isoCode);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.Language> GetLanguageByTwoLetterISOCodeAsync(string isoCode) {
            return base.Channel.GetLanguageByTwoLetterISOCodeAsync(isoCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Assmnts.UasServiceRef.GetUserInfoResponse Assmnts.UasServiceRef.IAuthentication.GetUserInfo(Assmnts.UasServiceRef.GetUserInfoRequest request) {
            return base.Channel.GetUserInfo(request);
        }
        
        public bool GetUserInfo(string userId, string getUserId, int applicationId, ref string info) {
            Assmnts.UasServiceRef.GetUserInfoRequest inValue = new Assmnts.UasServiceRef.GetUserInfoRequest();
            inValue.userId = userId;
            inValue.getUserId = getUserId;
            inValue.applicationId = applicationId;
            inValue.info = info;
            Assmnts.UasServiceRef.GetUserInfoResponse retVal = ((Assmnts.UasServiceRef.IAuthentication)(this)).GetUserInfo(inValue);
            info = retVal.info;
            return retVal.GetUserInfoResult;
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.GetUserInfoResponse> GetUserInfoAsync(Assmnts.UasServiceRef.GetUserInfoRequest request) {
            return base.Channel.GetUserInfoAsync(request);
        }
        
        public bool CreateUser(string userId, string userData, int applicationId) {
            return base.Channel.CreateUser(userId, userData, applicationId);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(string userId, string userData, int applicationId) {
            return base.Channel.CreateUserAsync(userId, userData, applicationId);
        }
        
        public bool UpdateUser(string userId, string userData, int applicationId) {
            return base.Channel.UpdateUser(userId, userData, applicationId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(string userId, string userData, int applicationId) {
            return base.Channel.UpdateUserAsync(userId, userData, applicationId);
        }
        
        public bool DeleteUserByUserName(string userId, string userIdToDelete, int applicationId) {
            return base.Channel.DeleteUserByUserName(userId, userIdToDelete, applicationId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserByUserNameAsync(string userId, string userIdToDelete, int applicationId) {
            return base.Channel.DeleteUserByUserNameAsync(userId, userIdToDelete, applicationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Assmnts.UasServiceRef.GetAllUsersResponse Assmnts.UasServiceRef.IAuthentication.GetAllUsers(Assmnts.UasServiceRef.GetAllUsersRequest request) {
            return base.Channel.GetAllUsers(request);
        }
        
        public bool GetAllUsers(string userId, int applicationId, ref string users) {
            Assmnts.UasServiceRef.GetAllUsersRequest inValue = new Assmnts.UasServiceRef.GetAllUsersRequest();
            inValue.userId = userId;
            inValue.applicationId = applicationId;
            inValue.users = users;
            Assmnts.UasServiceRef.GetAllUsersResponse retVal = ((Assmnts.UasServiceRef.IAuthentication)(this)).GetAllUsers(inValue);
            users = retVal.users;
            return retVal.GetAllUsersResult;
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.GetAllUsersResponse> GetAllUsersAsync(Assmnts.UasServiceRef.GetAllUsersRequest request) {
            return base.Channel.GetAllUsersAsync(request);
        }
        
        public void UpdateSentLockoutEmail(int userId, bool locked) {
            base.Channel.UpdateSentLockoutEmail(userId, locked);
        }
        
        public System.Threading.Tasks.Task UpdateSentLockoutEmailAsync(int userId, bool locked) {
            return base.Channel.UpdateSentLockoutEmailAsync(userId, locked);
        }
        
        public System.Nullable<System.DateTime> GetLastLoginTime(string userName) {
            return base.Channel.GetLastLoginTime(userName);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetLastLoginTimeAsync(string userName) {
            return base.Channel.GetLastLoginTimeAsync(userName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Assmnts.UasServiceRef.List_Enrollment_SitesResponse Assmnts.UasServiceRef.IAuthentication.List_Enrollment_Sites(Assmnts.UasServiceRef.List_Enrollment_SitesRequest request) {
            return base.Channel.List_Enrollment_Sites(request);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> List_Enrollment_Sites(int iniIndex, int noDsplyRecs, string city, string zip, string county, ref int count) {
            Assmnts.UasServiceRef.List_Enrollment_SitesRequest inValue = new Assmnts.UasServiceRef.List_Enrollment_SitesRequest();
            inValue.iniIndex = iniIndex;
            inValue.noDsplyRecs = noDsplyRecs;
            inValue.city = city;
            inValue.zip = zip;
            inValue.county = county;
            inValue.count = count;
            Assmnts.UasServiceRef.List_Enrollment_SitesResponse retVal = ((Assmnts.UasServiceRef.IAuthentication)(this)).List_Enrollment_Sites(inValue);
            count = retVal.count;
            return retVal.List_Enrollment_SitesResult;
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.List_Enrollment_SitesResponse> List_Enrollment_SitesAsync(Assmnts.UasServiceRef.List_Enrollment_SitesRequest request) {
            return base.Channel.List_Enrollment_SitesAsync(request);
        }
        
        public string GetADAPIdentifier(int UAS_ID, int EnterpriseID) {
            return base.Channel.GetADAPIdentifier(UAS_ID, EnterpriseID);
        }
        
        public System.Threading.Tasks.Task<string> GetADAPIdentifierAsync(int UAS_ID, int EnterpriseID) {
            return base.Channel.GetADAPIdentifierAsync(UAS_ID, EnterpriseID);
        }
        
        public string GetExistingAdapIdentifier(int UAS_ID, int EnterpriseID) {
            return base.Channel.GetExistingAdapIdentifier(UAS_ID, EnterpriseID);
        }
        
        public System.Threading.Tasks.Task<string> GetExistingAdapIdentifierAsync(int UAS_ID, int EnterpriseID) {
            return base.Channel.GetExistingAdapIdentifierAsync(UAS_ID, EnterpriseID);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> List_people_Users(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string adapId, string ssn, string esNumber, string dob) {
            return base.Channel.List_people_Users(userID, entId, iniIndex, noDsplyRecs, first, last, adapId, ssn, esNumber, dob);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_people_UsersAsync(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string adapId, string ssn, string esNumber, string dob) {
            return base.Channel.List_people_UsersAsync(userID, entId, iniIndex, noDsplyRecs, first, last, adapId, ssn, esNumber, dob);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> List_CSS_people_Users(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string loginId, string email) {
            return base.Channel.List_CSS_people_Users(userID, entId, iniIndex, noDsplyRecs, first, last, loginId, email);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_CSS_people_UsersAsync(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string loginId, string email) {
            return base.Channel.List_CSS_people_UsersAsync(userID, entId, iniIndex, noDsplyRecs, first, last, loginId, email);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> ListUsersClientSearch(string searchContext, int skipCount, int takeCount, string firstName, string lastName, string DOB, string SSN, bool noSSN) {
            return base.Channel.ListUsersClientSearch(searchContext, skipCount, takeCount, firstName, lastName, DOB, SSN, noSSN);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> ListUsersClientSearchAsync(string searchContext, int skipCount, int takeCount, string firstName, string lastName, string DOB, string SSN, bool noSSN) {
            return base.Channel.ListUsersClientSearchAsync(searchContext, skipCount, takeCount, firstName, lastName, DOB, SSN, noSSN);
        }
        
        public string UpdateUserGroup(Assmnts.UasServiceRef.ClientMoveParameters updateParameters) {
            return base.Channel.UpdateUserGroup(updateParameters);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserGroupAsync(Assmnts.UasServiceRef.ClientMoveParameters updateParameters) {
            return base.Channel.UpdateUserGroupAsync(updateParameters);
        }
        
        public System.Collections.Generic.List<int> GetEmailUsers(int userId) {
            return base.Channel.GetEmailUsers(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetEmailUsersAsync(int userId) {
            return base.Channel.GetEmailUsersAsync(userId);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> List_Email_Users(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string emailAddress, string esNumber) {
            return base.Channel.List_Email_Users(userID, entId, iniIndex, noDsplyRecs, first, last, emailAddress, esNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_Email_UsersAsync(int userID, int entId, int iniIndex, int noDsplyRecs, string first, string last, string emailAddress, string esNumber) {
            return base.Channel.List_Email_UsersAsync(userID, entId, iniIndex, noDsplyRecs, first, last, emailAddress, esNumber);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort> List_ENWorkers(int enterpriseid, int groupID) {
            return base.Channel.List_ENWorkers(enterpriseid, groupID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort>> List_ENWorkersAsync(int enterpriseid, int groupID) {
            return base.Channel.List_ENWorkersAsync(enterpriseid, groupID);
        }
        
        public bool IsEnrollmentWorker(int userID) {
            return base.Channel.IsEnrollmentWorker(userID);
        }
        
        public System.Threading.Tasks.Task<bool> IsEnrollmentWorkerAsync(int userID) {
            return base.Channel.IsEnrollmentWorkerAsync(userID);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionGroup> ListPermissionGroupsByApplicationId(int appId) {
            return base.Channel.ListPermissionGroupsByApplicationId(appId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionGroup>> ListPermissionGroupsByApplicationIdAsync(int appId) {
            return base.Channel.ListPermissionGroupsByApplicationIdAsync(appId);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionGroup> ListPermissionGroups() {
            return base.Channel.ListPermissionGroups();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionGroup>> ListPermissionGroupsAsync() {
            return base.Channel.ListPermissionGroupsAsync();
        }
        
        public Assmnts.UasServiceRef.PermissionGroup GetPermissionGroupById(int id) {
            return base.Channel.GetPermissionGroupById(id);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.PermissionGroup> GetPermissionGroupByIdAsync(int id) {
            return base.Channel.GetPermissionGroupByIdAsync(id);
        }
        
        public int AddPermissionGroup(Assmnts.UasServiceRef.PermissionGroup pg) {
            return base.Channel.AddPermissionGroup(pg);
        }
        
        public System.Threading.Tasks.Task<int> AddPermissionGroupAsync(Assmnts.UasServiceRef.PermissionGroup pg) {
            return base.Channel.AddPermissionGroupAsync(pg);
        }
        
        public bool DeletePermissionGroupById(int id) {
            return base.Channel.DeletePermissionGroupById(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePermissionGroupByIdAsync(int id) {
            return base.Channel.DeletePermissionGroupByIdAsync(id);
        }
        
        public bool UpdatePermissionGroup(Assmnts.UasServiceRef.PermissionGroup pg) {
            return base.Channel.UpdatePermissionGroup(pg);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePermissionGroupAsync(Assmnts.UasServiceRef.PermissionGroup pg) {
            return base.Channel.UpdatePermissionGroupAsync(pg);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionCode> ListPermissionCodes(int permGroupId) {
            return base.Channel.ListPermissionCodes(permGroupId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.PermissionCode>> ListPermissionCodesAsync(int permGroupId) {
            return base.Channel.ListPermissionCodesAsync(permGroupId);
        }
        
        public Assmnts.UasServiceRef.PermissionCode GetPermissionCodeById(int permCodeId) {
            return base.Channel.GetPermissionCodeById(permCodeId);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.PermissionCode> GetPermissionCodeByIdAsync(int permCodeId) {
            return base.Channel.GetPermissionCodeByIdAsync(permCodeId);
        }
        
        public int AddPermissionCode(Assmnts.UasServiceRef.PermissionCode pg) {
            return base.Channel.AddPermissionCode(pg);
        }
        
        public System.Threading.Tasks.Task<int> AddPermissionCodeAsync(Assmnts.UasServiceRef.PermissionCode pg) {
            return base.Channel.AddPermissionCodeAsync(pg);
        }
        
        public bool DeletePermissionCodeById(int id) {
            return base.Channel.DeletePermissionCodeById(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePermissionCodeByIdAsync(int id) {
            return base.Channel.DeletePermissionCodeByIdAsync(id);
        }
        
        public bool UpdatePermissionCode(Assmnts.UasServiceRef.PermissionCode pg) {
            return base.Channel.UpdatePermissionCode(pg);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePermissionCodeAsync(Assmnts.UasServiceRef.PermissionCode pg) {
            return base.Channel.UpdatePermissionCodeAsync(pg);
        }
        
        public int SecureDomain(string userDomain) {
            return base.Channel.SecureDomain(userDomain);
        }
        
        public System.Threading.Tasks.Task<int> SecureDomainAsync(string userDomain) {
            return base.Channel.SecureDomainAsync(userDomain);
        }
        
        public Assmnts.UasServiceRef.User CheckActiveUser(int userId, string tempPassword) {
            return base.Channel.CheckActiveUser(userId, tempPassword);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.User> CheckActiveUserAsync(int userId, string tempPassword) {
            return base.Channel.CheckActiveUserAsync(userId, tempPassword);
        }
        
        public string AuthenticateUser(string passkey, string application, string domainid, string loginid, string password, string sessiondata, string timestamp, string signature, string ipAddress) {
            return base.Channel.AuthenticateUser(passkey, application, domainid, loginid, password, sessiondata, timestamp, signature, ipAddress);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateUserAsync(string passkey, string application, string domainid, string loginid, string password, string sessiondata, string timestamp, string signature, string ipAddress) {
            return base.Channel.AuthenticateUserAsync(passkey, application, domainid, loginid, password, sessiondata, timestamp, signature, ipAddress);
        }
        
        public string SignUserOut(string passkey, string loginid) {
            return base.Channel.SignUserOut(passkey, loginid);
        }
        
        public System.Threading.Tasks.Task<string> SignUserOutAsync(string passkey, string loginid) {
            return base.Channel.SignUserOutAsync(passkey, loginid);
        }
        
        public string SsoLogin(string sessionId, string ipAddress, int applicationId, string applicationSessionId) {
            return base.Channel.SsoLogin(sessionId, ipAddress, applicationId, applicationSessionId);
        }
        
        public System.Threading.Tasks.Task<string> SsoLoginAsync(string sessionId, string ipAddress, int applicationId, string applicationSessionId) {
            return base.Channel.SsoLoginAsync(sessionId, ipAddress, applicationId, applicationSessionId);
        }
        
        public string SsoLogout(int userId, string sessionId, int applicationId, string ipAddress) {
            return base.Channel.SsoLogout(userId, sessionId, applicationId, ipAddress);
        }
        
        public System.Threading.Tasks.Task<string> SsoLogoutAsync(int userId, string sessionId, int applicationId, string ipAddress) {
            return base.Channel.SsoLogoutAsync(userId, sessionId, applicationId, ipAddress);
        }
        
        public string CheckUserLoginStatus(string passkey, string loginid) {
            return base.Channel.CheckUserLoginStatus(passkey, loginid);
        }
        
        public System.Threading.Tasks.Task<string> CheckUserLoginStatusAsync(string passkey, string loginid) {
            return base.Channel.CheckUserLoginStatusAsync(passkey, loginid);
        }
        
        public int AuthenticateAdminUser(string passkey, string loginid, string password, string sessiondata) {
            return base.Channel.AuthenticateAdminUser(passkey, loginid, password, sessiondata);
        }
        
        public System.Threading.Tasks.Task<int> AuthenticateAdminUserAsync(string passkey, string loginid, string password, string sessiondata) {
            return base.Channel.AuthenticateAdminUserAsync(passkey, loginid, password, sessiondata);
        }
        
        public bool IsUserLoginIDUnique(string LoginID) {
            return base.Channel.IsUserLoginIDUnique(LoginID);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserLoginIDUniqueAsync(string LoginID) {
            return base.Channel.IsUserLoginIDUniqueAsync(LoginID);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort> GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort>> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort> GetUsersByEnterpriseId(int entId) {
            return base.Channel.GetUsersByEnterpriseId(entId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.UserDisplayShort>> GetUsersByEnterpriseIdAsync(int entId) {
            return base.Channel.GetUsersByEnterpriseIdAsync(entId);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> List_limited_Users(
                    int userID, 
                    int entId, 
                    int iniIndex, 
                    int noDsplyRecs, 
                    string log, 
                    string first, 
                    string last, 
                    string email, 
                    string status, 
                    int groupId, 
                    int roleId, 
                    int applicationId, 
                    string dob, 
                    string ssn, 
                    string adapId, 
                    string groupIdExplicit) {
            return base.Channel.List_limited_Users(userID, entId, iniIndex, noDsplyRecs, log, first, last, email, status, groupId, roleId, applicationId, dob, ssn, adapId, groupIdExplicit);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_limited_UsersAsync(
                    int userID, 
                    int entId, 
                    int iniIndex, 
                    int noDsplyRecs, 
                    string log, 
                    string first, 
                    string last, 
                    string email, 
                    string status, 
                    int groupId, 
                    int roleId, 
                    int applicationId, 
                    string dob, 
                    string ssn, 
                    string adapId, 
                    string groupIdExplicit) {
            return base.Channel.List_limited_UsersAsync(userID, entId, iniIndex, noDsplyRecs, log, first, last, email, status, groupId, roleId, applicationId, dob, ssn, adapId, groupIdExplicit);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> List_simple_Users(
                    int userID, 
                    int entId, 
                    int iniIndex, 
                    int noDsplyRecs, 
                    string log, 
                    string first, 
                    string last, 
                    string email, 
                    string status, 
                    int groupId, 
                    int roleId, 
                    int applicationId, 
                    string dob, 
                    string ssn, 
                    string adapId, 
                    string groupIdExplicit) {
            return base.Channel.List_simple_Users(userID, entId, iniIndex, noDsplyRecs, log, first, last, email, status, groupId, roleId, applicationId, dob, ssn, adapId, groupIdExplicit);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_simple_UsersAsync(
                    int userID, 
                    int entId, 
                    int iniIndex, 
                    int noDsplyRecs, 
                    string log, 
                    string first, 
                    string last, 
                    string email, 
                    string status, 
                    int groupId, 
                    int roleId, 
                    int applicationId, 
                    string dob, 
                    string ssn, 
                    string adapId, 
                    string groupIdExplicit) {
            return base.Channel.List_simple_UsersAsync(userID, entId, iniIndex, noDsplyRecs, log, first, last, email, status, groupId, roleId, applicationId, dob, ssn, adapId, groupIdExplicit);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> List_limited_LogAccess(int entId, int iniIndex, int noDsplyRecs, string viewer, string viewed, string table) {
            return base.Channel.List_limited_LogAccess(entId, iniIndex, noDsplyRecs, viewer, viewed, table);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_limited_LogAccessAsync(int entId, int iniIndex, int noDsplyRecs, string viewer, string viewed, string table) {
            return base.Channel.List_limited_LogAccessAsync(entId, iniIndex, noDsplyRecs, viewer, viewed, table);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> List_limited_PermLogs(int entId, int iniIndex, int noDsplyRecs, string allrec, string permission, string user, string modified, string app) {
            return base.Channel.List_limited_PermLogs(entId, iniIndex, noDsplyRecs, allrec, permission, user, modified, app);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_limited_PermLogsAsync(int entId, int iniIndex, int noDsplyRecs, string allrec, string permission, string user, string modified, string app) {
            return base.Channel.List_limited_PermLogsAsync(entId, iniIndex, noDsplyRecs, allrec, permission, user, modified, app);
        }
        
        public bool Insert_LogAccess(Assmnts.UasServiceRef.LogAccess la) {
            return base.Channel.Insert_LogAccess(la);
        }
        
        public System.Threading.Tasks.Task<bool> Insert_LogAccessAsync(Assmnts.UasServiceRef.LogAccess la) {
            return base.Channel.Insert_LogAccessAsync(la);
        }
        
        public bool Insert_Multiple_LogAccesses(System.Collections.Generic.List<Assmnts.UasServiceRef.LogAccess> la) {
            return base.Channel.Insert_Multiple_LogAccesses(la);
        }
        
        public System.Threading.Tasks.Task<bool> Insert_Multiple_LogAccessesAsync(System.Collections.Generic.List<Assmnts.UasServiceRef.LogAccess> la) {
            return base.Channel.Insert_Multiple_LogAccessesAsync(la);
        }
        
        public Assmnts.UasServiceRef.UserDisplay GetUserDisplay(int userid) {
            return base.Channel.GetUserDisplay(userid);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.UserDisplay> GetUserDisplayAsync(int userid) {
            return base.Channel.GetUserDisplayAsync(userid);
        }
        
        public Assmnts.UasServiceRef.UserDisplay GetUserDisplayByLoginId(string loginId) {
            return base.Channel.GetUserDisplayByLoginId(loginId);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.UserDisplay> GetUserDisplayByLoginIdAsync(string loginId) {
            return base.Channel.GetUserDisplayByLoginIdAsync(loginId);
        }
        
        public string GetUserStringCSV(int userid) {
            return base.Channel.GetUserStringCSV(userid);
        }
        
        public System.Threading.Tasks.Task<string> GetUserStringCSVAsync(int userid) {
            return base.Channel.GetUserStringCSVAsync(userid);
        }
        
        public Assmnts.UasServiceRef.User GetUser(int userid) {
            return base.Channel.GetUser(userid);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.User> GetUserAsync(int userid) {
            return base.Channel.GetUserAsync(userid);
        }
        
        public Assmnts.UasServiceRef.User GetUserByLoginID(string loginId) {
            return base.Channel.GetUserByLoginID(loginId);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.User> GetUserByLoginIDAsync(string loginId) {
            return base.Channel.GetUserByLoginIDAsync(loginId);
        }
        
        public Assmnts.UasServiceRef.User GetUserByNameAndBirthday(string firstName, string lastName, System.Nullable<System.DateTime> dob) {
            return base.Channel.GetUserByNameAndBirthday(firstName, lastName, dob);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.User> GetUserByNameAndBirthdayAsync(string firstName, string lastName, System.Nullable<System.DateTime> dob) {
            return base.Channel.GetUserByNameAndBirthdayAsync(firstName, lastName, dob);
        }
        
        public int GetUserIDByEmail(string email) {
            return base.Channel.GetUserIDByEmail(email);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIDByEmailAsync(string email) {
            return base.Channel.GetUserIDByEmailAsync(email);
        }
        
        public bool UpdateUserDisplay(Assmnts.UasServiceRef.UserDisplay usr) {
            return base.Channel.UpdateUserDisplay(usr);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserDisplayAsync(Assmnts.UasServiceRef.UserDisplay usr) {
            return base.Channel.UpdateUserDisplayAsync(usr);
        }
        
        public bool UpdateUserPassword(Assmnts.UasServiceRef.UserDisplay usr) {
            return base.Channel.UpdateUserPassword(usr);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserPasswordAsync(Assmnts.UasServiceRef.UserDisplay usr) {
            return base.Channel.UpdateUserPasswordAsync(usr);
        }
        
        public bool UpdateUserKey(Assmnts.UasServiceRef.UserDisplay usr) {
            return base.Channel.UpdateUserKey(usr);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserKeyAsync(Assmnts.UasServiceRef.UserDisplay usr) {
            return base.Channel.UpdateUserKeyAsync(usr);
        }
        
        public bool AddUser(Assmnts.UasServiceRef.UserDisplay usr) {
            return base.Channel.AddUser(usr);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(Assmnts.UasServiceRef.UserDisplay usr) {
            return base.Channel.AddUserAsync(usr);
        }
        
        public bool DeleteUser(int userid) {
            return base.Channel.DeleteUser(userid);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int userid) {
            return base.Channel.DeleteUserAsync(userid);
        }
        
        public string GetFirstContactableEmail(int userId) {
            return base.Channel.GetFirstContactableEmail(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetFirstContactableEmailAsync(int userId) {
            return base.Channel.GetFirstContactableEmailAsync(userId);
        }
        
        public int CountUsers() {
            return base.Channel.CountUsers();
        }
        
        public System.Threading.Tasks.Task<int> CountUsersAsync() {
            return base.Channel.CountUsersAsync();
        }
        
        public bool SignUsersOut(string sessionid) {
            return base.Channel.SignUsersOut(sessionid);
        }
        
        public System.Threading.Tasks.Task<bool> SignUsersOutAsync(string sessionid) {
            return base.Channel.SignUsersOutAsync(sessionid);
        }
        
        public Assmnts.UasServiceRef.UserContextLightweight GetUserContextLightweight(int enterpriseId, int userId) {
            return base.Channel.GetUserContextLightweight(enterpriseId, userId);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.UserContextLightweight> GetUserContextLightweightAsync(int enterpriseId, int userId) {
            return base.Channel.GetUserContextLightweightAsync(enterpriseId, userId);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.UserLoginActivity> GetRecentUserLoginActivity(int count) {
            return base.Channel.GetRecentUserLoginActivity(count);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.UserLoginActivity>> GetRecentUserLoginActivityAsync(int count) {
            return base.Channel.GetRecentUserLoginActivityAsync(count);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> GetSystemConfigsByAppId(int appid) {
            return base.Channel.GetSystemConfigsByAppId(appid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig>> GetSystemConfigsByAppIdAsync(int appid) {
            return base.Channel.GetSystemConfigsByAppIdAsync(appid);
        }
        
        public bool AddSystemConfig(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg) {
            return base.Channel.AddSystemConfig(syscfg);
        }
        
        public System.Threading.Tasks.Task<bool> AddSystemConfigAsync(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg) {
            return base.Channel.AddSystemConfigAsync(syscfg);
        }
        
        public bool UpdateSystemConfig(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg) {
            return base.Channel.UpdateSystemConfig(syscfg);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSystemConfigAsync(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg) {
            return base.Channel.UpdateSystemConfigAsync(syscfg);
        }
        
        public bool DeleteSystemConfigById(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg) {
            return base.Channel.DeleteSystemConfigById(syscfg);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSystemConfigByIdAsync(System.Collections.Generic.List<Assmnts.UasServiceRef.SystemConfig> syscfg) {
            return base.Channel.DeleteSystemConfigByIdAsync(syscfg);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.BaseType> GetBaseTypes() {
            return base.Channel.GetBaseTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.BaseType>> GetBaseTypesAsync() {
            return base.Channel.GetBaseTypesAsync();
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Enterprise> GetEnterprises() {
            return base.Channel.GetEnterprises();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Enterprise>> GetEnterprisesAsync() {
            return base.Channel.GetEnterprisesAsync();
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Enterprise> GetAllEnterprises() {
            return base.Channel.GetAllEnterprises();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Enterprise>> GetAllEnterprisesAsync() {
            return base.Channel.GetAllEnterprisesAsync();
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> List_a_Enterprises(int entId, int iniIndex, int noDsplyRecs, string sEnterprise) {
            return base.Channel.List_a_Enterprises(entId, iniIndex, noDsplyRecs, sEnterprise);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> List_a_EnterprisesAsync(int entId, int iniIndex, int noDsplyRecs, string sEnterprise) {
            return base.Channel.List_a_EnterprisesAsync(entId, iniIndex, noDsplyRecs, sEnterprise);
        }
        
        public string GetEnterpriseStringCSV(int enterpriseid) {
            return base.Channel.GetEnterpriseStringCSV(enterpriseid);
        }
        
        public System.Threading.Tasks.Task<string> GetEnterpriseStringCSVAsync(int enterpriseid) {
            return base.Channel.GetEnterpriseStringCSVAsync(enterpriseid);
        }
        
        public Assmnts.UasServiceRef.Enterprise GetEnterprise(int enterpriseid) {
            return base.Channel.GetEnterprise(enterpriseid);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.Enterprise> GetEnterpriseAsync(int enterpriseid) {
            return base.Channel.GetEnterpriseAsync(enterpriseid);
        }
        
        public Assmnts.UasServiceRef.Enterprise GetEnterpriseByName(string entName) {
            return base.Channel.GetEnterpriseByName(entName);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.Enterprise> GetEnterpriseByNameAsync(string entName) {
            return base.Channel.GetEnterpriseByNameAsync(entName);
        }
        
        public bool UpdateEnterprise(Assmnts.UasServiceRef.Enterprise ent) {
            return base.Channel.UpdateEnterprise(ent);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEnterpriseAsync(Assmnts.UasServiceRef.Enterprise ent) {
            return base.Channel.UpdateEnterpriseAsync(ent);
        }
        
        public bool DeleteEnterprise(int enterpriseid) {
            return base.Channel.DeleteEnterprise(enterpriseid);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEnterpriseAsync(int enterpriseid) {
            return base.Channel.DeleteEnterpriseAsync(enterpriseid);
        }
        
        public bool AddEnterprise(Assmnts.UasServiceRef.Enterprise ent) {
            return base.Channel.AddEnterprise(ent);
        }
        
        public System.Threading.Tasks.Task<bool> AddEnterpriseAsync(Assmnts.UasServiceRef.Enterprise ent) {
            return base.Channel.AddEnterpriseAsync(ent);
        }
        
        public Assmnts.UasServiceRef.AppEnt GetAppEnt(int ApplicationID, int EnterpriseID) {
            return base.Channel.GetAppEnt(ApplicationID, EnterpriseID);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.AppEnt> GetAppEntAsync(int ApplicationID, int EnterpriseID) {
            return base.Channel.GetAppEntAsync(ApplicationID, EnterpriseID);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.EntAppConfig> GetEntAppConfigs() {
            return base.Channel.GetEntAppConfigs();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.EntAppConfig>> GetEntAppConfigsAsync() {
            return base.Channel.GetEntAppConfigsAsync();
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.EntAppConfig> GetEntAppConfigsFiltered(int EnterpriseID, int ApplicationID, string EnumCode) {
            return base.Channel.GetEntAppConfigsFiltered(EnterpriseID, ApplicationID, EnumCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.EntAppConfig>> GetEntAppConfigsFilteredAsync(int EnterpriseID, int ApplicationID, string EnumCode) {
            return base.Channel.GetEntAppConfigsFilteredAsync(EnterpriseID, ApplicationID, EnumCode);
        }
        
        public int AddEntAppConfig(Assmnts.UasServiceRef.EntAppConfig cfg) {
            return base.Channel.AddEntAppConfig(cfg);
        }
        
        public System.Threading.Tasks.Task<int> AddEntAppConfigAsync(Assmnts.UasServiceRef.EntAppConfig cfg) {
            return base.Channel.AddEntAppConfigAsync(cfg);
        }
        
        public Assmnts.UasServiceRef.EntAppConfig GetEntAppConfig(int id) {
            return base.Channel.GetEntAppConfig(id);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.EntAppConfig> GetEntAppConfigAsync(int id) {
            return base.Channel.GetEntAppConfigAsync(id);
        }
        
        public Assmnts.UasServiceRef.EntAppConfig GetEntAppConfigByEnumAndEnt(string EnumCode, int EnterpriseID) {
            return base.Channel.GetEntAppConfigByEnumAndEnt(EnumCode, EnterpriseID);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.EntAppConfig> GetEntAppConfigByEnumAndEntAsync(string EnumCode, int EnterpriseID) {
            return base.Channel.GetEntAppConfigByEnumAndEntAsync(EnumCode, EnterpriseID);
        }
        
        public Assmnts.UasServiceRef.EntAppConfig GetEntAppConfigByEntAppAndEnum(int EnterpriseID, int ApplicationID, string EnumCode) {
            return base.Channel.GetEntAppConfigByEntAppAndEnum(EnterpriseID, ApplicationID, EnumCode);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.EntAppConfig> GetEntAppConfigByEntAppAndEnumAsync(int EnterpriseID, int ApplicationID, string EnumCode) {
            return base.Channel.GetEntAppConfigByEntAppAndEnumAsync(EnterpriseID, ApplicationID, EnumCode);
        }
        
        public int UpdateEntAppConfig(Assmnts.UasServiceRef.EntAppConfig cfg) {
            return base.Channel.UpdateEntAppConfig(cfg);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEntAppConfigAsync(Assmnts.UasServiceRef.EntAppConfig cfg) {
            return base.Channel.UpdateEntAppConfigAsync(cfg);
        }
        
        public bool DeleteEntAppConfig(int id) {
            return base.Channel.DeleteEntAppConfig(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEntAppConfigAsync(int id) {
            return base.Channel.DeleteEntAppConfigAsync(id);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.ActiveEnrollmentSites> ListEnrollment() {
            return base.Channel.ListEnrollment();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.ActiveEnrollmentSites>> ListEnrollmentAsync() {
            return base.Channel.ListEnrollmentAsync();
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.ClientHandout> ListHandout(int formresultId) {
            return base.Channel.ListHandout(formresultId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.ClientHandout>> ListHandoutAsync(int formresultId) {
            return base.Channel.ListHandoutAsync(formresultId);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroups() {
            return base.Channel.GetGroups();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsAsync() {
            return base.Channel.GetGroupsAsync();
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroupsByEnterprise(Assmnts.UasServiceRef.Enterprise ent) {
            return base.Channel.GetGroupsByEnterprise(ent);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsByEnterpriseAsync(Assmnts.UasServiceRef.Enterprise ent) {
            return base.Channel.GetGroupsByEnterpriseAsync(ent);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroupsByEnterpriseID(int enterpriseID) {
            return base.Channel.GetGroupsByEnterpriseID(enterpriseID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsByEnterpriseIDAsync(int enterpriseID) {
            return base.Channel.GetGroupsByEnterpriseIDAsync(enterpriseID);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetActiveGroupsByGroupTypeID(int groupTypeID) {
            return base.Channel.GetActiveGroupsByGroupTypeID(groupTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetActiveGroupsByGroupTypeIDAsync(int groupTypeID) {
            return base.Channel.GetActiveGroupsByGroupTypeIDAsync(groupTypeID);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetActiveGroupsByGroupTypeIDIncludingSelectedInactive(int groupTypeID, int SelectedSiteGroupID) {
            return base.Channel.GetActiveGroupsByGroupTypeIDIncludingSelectedInactive(groupTypeID, SelectedSiteGroupID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetActiveGroupsByGroupTypeIDIncludingSelectedInactiveAsync(int groupTypeID, int SelectedSiteGroupID) {
            return base.Channel.GetActiveGroupsByGroupTypeIDIncludingSelectedInactiveAsync(groupTypeID, SelectedSiteGroupID);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroupsByEnterpriseIDIncludingGroupZero(int enterpriseID) {
            return base.Channel.GetGroupsByEnterpriseIDIncludingGroupZero(enterpriseID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsByEnterpriseIDIncludingGroupZeroAsync(int enterpriseID) {
            return base.Channel.GetGroupsByEnterpriseIDIncludingGroupZeroAsync(enterpriseID);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroupsInUserPermissions(int entID, int userID) {
            return base.Channel.GetGroupsInUserPermissions(entID, userID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsInUserPermissionsAsync(int entID, int userID) {
            return base.Channel.GetGroupsInUserPermissionsAsync(entID, userID);
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetGroupsInUserPermissionsDDL(int entID, int userID) {
            return base.Channel.GetGroupsInUserPermissionsDDL(entID, userID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetGroupsInUserPermissionsDDLAsync(int entID, int userID) {
            return base.Channel.GetGroupsInUserPermissionsDDLAsync(entID, userID);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Group> GetGroupsByGroupNameAndEnterpriseID(string groupName, int entId) {
            return base.Channel.GetGroupsByGroupNameAndEnterpriseID(groupName, entId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Group>> GetGroupsByGroupNameAndEnterpriseIDAsync(string groupName, int entId) {
            return base.Channel.GetGroupsByGroupNameAndEnterpriseIDAsync(groupName, entId);
        }
        
        public System.Collections.Generic.List<int> GetChildGroups(int entId, int groupId) {
            return base.Channel.GetChildGroups(entId, groupId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetChildGroupsAsync(int entId, int groupId) {
            return base.Channel.GetChildGroupsAsync(entId, groupId);
        }
        
        public bool IsAuthorizedGroup(int groupId, int applicationId, int userId, int entId) {
            return base.Channel.IsAuthorizedGroup(groupId, applicationId, userId, entId);
        }
        
        public System.Threading.Tasks.Task<bool> IsAuthorizedGroupAsync(int groupId, int applicationId, int userId, int entId) {
            return base.Channel.IsAuthorizedGroupAsync(groupId, applicationId, userId, entId);
        }
        
        public Assmnts.UasServiceRef.Group getGroup(int groupID) {
            return base.Channel.getGroup(groupID);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.Group> getGroupAsync(int groupID) {
            return base.Channel.getGroupAsync(groupID);
        }
        
        public bool UpdateGroup(Assmnts.UasServiceRef.Group group) {
            return base.Channel.UpdateGroup(group);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGroupAsync(Assmnts.UasServiceRef.Group group) {
            return base.Channel.UpdateGroupAsync(group);
        }
        
        public int AddGroup(Assmnts.UasServiceRef.Group group) {
            return base.Channel.AddGroup(group);
        }
        
        public System.Threading.Tasks.Task<int> AddGroupAsync(Assmnts.UasServiceRef.Group group) {
            return base.Channel.AddGroupAsync(group);
        }
        
        public bool DeleteGroup(int groupID) {
            return base.Channel.DeleteGroup(groupID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGroupAsync(int groupID) {
            return base.Channel.DeleteGroupAsync(groupID);
        }
        
        public bool AddGroupType(Assmnts.UasServiceRef.GroupType groupType) {
            return base.Channel.AddGroupType(groupType);
        }
        
        public System.Threading.Tasks.Task<bool> AddGroupTypeAsync(Assmnts.UasServiceRef.GroupType groupType) {
            return base.Channel.AddGroupTypeAsync(groupType);
        }
        
        public bool UpdateGroupType(Assmnts.UasServiceRef.GroupType groupType) {
            return base.Channel.UpdateGroupType(groupType);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGroupTypeAsync(Assmnts.UasServiceRef.GroupType groupType) {
            return base.Channel.UpdateGroupTypeAsync(groupType);
        }
        
        public bool DeleteGroupType(int groupTypeId) {
            return base.Channel.DeleteGroupType(groupTypeId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGroupTypeAsync(int groupTypeId) {
            return base.Channel.DeleteGroupTypeAsync(groupTypeId);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.GroupType> GetGroupTypes() {
            return base.Channel.GetGroupTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.GroupType>> GetGroupTypesAsync() {
            return base.Channel.GetGroupTypesAsync();
        }
        
        public Assmnts.UasServiceRef.GroupType GetGroupType(int groupTypeId) {
            return base.Channel.GetGroupType(groupTypeId);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.GroupType> GetGroupTypeAsync(int groupTypeId) {
            return base.Channel.GetGroupTypeAsync(groupTypeId);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.GroupType> GetGroupTypesByEnterpriseID(int enterpriseId) {
            return base.Channel.GetGroupTypesByEnterpriseID(enterpriseId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.GroupType>> GetGroupTypesByEnterpriseIDAsync(int enterpriseId) {
            return base.Channel.GetGroupTypesByEnterpriseIDAsync(enterpriseId);
        }
        
        public Assmnts.UasServiceRef.GroupUserAppPermissions GetGroupUserAppPermissions(int groupUserAppPermissionsID) {
            return base.Channel.GetGroupUserAppPermissions(groupUserAppPermissionsID);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.GroupUserAppPermissions> GetGroupUserAppPermissionsAsync(int groupUserAppPermissionsID) {
            return base.Channel.GetGroupUserAppPermissionsAsync(groupUserAppPermissionsID);
        }
        
        public Assmnts.UasServiceRef.GroupUserAppPermissions GetGroupUserAppPermissionsByGroupUserAppId(int groupId, int userId, int appId) {
            return base.Channel.GetGroupUserAppPermissionsByGroupUserAppId(groupId, userId, appId);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.GroupUserAppPermissions> GetGroupUserAppPermissionsByGroupUserAppIdAsync(int groupId, int userId, int appId) {
            return base.Channel.GetGroupUserAppPermissionsByGroupUserAppIdAsync(groupId, userId, appId);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.GroupUserAppPermissions> GetGroupUserAppPermissionsByUser(Assmnts.UasServiceRef.User user) {
            return base.Channel.GetGroupUserAppPermissionsByUser(user);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.GroupUserAppPermissions>> GetGroupUserAppPermissionsByUserAsync(Assmnts.UasServiceRef.User user) {
            return base.Channel.GetGroupUserAppPermissionsByUserAsync(user);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.GroupUserAppPermissions> GetGroupUserAppPermissionsByUserID(int userID) {
            return base.Channel.GetGroupUserAppPermissionsByUserID(userID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.GroupUserAppPermissions>> GetGroupUserAppPermissionsByUserIDAsync(int userID) {
            return base.Channel.GetGroupUserAppPermissionsByUserIDAsync(userID);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.GroupApplication> GetUserGroupAffiliation(int UserID) {
            return base.Channel.GetUserGroupAffiliation(UserID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.GroupApplication>> GetUserGroupAffiliationAsync(int UserID) {
            return base.Channel.GetUserGroupAffiliationAsync(UserID);
        }
        
        public bool UpdateGroupUserAppPermissions(Assmnts.UasServiceRef.GroupUserAppPermissions guap) {
            return base.Channel.UpdateGroupUserAppPermissions(guap);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGroupUserAppPermissionsAsync(Assmnts.UasServiceRef.GroupUserAppPermissions guap) {
            return base.Channel.UpdateGroupUserAppPermissionsAsync(guap);
        }
        
        public bool DeleteGroupUserAppPermissions(int id) {
            return base.Channel.DeleteGroupUserAppPermissions(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGroupUserAppPermissionsAsync(int id) {
            return base.Channel.DeleteGroupUserAppPermissionsAsync(id);
        }
        
        public int AddGroupUserAppPermissions(Assmnts.UasServiceRef.GroupUserAppPermissions guap) {
            return base.Channel.AddGroupUserAppPermissions(guap);
        }
        
        public System.Threading.Tasks.Task<int> AddGroupUserAppPermissionsAsync(Assmnts.UasServiceRef.GroupUserAppPermissions guap) {
            return base.Channel.AddGroupUserAppPermissionsAsync(guap);
        }
        
        public int GenerateMinimalGroupUserAppPermissions(int applicationId, int userId, int roleId) {
            return base.Channel.GenerateMinimalGroupUserAppPermissions(applicationId, userId, roleId);
        }
        
        public System.Threading.Tasks.Task<int> GenerateMinimalGroupUserAppPermissionsAsync(int applicationId, int userId, int roleId) {
            return base.Channel.GenerateMinimalGroupUserAppPermissionsAsync(applicationId, userId, roleId);
        }
        
        public int GenerateMinimalGroupUserAppPermissionsWithGroup(int applicationId, int groupId, int userId, int roleId) {
            return base.Channel.GenerateMinimalGroupUserAppPermissionsWithGroup(applicationId, groupId, userId, roleId);
        }
        
        public System.Threading.Tasks.Task<int> GenerateMinimalGroupUserAppPermissionsWithGroupAsync(int applicationId, int groupId, int userId, int roleId) {
            return base.Channel.GenerateMinimalGroupUserAppPermissionsWithGroupAsync(applicationId, groupId, userId, roleId);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions> ListRoleAppPermissionsByRoleID(int roleId) {
            return base.Channel.ListRoleAppPermissionsByRoleID(roleId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions>> ListRoleAppPermissionsByRoleIDAsync(int roleId) {
            return base.Channel.ListRoleAppPermissionsByRoleIDAsync(roleId);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions> ListActiveRoleAppPermissionsByEnterpriseID(int entId) {
            return base.Channel.ListActiveRoleAppPermissionsByEnterpriseID(entId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions>> ListActiveRoleAppPermissionsByEnterpriseIDAsync(int entId) {
            return base.Channel.ListActiveRoleAppPermissionsByEnterpriseIDAsync(entId);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions> ListActiveRoleAppPermissionsByAppIDEnterpriseID(int appId, int entId) {
            return base.Channel.ListActiveRoleAppPermissionsByAppIDEnterpriseID(appId, entId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions>> ListActiveRoleAppPermissionsByAppIDEnterpriseIDAsync(int appId, int entId) {
            return base.Channel.ListActiveRoleAppPermissionsByAppIDEnterpriseIDAsync(appId, entId);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions> ListRoleAppPermissions() {
            return base.Channel.ListRoleAppPermissions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.RoleAppPermissions>> ListRoleAppPermissionsAsync() {
            return base.Channel.ListRoleAppPermissionsAsync();
        }
        
        public Assmnts.UasServiceRef.RoleAppPermissions GetRoleAppPermissions(int RoleAppPermissionsID) {
            return base.Channel.GetRoleAppPermissions(RoleAppPermissionsID);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.RoleAppPermissions> GetRoleAppPermissionsAsync(int RoleAppPermissionsID) {
            return base.Channel.GetRoleAppPermissionsAsync(RoleAppPermissionsID);
        }
        
        public bool UpdateRoleAppPermissions(Assmnts.UasServiceRef.RoleAppPermissions guap) {
            return base.Channel.UpdateRoleAppPermissions(guap);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRoleAppPermissionsAsync(Assmnts.UasServiceRef.RoleAppPermissions guap) {
            return base.Channel.UpdateRoleAppPermissionsAsync(guap);
        }
        
        public bool AddRoleAppPermissions(Assmnts.UasServiceRef.RoleAppPermissions guap) {
            return base.Channel.AddRoleAppPermissions(guap);
        }
        
        public System.Threading.Tasks.Task<bool> AddRoleAppPermissionsAsync(Assmnts.UasServiceRef.RoleAppPermissions guap) {
            return base.Channel.AddRoleAppPermissionsAsync(guap);
        }
        
        public bool RemoveRoleAppPermissions(int roleID) {
            return base.Channel.RemoveRoleAppPermissions(roleID);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveRoleAppPermissionsAsync(int roleID) {
            return base.Channel.RemoveRoleAppPermissionsAsync(roleID);
        }
        
        public Assmnts.UasServiceRef.ApplicationPermission GetApplicationPermission(int ApplicationPermissionID) {
            return base.Channel.GetApplicationPermission(ApplicationPermissionID);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.ApplicationPermission> GetApplicationPermissionAsync(int ApplicationPermissionID) {
            return base.Channel.GetApplicationPermissionAsync(ApplicationPermissionID);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.ApplicationPermission> ListApplicationPermissionsByAppID(int appId) {
            return base.Channel.ListApplicationPermissionsByAppID(appId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.ApplicationPermission>> ListApplicationPermissionsByAppIDAsync(int appId) {
            return base.Channel.ListApplicationPermissionsByAppIDAsync(appId);
        }
        
        public bool UpdateApplicationPermission(Assmnts.UasServiceRef.ApplicationPermission ap) {
            return base.Channel.UpdateApplicationPermission(ap);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateApplicationPermissionAsync(Assmnts.UasServiceRef.ApplicationPermission ap) {
            return base.Channel.UpdateApplicationPermissionAsync(ap);
        }
        
        public bool AddApplicationPermission(Assmnts.UasServiceRef.ApplicationPermission ap) {
            return base.Channel.AddApplicationPermission(ap);
        }
        
        public System.Threading.Tasks.Task<bool> AddApplicationPermissionAsync(Assmnts.UasServiceRef.ApplicationPermission ap) {
            return base.Channel.AddApplicationPermissionAsync(ap);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Role> GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Role>> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Role> GetRolesByEnterpriseID(int entId) {
            return base.Channel.GetRolesByEnterpriseID(entId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Role>> GetRolesByEnterpriseIDAsync(int entId) {
            return base.Channel.GetRolesByEnterpriseIDAsync(entId);
        }
        
        public Assmnts.UasServiceRef.Role GetRole(int roleid) {
            return base.Channel.GetRole(roleid);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.Role> GetRoleAsync(int roleid) {
            return base.Channel.GetRoleAsync(roleid);
        }
        
        public Assmnts.UasServiceRef.Role GetRoleByName(string name) {
            return base.Channel.GetRoleByName(name);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.Role> GetRoleByNameAsync(string name) {
            return base.Channel.GetRoleByNameAsync(name);
        }
        
        public bool UpdateRole(Assmnts.UasServiceRef.Role ent) {
            return base.Channel.UpdateRole(ent);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRoleAsync(Assmnts.UasServiceRef.Role ent) {
            return base.Channel.UpdateRoleAsync(ent);
        }
        
        public bool DeleteRole(int roleid) {
            return base.Channel.DeleteRole(roleid);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRoleAsync(int roleid) {
            return base.Channel.DeleteRoleAsync(roleid);
        }
        
        public bool AddRole(Assmnts.UasServiceRef.Role role) {
            return base.Channel.AddRole(role);
        }
        
        public System.Threading.Tasks.Task<bool> AddRoleAsync(Assmnts.UasServiceRef.Role role) {
            return base.Channel.AddRoleAsync(role);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Application> GetApplications() {
            return base.Channel.GetApplications();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Application>> GetApplicationsAsync() {
            return base.Channel.GetApplicationsAsync();
        }
        
        public Assmnts.UasServiceRef.Application GetApplication(int applicationid) {
            return base.Channel.GetApplication(applicationid);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.Application> GetApplicationAsync(int applicationid) {
            return base.Channel.GetApplicationAsync(applicationid);
        }
        
        public Assmnts.UasServiceRef.Application GetApplicationByName(string applicationname) {
            return base.Channel.GetApplicationByName(applicationname);
        }
        
        public System.Threading.Tasks.Task<Assmnts.UasServiceRef.Application> GetApplicationByNameAsync(string applicationname) {
            return base.Channel.GetApplicationByNameAsync(applicationname);
        }
        
        public System.Collections.Generic.List<Assmnts.UasServiceRef.Application> GetApplicationsInUserPermissions(int userID) {
            return base.Channel.GetApplicationsInUserPermissions(userID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Assmnts.UasServiceRef.Application>> GetApplicationsInUserPermissionsAsync(int userID) {
            return base.Channel.GetApplicationsInUserPermissionsAsync(userID);
        }
        
        public bool UpdateApplication(Assmnts.UasServiceRef.Application app) {
            return base.Channel.UpdateApplication(app);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateApplicationAsync(Assmnts.UasServiceRef.Application app) {
            return base.Channel.UpdateApplicationAsync(app);
        }
        
        public bool DeleteApplication(int applicationid) {
            return base.Channel.DeleteApplication(applicationid);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteApplicationAsync(int applicationid) {
            return base.Channel.DeleteApplicationAsync(applicationid);
        }
        
        public bool AddApplication(Assmnts.UasServiceRef.Application app) {
            return base.Channel.AddApplication(app);
        }
        
        public System.Threading.Tasks.Task<bool> AddApplicationAsync(Assmnts.UasServiceRef.Application app) {
            return base.Channel.AddApplicationAsync(app);
        }
        
        public int GetEnterpriseConfigID() {
            return base.Channel.GetEnterpriseConfigID();
        }
        
        public System.Threading.Tasks.Task<int> GetEnterpriseConfigIDAsync() {
            return base.Channel.GetEnterpriseConfigIDAsync();
        }
    }
}
