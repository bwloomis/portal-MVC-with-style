@model Assmnts.Models.GeneralForm
@{
    Layout = "AdapAppLayout.cshtml";
}

@section AddToHead{
    <link rel="stylesheet" type="text/css" href="/Content/adap/css/ADAPForms.css" />
    <script src="~/Content/js/ADAPLookupSelects.js"></script>
    <link href="~/stylesheets/jquery.growl.css" rel="stylesheet" />
    <script src="~/javascripts/jquery.growl.js"></script>
    @*<script src="~/Content/js/CAADAP/Household.js"></script>*@
    <script src="~/Scripts/Validate.js"></script>
    <link href="~/stylesheets/Validate.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.maskMoney.min.js"></script>
    <script>
        $(document).ready(function () {

            //maxlength = "9"
            $('.cacurrency').maskMoney({ thousands: "", allowZero: true });

            if (!String.prototype.startsWith) {
                String.prototype.startsWith = function (searchString, position) {
                    position = position || 0;
                    return this.indexOf(searchString, position) === position;
                };
            }


            $(".navbar-nav").find("li").each(function () {
                $(this).click(function () {
                    $.ajax({
                        url: '@Url.Action("PageLoadEvents","Results")',
                    });
                });
            });

            $("button").click(function () {
                $.ajax({
                    url: '@Url.Action("PageLoadClickEvents", "Results")',
                });
            });


            var Notify = '@ViewBag.Notify';
            var NotifyMessage = '@ViewBag.NotifyMessage';
            if (Notify == "Saved") {
                console.log("notify start");
                if (NotifyMessage != '')
                    $.growl.notice({ title: "Save", message: NotifyMessage });
                else
                    $.growl.notice({ title: "Save", message: "Application Save successfully" });

            }
            else if (Notify == "Cancel") {
                if (NotifyMessage != '')
                    $.growl.error({ title: "Error", message: NotifyMessage });
                else
                    $.growl.error({ title: "Error", message: "Internal server error:Review the logs" });
            }

            String.prototype.replaceAll = function (search, replacement) {
                var target = this;
                return target.split(search).join(replacement);
            };

            function setPovertyGuideline() {
                var year = new Date().getFullYear();
                if (new Date().getMonth() <= 4) {
                    year = year - 1;
                }
                $.get("/Adap/PovertyGuideline", { persons: $("#C1_MemberCalcHouseholdSize").val(), year: year }, function (data) {
                    $("#C1_MemberCalcPovertyLevel").val(data.amount);
                });
            }

            function updateNumHousehold() {
                var filingStatus = $("#C1_MemberTaxStatus").val();
                var numHouseHold = 1;
                var relStatus = $("#C1_MemberRelationshipStatus").val();

                if (filingStatus == "2" || filingStatus == "3") {
                    numHouseHold = 2;
                } else if (relStatus != "" && filingStatus == "") {
                    // married or RDP?
                    if (relStatus == "2" || relStatus == "5") {
                        numHouseHold = 2;
                    }
                }

                var numDependents = $("#C1_NumDependents").val();
                if (numDependents != "") {
                    var dependents = parseFloat(numDependents);
                    numHouseHold = numHouseHold + dependents;
                }

                //var numDependents = $("#C1_MemberTaxDependents").val();
                //if (numDependents != "") {
                //    var dependents = parseFloat(numDependents);
                //    numHouseHold = numHouseHold + dependents;
                //}

                $("#C1_MemberCalcHouseholdSize").val(numHouseHold);
                setPovertyGuideline();
            }

            $("#C1_MemberRelationshipStatus").change(function () {
                updateNumHousehold();
            });

            $("#C1_MemberTaxStatus").change(function () {
                updateNumHousehold();
            });

            $("#C1_MemberTaxDependents").change(function () {
                updateNumHousehold();
            });

            $("#C1_MemberCalcHouseholdSize").change(function () {
                setPovertyGuideline();
            });

            $("#C1_NumDependents").change(function () {
                updateNumHousehold();
            });

            updateNumHousehold();

            function updateIncome() {
                var self = 0;
                var taxType = $("#C1_MemberTaxDocType").val();
                var haveTaxes = $("#C1_MemberFiledTaxesType").val() == "0";

                if ((haveTaxes)) {
                    if ($("#C1_MemberMAGIFromTax").val() != "") {
                        self = parseFloat($("#C1_MemberMAGIFromTax").val());
                    }
                } else {
                    var self1 = $("#C1_MIncome1SourceAnnualAmount").val();
                    var self2 = $("#C1_MIncome2SourceAnnualAmount").val();
                    var self3 = $("#C1_MIncome3SourceAnnualAmount").val();
                    var self4 = $("#C1_MIncome4SourceAnnualAmount").val();
                    var selfEmp1Type = $("#C1_MIncome1SourceType").val();
                    var selfEmp2Type = $("#C1_MIncome2SourceType").val();
                    var selfEmp3Type = $("#C1_MIncome3SourceType").val();
                    var selfEmp4Type = $("#C1_MIncome4SourceType").val();

                    // employment
                    if (selfEmp1Type == "1") {
                        self1 = $("#C1_MIncome1EmplEstAGI").val();
                    } else if (selfEmp1Type == "2") {
                        // self employment
                        self1 = $("#C1_MIncome1SelfEmpAGIEstimate").val();
                    }

                    // employment
                    if (selfEmp2Type == "1") {
                        self2 = $("#C1_MIncome2EmplEstAGI").val();
                    } else if (selfEmp2Type == "2") {
                        // self employment
                        self2 = $("#C1_MIncome2SelfEmpAGIEstimate").val();
                    }

                    // employment
                    if (selfEmp3Type == "1") {
                        self3 = $("#C1_MIncome3EmplEstAGI").val();
                    } else if (selfEmp3Type == "2") {
                        // self employment
                        self3 = $("#C1_MIncome3SelfEmpAGIEstimate").val();
                    }

                    // employment
                    if (selfEmp4Type == "1") {
                        self4 = $("#C1_MIncome4EmplEstAGI").val();
                    } else if (selfEmp4Type == "2") {
                        // self employment
                        self4 = $("#C1_MIncome4SelfEmpAGIEstimate").val();
                    }

                    if (self1 != "") {
                        self += parseFloat(self1.replaceAll(",", ""));
                    }
                    if (self2 != "") {
                        self += parseFloat(self2.replaceAll(",", ""));
                    }
                    if (self3 != "") {
                        self += parseFloat(self3.replaceAll(",", ""));
                    }
                    if (self4 != "") {
                        self += parseFloat(self4.replaceAll(",", ""));
                    }
                }

                var part = 0;
                var partnerTaxType = $("#C1_PTaxDocType").val();
                var havePartnerTaxes = $("#C1_PartnerFiledTaxes_YesOption").prop("checked") === true;
                if ((havePartnerTaxes && haveTaxes)) {
                    if ($("#C1_PartnerMAGIFromTax").val() != "") {
                        part = parseFloat($("#C1_PartnerMAGIFromTax").val());
                    }
                }
                else {
                    var part1 = $("#C1_PIncome1SourceAnnualAmount").val();
                    var part2 = $("#C1_PIncome2SourceAnnualAmount").val();
                    var part3 = $("#C1_PIncome3SourceAnnualAmount").val();
                    var part4 = $("#C1_PIncome4SourceAnnualAmount").val();

                    var partEmp1Type = $("#C1_PIncome1SourceType").val();
                    var partEmp2Type = $("#C1_PIncome2SourceType").val();
                    var partEmp3Type = $("#C1_PIncome3SourceType").val();
                    var partEmp4Type = $("#C1_PIncome4SourceType").val();

                    // employment
                    if (partEmp1Type == "1") {
                        part1 = $("#C1_PIncome1EmplEstAGI").val();
                    } else if (partEmp1Type == "2") {
                        part1 = $("#C1_PIncome1SelfEmpAGIEstimate").val();
                    }

                    // employment
                    if (partEmp2Type == "1") {
                        part2 = $("#C1_PIncome2EmplEstAGI").val();
                    } else if (partEmp1Type == "2") {
                        part2 = $("#C1_PIncome2SelfEmpAGIEstimate").val();
                    }

                    // employment
                    if (partEmp3Type == "1") {
                        part3 = $("#C1_PIncome3EmplEstAGI").val();
                    } else if (partEmp1Type == "2") {
                        part3 = $("#C1_PIncome3SelfEmpAGIEstimate").val();
                    }

                    // employment
                    if (partEmp4Type == "1") {
                        part4 = $("#C1_PIncome4EmplEstAGI").val();
                    } else if (partEmp1Type == "2") {
                        part4 = $("#C1_PIncome4SelfEmpAGIEstimate").val();
                    }

                    if (part1 != "") {
                        part += parseFloat(part1.replaceAll(",", ""));
                    }
                    if (part2 != "") {
                        part += parseFloat(part2.replaceAll(",", ""));
                    }
                    if (part3 != "") {
                        part += parseFloat(part3.replaceAll(",", ""));
                    }
                    if (part4 != "") {
                        part += parseFloat(part4.replaceAll(",", ""));
                    }
                }

                if (isNaN(self)) {
                    self = 0;
                }

                if (isNaN(part)) {
                    part = 0;
                }

                var total = self + part;
                $("#C1_MemberIncomeAnnualAllSources").val(self);
                $("#C1_PartnerIncomeAnnualAllSources").val(part);

                var depAmount = 0;
                var dep = $("#C1_DependentAGI").val()
                if (dep != "") {
                    depAmount = parseFloat(dep.replaceAll(",", ""));
                    total = total + depAmount;
                }

                total = total.toFixed(2);
                $("#C1_MemberCalcHouseholdIncome").val(total);

                if (total != 0) {
                    var fpl = $("#C1_MemberCalcPovertyLevel").val();
                    var fplAmount = parseFloat(fpl);
                    if (!isNaN(fplAmount)) {
                        var fplPercentage = (total / fplAmount) * 100;
                        $("#C1_FPLPercentage").val(fplPercentage.toFixed(2));
                    }
                }
            }

            $("#C1_MemberFiledTaxesType").change(function () {
                updateIncome();
            });

            $("#C1_PartnerFiledTaxes_YesOption").change(function () {
                updateIncome();
            });

            $("#C1_PartnerFiledTaxes_NoOption").change(function () {
                updateIncome();
            });

            $("#C1_MIncome1SourceAnnualAmount,#C1_MIncome2SourceAnnualAmount,#C1_MIncome3SourceAnnualAmount,#C1_MIncome4SourceAnnualAmount").change(function () {
                updateIncome();
            });
            $("#C1_PIncome1SourceAnnualAmount,#C1_PIncome2SourceAnnualAmount,#C1_PIncome3SourceAnnualAmount,#C1_PIncome4SourceAnnualAmount").change(function () {
                updateIncome();
            });

            $("#C1_MTaxLine1,#C1_MTaxLine2, #C1_MTaxLine3, #C1_MTaxLine4").change(function () {
                updateSelf1040();
            });

            // self foreign income changed
            $("#C1_MIRS2555Line1, #C1_MIRS2555Line2").change(function () {
                updateSelfIncome();
            });

            $("#C1_PTaxLine1, #C1_PTaxLine2, #C1_PTaxLine3, #C1_PTaxLine4").change(function () {
                partner1040();
            });

            function updateSelfIncome() {
                var taxType = $("#C1_MemberTaxDocType").val();
                // 1040
                if (taxType == "1") {
                    updateSelf1040();
                }
                else if (taxType == "2") {
                    updateSelf1040A();
                }
                else if (taxType == "3") {
                    updateSelf1040EZ();
                }
                else if (taxType == "4") {
                    updateSelf540();
                }
            }

            function updatePartnerIncome() {
                var taxType = $("#C1_PTaxDocType").val();
                if (taxType == "1") {
                    partner1040();
                } else if (taxType == "2") {
                    partner1040A();
                }
                else if (taxType == "3") {
                    updatePartner1040EZ();
                }
                else if (taxType == "4") {
                    partner540();
                }
            }

            // partner foreign income changed
            $("#C1_PIRS2555Line1, #C1_PIRS2555Line2").change(function () {
                updatePartnerIncome();
            });

            function partner1040() {
                var part8b = $("#C1_PTaxLine1").val();
                var i20a = $("#C1_PTaxLine2").val();
                var i20b = $("#C1_PTaxLine3").val();
                var i37 = $("#C1_PTaxLine4").val();
                var haveForeignIncome = false;
                var amount = 0;

                var part8bAmount = 0;
                var i20aAmount = 0;
                var i20bAmount = 0;
                var i37Amount = 0;

                if (part8b != "") {
                    part8bAmount = parseFloat(part8b.replaceAll(",", ""));
                }

                if (i20a != "") {
                    i20aAmount = parseFloat(i20a.replaceAll(",", ""));
                }

                if (i20b != "") {
                    i20bAmount = parseFloat(i20b.replaceAll(",", ""));
                }

                if (i37 != "") {
                    i37Amount = parseFloat(i37.replaceAll(",", ""));
                }

                amount = part8bAmount + (i20aAmount - i20bAmount) + i37Amount;

                var i45 = $("#C1_PIRS2555Line1").val();
                var i50 = $("#C1_PIRS2555Line2").val();

                var i45Amount = 0;
                var i50Amount = 0;

                if (i45 != "") {
                    var i45Amount = parseFloat(i45.replaceAll(",", ""));
                }

                if (i50 != "") {
                    var i50Amount = parseFloat(i50.replaceAll(",", ""));
                }

                amount = amount + (i45Amount + i50Amount);

                amount = amount.toFixed(2);
                $("#C1_PartnerMAGIFromTax").val(amount);
                updateIncome();
            }

            $("#C1_PTaxLine5, #C1_PTaxLine6, #C1_PTaxLine7, #C1_PTaxLine14").change(function () {
                partner1040A();
            });

            function partner1040A() {
                var i8b = $("#C1_PTaxLine5").val();
                var i14a = $("#C1_PTaxLine6").val();
                var i14b = $("#C1_PTaxLine14").val();
                var i21 = $("#C1_PTaxLine7").val();
                var haveForeignIncome = false;
                var amount = 0;

                var i8bAmount = 0;
                var i14aAmount = 0;
                var i21Amount = 0;
                var i14bAmount = 0;

                if (i8b != "") {
                    i8bAmount = parseFloat(i8b.replaceAll(",", ""));
                }

                if (i14a != "") {
                    i14aAmount = parseFloat(i14a.replaceAll(",", ""));
                }

                if (i21 != "") {
                    i21Amount = parseFloat(i21.replaceAll(",", ""));
                }

                if (i14b != "") {
                    i14bAmount = parseFloat(i14b.replaceAll(",", ""));
                }

                    amount = i8bAmount + (i14aAmount - i14bAmount) + i21Amount;

                var i45 = $("#C1_PIRS2555Line1").val();
                var i50 = $("#C1_PIRS2555Line2").val();

                var i45Amount = 0;
                var i50Amount = 0;

                if (i45 != "") {
                    var i45Amount = parseFloat(i45.replaceAll(",", ""));
                }

                if (i50 != "") {
                    var i50Amount = parseFloat(i50.replaceAll(",", ""));
                }

                amount = amount + (i45Amount + i50Amount);

                amount = amount.toFixed(2);
                $("#C1_PartnerMAGIFromTax").val(amount);
                updateIncome();
            }

            $("#C1_MTaxLine8").change(function () {
                updateSelf1040EZ();
            });

            function updateSelf1040EZ() {
                var line4 = $("#C1_MTaxLine8").val();
                var haveForeignIncome = false;
                var amount = 0;

                if (line4 != "") {
                    amount = parseFloat(line4.replaceAll(",", ""));
                }


                amount = amount.toFixed(2);
                $("#C1_MemberMAGIFromTax").val(amount);
                updateIncome();
            }

            $("#C1_PTaxLine8").change(function () {
                updatePartner1040EZ();
            });

            function updatePartner1040EZ() {
                var line4 = $("#C1_PTaxLine8").val();
                var haveForeignIncome = false;
                var amount = 0;

                if (line4 != "") {
                    amount = parseFloat(line4.replaceAll(",", ""));
                }

                amount = amount.toFixed(2);
                $("#C1_PartnerMAGIFromTax").val(amount);
                updateIncome();
            }

            function updateSelf1040() {
                var part8b = $("#C1_MTaxLine1").val();
                var i20a = $("#C1_MTaxLine2").val();
                var i20b = $("#C1_MTaxLine3").val();
                var i37 = $("#C1_MTaxLine4").val();
                var haveForeignIncome = false;
                var amount = 0;

                var part8bAmount = 0;
                var i20aAmount = 0;
                var i20bAmount = 0;
                var i37Amount = 0;

                if (part8b != "") {
                    part8bAmount = parseFloat(part8b.replaceAll(",", ""));
                }

                if (i20a != "") {
                    i20aAmount = parseFloat(i20a.replaceAll(",", ""));
                }

                if (i20b != "") {
                    i20bAmount = parseFloat(i20b.replaceAll(",", ""));
                }

                if (i37 != "") {
                    i37Amount = parseFloat(i37.replaceAll(",", ""));
                }

                amount = part8bAmount + (i20aAmount - i20bAmount) + i37Amount;

                var i45 = $("#C1_MIRS2555Line1").val();
                var i50 = $("#C1_MIRS2555Line2").val();

                var i45Amount = 0;
                var i50Amount = 0;

                if (i45 != "") {
                    i45Amount = parseFloat(i45.replaceAll(",", ""));
                }

                if (i50 != "") {
                    i50Amount = parseFloat(i50.replaceAll(",", ""));
                }

                amount = amount + (i45Amount + i50Amount);

                amount = amount.toFixed(2);
                $("#C1_MemberMAGIFromTax").val(amount);
                updateIncome();
            }

            $("#C1_MTaxLine5, #C1_MTaxLine6, #C1_MTaxLine7, #C1_MTaxLine14").change(function () {
                updateSelf1040A();
            });

            function updateSelf1040A() {
                var i8b = $("#C1_MTaxLine5").val();
                var i14a = $("#C1_MTaxLine6").val();
                var i14b = $("#C1_MTaxLine14").val();
                var i21 = $("#C1_MTaxLine7").val();
                var haveForeignIncome = false;
                var amount = 0;

                var i8bAmount = 0;
                var i14aAmount = 0;
                var i21Amount = 0;
                var i14bAmount = 0;

                if (i8b != "") {
                    i8bAmount = parseFloat(i8b.replaceAll(",", ""));
                }

                if (i14a != "") {
                    i14aAmount = parseFloat(i14a.replaceAll(",", ""));
                }

                if (i21 != "") {
                    i21Amount = parseFloat(i21.replaceAll(",", ""));
                }

                if (i14b != "") {
                    i14bAmount = parseFloat(i14b.replaceAll(",", ""));
                }

                amount = i8bAmount + (i14aAmount - i14bAmount) + i21Amount;

                var i45 = $("#C1_MIRS2555Line1").val();
                var i50 = $("#C1_MIRS2555Line2").val();

                var i45Amount = 0;
                var i50Amount = 0;

                //if (i45 != "" && i50 != "") {
                if (i45 != "") {
                    var i45Amount = parseFloat(i45.replaceAll(",", ""));
                }

                if (i50 != "") {
                    var i50Amount = parseFloat(i50.replaceAll(",", ""));
                }

                amount = amount + (i45Amount + i50Amount);

                amount = amount.toFixed(2);
                $("#C1_MemberMAGIFromTax").val(amount);
                updateIncome();
            }

            $("#C1_MTaxLine9, #C1_MTaxLine10, #C1_MTaxLine11, #C1_MTaxLine12").change(function () {
                updateSelf540();
            });

            $("#C1_PTaxLine9, #C1_PTaxLine10, #C1_PTaxLine11, #C1_PTaxLine12").change(function () {
                partner540();
            });

            function partner540() {
                var i8b = $("#C1_PTaxLine9").val();
                var i20a = $("#C1_PTaxLine10").val();
                var i20b = $("#C1_PTaxLine11").val();
                var i13 = $("#C1_PTaxLine12").val();
                var haveForeignIncome = false;
                var amount = 0;

                var i8bAmount = 0;
                var i20aAmount = 0;
                var i20bAmount = 0;
                var i13Amount = 0;

                if (i8b != "") {
                    i8bAmount = parseFloat(i8b.replaceAll(",", ""));
                }

                if (i20a != "") {
                    i20aAmount = parseFloat(i20a.replaceAll(",", ""));
                }

                if (i20b != "") {
                    i20bAmount = parseFloat(i20b.replaceAll(",", ""));
                }

                if (i13 != "") {
                    i13Amount = parseFloat(i13.replaceAll(",", ""));
                }

                amount = i8bAmount + (i20aAmount - i20bAmount) + i13Amount;

                var i45 = $("#C1_PIRS2555Line1").val();
                var i50 = $("#C1_PIRS2555Line2").val();

                var i45Amount = 0;
                var i50Amount = 0;

                //if (i45 != "" && i50 != "") {
                if (i45 != "") {
                    i45Amount = parseFloat(i45.replaceAll(",", ""));
                }

                if (i50 != "") {
                    i50Amount = parseFloat(i50.replaceAll(",", ""));
                }

                amount = amount + (i45Amount + i50Amount);

                amount = amount.toFixed(2);
                $("#C1_PartnerMAGIFromTax").val(amount);
                updateIncome();
            }

            function updateSelf540() {
                var i8b = $("#C1_MTaxLine9").val();
                var i20a = $("#C1_MTaxLine10").val();
                var i20b = $("#C1_MTaxLine11").val();
                var i13 = $("#C1_MTaxLine12").val();
                var haveForeignIncome = false;
                var amount = 0;

                var i8bAmount = 0;
                var i20aAmount = 0;
                var i20bAmount = 0;
                var i13Amount = 0;

                if (i8b != "") {
                    i8bAmount = parseFloat(i8b.replaceAll(",", ""));
                }

                if (i20a != "") {
                    i20aAmount = parseFloat(i20a.replaceAll(",", ""));
                }

                if (i20b != "") {
                    i20bAmount = parseFloat(i20b.replaceAll(",", ""));
                }

                if (i13 != "") {
                    i13Amount = parseFloat(i13.replaceAll(",", ""));
                }

                amount = i8bAmount + (i20aAmount - i20bAmount) + i13Amount;

                var i45 = $("#C1_MIRS2555Line1").val();
                var i50 = $("#C1_MIRS2555Line2").val();

                var i45Amount = 0;
                var i50Amount = 0;

                if (i45 != "") {
                    i45Amount = parseFloat(i45.replaceAll(",", ""));
                }

                if (i50 != "") {
                    i50Amount = parseFloat(i50.replaceAll(",", ""));
                }

                amount = amount + (i45Amount + i50Amount);

                amount = amount.toFixed(2);
                $("#C1_MemberMAGIFromTax").val(amount);
                updateIncome();
            }

            $("#C1_DependentAGI").change(function () {
                var depAmount = 0;
                var dep = $("#C1_DependentAGI").val()
                if (dep != "") {
                    depAmount = parseFloat(dep.replaceAll(",", ""));
                    var self = parseFloat($("#C1_MemberIncomeAnnualAllSources").val());
                    var part = parseFloat($("#C1_PartnerIncomeAnnualAllSources").val());
                    var total = self + part + depAmount;
                    total = total.toFixed(2);
                    $("#C1_MemberCalcHouseholdIncome").val(total);
                }
            });

            $("#C1_MemberTaxDocType").change(function () {
                updateSelfIncome();
            });

            $("#C1_PTaxDocType").change(function () {
                updatePartnerIncome();
            });

            $("#C1_MemberMAGIFromTax").change(function () {
                updateIncome();
            });

            $("#C1_PartnerMAGIFromTax").change(function () {
                updateIncome();
            });

            $("#C1_OtherTaxReturnIncome").change(function () {
                var income = $("#C1_OtherTaxReturnIncome").val();
                if (income != "") {
                    var incomeAmount = parseFloat(income.replaceAll(",", ""));
                    $("#C1_MemberMAGIFromTax").val(incomeAmount);
                    updateIncome();
                }
            });

            //H4_Personal_Income_Employment
            $("#C1_MIncome1EmplMonthIncome").change(function () {
                var monthlyIncome = $("#C1_MIncome1EmplMonthIncome").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_MIncome1EmplEstAGI").val(annualIncome);
                    updateIncome();
                }
            });
            //H5_Personal_Income_Employment
            $("#C1_MIncome2EmplMonthIncome").change(function () {
                var monthlyIncome = $("#C1_MIncome2EmplMonthIncome").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_MIncome2EmplEstAGI").val(annualIncome);
                    updateIncome();
                }
            });
            //H6_Personal_Income_Employment
            $("#C1_MIncome3EmplMonthIncome").change(function () {
                var monthlyIncome = $("#C1_MIncome3EmplMonthIncome").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_MIncome3EmplEstAGI").val(annualIncome);
                    updateIncome();
                }
            });
            //H7_Personal_Income_Employment
            $("#C1_MIncome4EmplMonthIncome").change(function () {
                var monthlyIncome = $("#C1_MIncome4EmplMonthIncome").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_MIncome4EmplEstAGI").val(annualIncome);
                    updateIncome();
                }
            });
            //H8_Partner_Income_Employment
            $("#C1_PIncome1EmplMonthIncome").change(function () {
                var monthlyIncome = $("#C1_PIncome1EmplMonthIncome").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_PIncome1EmplEstAGI").val(annualIncome);
                    updateIncome();
                }
            });
            //H9_Partner_Income_Employment
            $("#C1_PIncome2EmplMonthIncome").change(function () {
                var monthlyIncome = $("#C1_PIncome2EmplMonthIncome").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_PIncome2EmplEstAGI").val(annualIncome);
                    updateIncome();
                }
            });
            //H10_Partner_Income_Employment
            $("#C1_PIncome3EmplMonthIncome").change(function () {
                var monthlyIncome = $("#C1_PIncome3EmplMonthIncome").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_PIncome3EmplEstAGI").val(annualIncome);
                    updateIncome();
                }
            });
            //H11_Partner_Income_Employment
            $("#C1_PIncome4EmplMonthIncome").change(function () {
                var monthlyIncome = $("#C1_PIncome4EmplMonthIncome").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_PIncome4EmplEstAGI").val(annualIncome);
                    updateIncome();
                }
            });
            //H4_Personal_Income_Different_Sources_otherthan_Emp&SelfEmp
            $("#C1_MIncome1SourceMonthlyAmount").change(function () {
                var monthlyIncome = $("#C1_MIncome1SourceMonthlyAmount").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_MIncome1SourceAnnualAmount").val(annualIncome);
                    updateIncome();
                }
            });
            //H5_Personal_Income_Different_Sources_otherthan_Emp&SelfEmp
            $("#C1_MIncome2SourceMonthlyAmount").change(function () {
                var monthlyIncome = $("#C1_MIncome2SourceMonthlyAmount").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_MIncome2SourceAnnualAmount").val(annualIncome);
                    updateIncome();
                }
            });
            //H6_Personal_Income_Different_Sources_otherthan_Emp&SelfEmp
            $("#C1_MIncome3SourceMonthlyAmount").change(function () {
                var monthlyIncome = $("#C1_MIncome3SourceMonthlyAmount").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_MIncome3SourceAnnualAmount").val(annualIncome);
                    updateIncome();
                }
            });
            //H7_Personal_Income_Different_Sources_otherthan_Emp&SelfEmp
            $("#C1_MIncome4SourceMonthlyAmount").change(function () {
                var monthlyIncome = $("#C1_MIncome4SourceMonthlyAmount").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_MIncome4SourceAnnualAmount").val(annualIncome);
                    updateIncome();
                }
            });

            //H8_Partner_Income_Different_Sources_otherthan_Emp&SelfEmp
            $("#C1_PIncome1SourceMonthlyAmount").change(function () {
                var monthlyIncome = $("#C1_PIncome1SourceMonthlyAmount").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_PIncome1SourceAnnualAmount").val(annualIncome);
                    updateIncome();
                }
            });
            //H9_Partner_Income_Different_Sources_otherthan_Emp&SelfEmp
            $("#C1_PIncome2SourceMonthlyAmount").change(function () {
                var monthlyIncome = $("#C1_PIncome2SourceMonthlyAmount").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_PIncome2SourceAnnualAmount").val(annualIncome);
                    updateIncome();
                }
            });
            //H10_Partner_Income_Different_Sources_otherthan_Emp&SelfEmp
            $("#C1_PIncome3SourceMonthlyAmount").change(function () {
                var monthlyIncome = $("#C1_PIncome3SourceMonthlyAmount").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_PIncome3SourceAnnualAmount").val(annualIncome);
                    updateIncome();
                }
            });
            //H11_Partner_Income_Different_Sources_otherthan_Emp&SelfEmp
            $("#C1_PIncome4SourceMonthlyAmount").change(function () {
                var monthlyIncome = $("#C1_PIncome4SourceMonthlyAmount").val();
                if (monthlyIncome != "") {
                    var income = parseFloat(monthlyIncome.replaceAll(",", ""));
                    var annualIncome = income * 12;
                    $("#C1_PIncome4SourceAnnualAmount").val(annualIncome);
                    updateIncome();
                }
            });

            $("#C1_PIncome1SourceType").change(function () {
                updateIncome();
            });

            //H4_Personal_Income_Self_Employement
            $("#C1_MIncome1SelfEmpMonthly1,#C1_MIncome1SelfEmpMonthly2,#C1_MIncome1SelfEmpMonthly3").change(function () {
                var month1 = $("#C1_MIncome1SelfEmpMonthly1").val();
                var month2 = $("#C1_MIncome1SelfEmpMonthly2").val();
                var month3 = $("#C1_MIncome1SelfEmpMonthly3").val();

                var month1Amount = parseFloat(month1.replaceAll(",", ""));
                var month2Amount = parseFloat(month2.replaceAll(",", ""));
                var month3Amount = parseFloat(month3.replaceAll(",", ""));
                var numAmounts = 0;

                if (isNaN(month1Amount)) {
                    month1Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month2Amount)) {
                    month2Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month3Amount)) {
                    month3Amount = 0;
                } else {
                    numAmounts++;
                }


                if (numAmounts > 0) {
                    var average = (month1Amount + month2Amount + month3Amount) / numAmounts;
                    var annual = average * 12;
                    $("#C1_MIncome1SelfEmpAGIEstimate").val(annual);
                    updateIncome();
                }
            });
            //H5_Personal_Income_Self_Employement
            $("#C1_MIncome2SelfEmpMonthly1,#C1_MIncome2SelfEmpMonthly2,#C1_MIncome2SelfEmpMonthly3").change(function () {
                var month1 = $("#C1_MIncome2SelfEmpMonthly1").val();
                var month2 = $("#C1_MIncome2SelfEmpMonthly2").val();
                var month3 = $("#C1_MIncome2SelfEmpMonthly3").val();

                var month1Amount = parseFloat(month1.replaceAll(",", ""));
                var month2Amount = parseFloat(month2.replaceAll(",", ""));
                var month3Amount = parseFloat(month3.replaceAll(",", ""));
                var numAmounts = 0;

                if (isNaN(month1Amount)) {
                    month1Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month2Amount)) {
                    month2Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month3Amount)) {
                    month3Amount = 0;
                } else {
                    numAmounts++;
                }


                if (numAmounts > 0) {
                    var average = (month1Amount + month2Amount + month3Amount) / numAmounts;
                    var annual = average * 12;
                    $("#C1_MIncome2SelfEmpAGIEstimate").val(annual);
                    updateIncome();
                }
            });
            //H6_Personal_Income_Self_Employement
            $("#C1_MIncome3SelfEmpMonthly1,#C1_MIncome3SelfEmpMonthly2,#C1_MIncome3SelfEmpMonthly3").change(function () {
                var month1 = $("#C1_MIncome3SelfEmpMonthly1").val();
                var month2 = $("#C1_MIncome3SelfEmpMonthly2").val();
                var month3 = $("#C1_MIncome3SelfEmpMonthly3").val();

                var month1Amount = parseFloat(month1.replaceAll(",", ""));
                var month2Amount = parseFloat(month2.replaceAll(",", ""));
                var month3Amount = parseFloat(month3.replaceAll(",", ""));
                var numAmounts = 0;

                if (isNaN(month1Amount)) {
                    month1Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month2Amount)) {
                    month2Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month3Amount)) {
                    month3Amount = 0;
                } else {
                    numAmounts++;
                }


                if (numAmounts > 0) {
                    var average = (month1Amount + month2Amount + month3Amount) / numAmounts;
                    var annual = average * 12;
                    $("#C1_MIncome3SelfEmpAGIEstimate").val(annual);
                    updateIncome();
                }
            });
            //H7_Personal_Income_Self_Employement
            $("#C1_MIncome4SelfEmpMonthly1,#C1_MIncome4SelfEmpMonthly2,#C1_MIncome4SelfEmpMonthly3").change(function () {
                var month1 = $("#C1_MIncome4SelfEmpMonthly1").val();
                var month2 = $("#C1_MIncome4SelfEmpMonthly2").val();
                var month3 = $("#C1_MIncome4SelfEmpMonthly3").val();

                var month1Amount = parseFloat(month1.replaceAll(",", ""));
                var month2Amount = parseFloat(month2.replaceAll(",", ""));
                var month3Amount = parseFloat(month3.replaceAll(",", ""));
                var numAmounts = 0;

                if (isNaN(month1Amount)) {
                    month1Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month2Amount)) {
                    month2Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month3Amount)) {
                    month3Amount = 0;
                } else {
                    numAmounts++;
                }


                if (numAmounts > 0) {
                    var average = (month1Amount + month2Amount + month3Amount) / numAmounts;
                    var annual = average * 12;
                    $("#C1_MIncome4SelfEmpAGIEstimate").val(annual);
                    updateIncome();
                }
            });

            //H8_Partner_Income_Self_Employement
            $("#C1_PIncome1SelfEmpMonthly1,#C1_PIncome1SelfEmpMonthly2,#C1_PIncome1SelfEmpMonthly3").change(function () {
                var month1 = $("#C1_PIncome1SelfEmpMonthly1").val();
                var month2 = $("#C1_PIncome1SelfEmpMonthly2").val();
                var month3 = $("#C1_PIncome1SelfEmpMonthly3").val();

                var month1Amount = parseFloat(month1.replaceAll(",", ""));
                var month2Amount = parseFloat(month2.replaceAll(",", ""));
                var month3Amount = parseFloat(month3.replaceAll(",", ""));
                var numAmounts = 0;

                if (isNaN(month1Amount)) {
                    month1Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month2Amount)) {
                    month2Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month3Amount)) {
                    month3Amount = 0;
                } else {
                    numAmounts++;
                }


                if (numAmounts > 0) {
                    var average = (month1Amount + month2Amount + month3Amount) / numAmounts;
                    var annual = average * 12;
                    $("#C1_PIncome1SelfEmpAGIEstimate").val(annual);
                    updateIncome();
                }
            });
            //H9_Partner_Income_Self_Employement
            $("#C1_PIncome2SelfEmpMonthly1,#C1_PIncome2SelfEmpMonthly2,#C1_PIncome2SelfEmpMonthly3").change(function () {
                var month1 = $("#C1_PIncome2SelfEmpMonthly1").val();
                var month2 = $("#C1_PIncome2SelfEmpMonthly2").val();
                var month3 = $("#C1_PIncome2SelfEmpMonthly3").val();

                var month1Amount = parseFloat(month1.replaceAll(",", ""));
                var month2Amount = parseFloat(month2.replaceAll(",", ""));
                var month3Amount = parseFloat(month3.replaceAll(",", ""));
                var numAmounts = 0;

                if (isNaN(month1Amount)) {
                    month1Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month2Amount)) {
                    month2Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month3Amount)) {
                    month3Amount = 0;
                } else {
                    numAmounts++;
                }


                if (numAmounts > 0) {
                    var average = (month1Amount + month2Amount + month3Amount) / numAmounts;
                    var annual = average * 12;
                    $("#C1_PIncome2SelfEmpAGIEstimate").val(annual);
                    updateIncome();
                }
            });
            //H10_Partner_Income_Self_Employement
            $("#C1_PIncome3SelfEmpMonthly1,#C1_PIncome3SelfEmpMonthly2,#C1_PIncome3SelfEmpMonthly3").change(function () {
                var month1 = $("#C1_PIncome3SelfEmpMonthly1").val();
                var month2 = $("#C1_PIncome3SelfEmpMonthly2").val();
                var month3 = $("#C1_PIncome3SelfEmpMonthly3").val();

                var month1Amount = parseFloat(month1.replaceAll(",", ""));
                var month2Amount = parseFloat(month2.replaceAll(",", ""));
                var month3Amount = parseFloat(month3.replaceAll(",", ""));
                var numAmounts = 0;

                if (isNaN(month1Amount)) {
                    month1Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month2Amount)) {
                    month2Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month3Amount)) {
                    month3Amount = 0;
                } else {
                    numAmounts++;
                }


                if (numAmounts > 0) {
                    var average = (month1Amount + month2Amount + month3Amount) / numAmounts;
                    var annual = average * 12;
                    $("#C1_PIncome3SelfEmpAGIEstimate").val(annual);
                    updateIncome();
                }
            });
            //H11_Partner_Income_Self_Employement
            $("#C1_PIncome4SelfEmpMonthly1,#C1_PIncome4SelfEmpMonthly2,#C1_PIncome4SelfEmpMonthly3").change(function () {
                var month1 = $("#C1_PIncome4SelfEmpMonthly1").val();
                var month2 = $("#C1_PIncome4SelfEmpMonthly2").val();
                var month3 = $("#C1_PIncome4SelfEmpMonthly3").val();

                var month1Amount = parseFloat(month1.replaceAll(",", ""));
                var month2Amount = parseFloat(month2.replaceAll(",", ""));
                var month3Amount = parseFloat(month3.replaceAll(",", ""));
                var numAmounts = 0;

                if (isNaN(month1Amount)) {
                    month1Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month2Amount)) {
                    month2Amount = 0;
                } else {
                    numAmounts++;
                }

                if (isNaN(month3Amount)) {
                    month3Amount = 0;
                } else {
                    numAmounts++;
                }


                if (numAmounts > 0) {
                    var average = (month1Amount + month2Amount + month3Amount) / numAmounts;
                    var annual = average * 12;
                    $("#C1_PIncome4SelfEmpAGIEstimate").val(annual);
                    updateIncome();
                }
            });

            $("#C1_MIncome1SourceType").change(function () {
                updateIncome();
            });

            updateSelfIncome();
            updatePartnerIncome();
            updateIncome();
        });
    </script>
}
<!-- H1 Household and Employement -->
<br />
<p><span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-1_sub"]</span></p>
@*@<span class="label label-danger" style="font-size:15px;">H1.Household and Employement</span></p>*@
<div class="panel panel-default">
    <div class="panel-body">
        <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousMostrecentPer" class="btn" type="button"></button></div>
        <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>
        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_MemberRelationshipStatus_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.DropDownList(Model, "C1_MemberRelationshipStatus_item", "C1_MemberRelationshipStatus", true)
            </div><br />

        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_MemberEmploymentStatus_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.DropDownList(Model, "C1_MemberEmploymentStatus_item", "C1_MemberEmploymentStatus", true)
            </div>
        </div>
        <hr />
        <div class="divlast90days">
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MemberEmployStart90_item", new { @class = "control-label" })
                </div>

                @Helpers.YesNoRadioButtons(Model, "C1_MemberEmployStart90")

            </div>
            <hr />
        </div>
        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_MemberFiledTaxesType_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.DropDownList(Model, "C1_MemberFiledTaxesType_item", "C1_MemberFiledTaxesType", true)
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_NumDependents_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.TextInput(Model, "C1_NumDependents", new { @class = "form-control", datavalidate = "true", datavalidationmessage = "Enter Valid Dependents", datadv = "AllowtwoNumbers" })
                <span class="icon"></span><label class="lbl-error error"></label>
            </div>
        </div>
    </div>
</div>

<!-- PREVIOUS_H1 Household and Employement -->
<div class="panel panel-default previous-response" id="PreviousMostrecentPer">
    <div class="panel-body">
        <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
        <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_MemberRelationshipStatus_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.DropDownList(Model, "C1_MemberRelationshipStatus_item", "PREVIOUS_C1_MemberRelationshipStatus", true)
            </div><br />

        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_MemberEmploymentStatus_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.DropDownList(Model, "C1_MemberEmploymentStatus_item", "PREVIOUS_C1_MemberEmploymentStatus", true)
            </div>
        </div>
        <hr />
        <div class="divlast90days">
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MemberEmployStart90_item", new { @class = "control-label" })
                </div>

                @Helpers.YesNoRadioButtons(Model, "PREVIOUS_C1_MemberEmployStart90")

            </div>
            <hr />
        </div>
        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_MemberFiledTaxesType_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.DropDownList(Model, "C1_MemberFiledTaxesType_item", "PREVIOUS_C1_MemberFiledTaxesType", true)
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_NumDependents_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.TextInput(Model, "PREVIOUS_C1_NumDependents", new { @class = "form-control" })
            </div>
        </div>

    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        $(".divFilltaxesYes").hide();
        $(".divFilltaxesNo").hide();
        $(".divFilltaxesNo1").hide();
        $(".divH12andH13").hide();

        function selfFiledTaxes() {
            var selectedText = $("#C1_MemberFiledTaxesType").find("option:selected").text();
            var selectedValue = $("#C1_MemberFiledTaxesType").val();
            //alert("Selected Text: " + selectedText + " Value: " + selectedValue);
            if (selectedValue == '0') {
                // 0-Yes
                $(".divFilltaxesYes").hide();
                $(".divFilltaxesNo").show();
                // $(".hideH2exceptfilingstatus").hide();
                $(".divH12andH13").show();
            }
            else if (selectedValue == '1') {
                // 1-No
                $(".divFilltaxesYes").show();
                $(".divFilltaxesNo").hide();
                $(".divFilltaxesNo1").hide();
                $(".divH12andH13").show();
            }
            else if (selectedValue == '2') {
                // 2-No, I filed an tax extension
                $(".divFilltaxesYes").show();
                $(".divFilltaxesNo").hide();
                $(".divFilltaxesNo1").hide();
                $(".divH12andH13").show();
            }
            else {
                $(".divFilltaxesYes").hide();
                $(".divFilltaxesNo").hide();
                $(".divFilltaxesNo1").hide();
                $(".divH12andH13").hide();
            }

        }

        $("#C1_MemberFiledTaxesType").change(function () {
            selfFiledTaxes();
        }).change();

        $("#C1_MemberEmploymentStatus").change(function () {
            var selectedText = $(this).find("option:selected").text();
            var selectedValue = $("#C1_MemberEmploymentStatus").val();

            //1-Employed (not by self),2-Self-employed
            if (selectedValue == '1' || selectedValue == '2') {

                $(".divlast90days").show();

            }
            else {

                $(".divlast90days").hide();

            }
        }).change();

        function loadTaxType() {
            var selectedText = $("#C1_MemberTaxDocType").find("option:selected").text();
            var selectedValue = $("#C1_MemberTaxDocType").val();
            //alert("Selected Text: " + selectedText + " Value: " + selectedValue);
            if (selectedValue == '1') {
                //1-1040
                $(".div1040").show();
                $(".div1040A").hide();
                $(".div1040EZ").hide();
                $(".divCA540").hide();
                $(".divOther").hide();
                $(".divline45and50").show();
            }
            else if (selectedValue == '2') {
                //2-1040A
                $(".div1040").hide();
                $(".div1040A").show();
                $(".div1040EZ").hide();
                $(".divCA540").hide();
                $(".divOther").hide();
                $(".divline45and50").show();
            }
            else if (selectedValue == '3') {
                //3-1040EZ
                $(".div1040").hide();
                $(".div1040A").hide();
                $(".div1040EZ").show();
                $(".divCA540").hide();
                $(".divOther").hide();
                $(".divline45and50").hide();
            }
            else if (selectedValue == '4') {
                //4-540 CA
                $(".div1040").hide();
                $(".div1040A").hide();
                $(".div1040EZ").hide();
                $(".divCA540").show();
                $(".divOther").hide();
                $(".divline45and50").show();
            }
            else if (selectedValue == '5') {
                //5-Other
                $(".div1040").hide();
                $(".div1040A").hide();
                $(".div1040EZ").hide();
                $(".divCA540").hide();
                $(".divOther").show();
                $(".divline45and50").hide();
            }
            else {
                $(".div1040").hide();
                $(".div1040A").hide();
                $(".div1040EZ").hide();
                $(".divCA540").hide();
                $(".divOther").hide();
                $(".divline45and50").hide();

            }
        }

        $("#C1_MemberTaxDocType").change(function () {
            loadTaxType();
        }).change();

        selfFiledTaxes();
        loadTaxType();
    });
</script>

<!---- H2.Personal Taxes-->
<div class="divFilltaxesNo">
    <p><span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-2_sub"]</span></p>
    @*<p><span class="label label-danger" style="font-size:15px;">H2.PersonalTaxes</span></p>*@
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousPersonalsec1" class="btn" type="button"></button></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MemberTaxStatus_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_MemberTaxStatus_item", "C1_MemberTaxStatus", true)
                </div>
            </div>
            <hr />
            <div class="hideH2exceptfilingstatus">
                <div class="form-group">

                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MemberTaxDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MemberTaxDoc")
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MemberTaxDocType_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.DropDownList(Model, "C1_MemberTaxDocType_item", "C1_MemberTaxDocType", true)
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-12">
                        @Helpers.LabelSpan(Model, "C1_MemberTaxLineInstr_item", new { @class = "control-label" })
                    </div>
                </div>
                <div class="div1040">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine1_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine1", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine2_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine2", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine3_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine3", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine4_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine4", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                </div>

                <div class="div1040A">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine5_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine5", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine6_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine6", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine14_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine14", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine7_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine7", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                </div>
                <div class="div1040EZ">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine8_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine8", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>
                <div class="divCA540">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine9_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine9", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine10_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine10", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine11_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine11", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MTaxLine12_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MTaxLine12", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                </div>
                <div class="divOther">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_OtherTaxReturnIncome_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_OtherTaxReturnIncome", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>
                <div class="divline45and50">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIRS2555Line1_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIRS2555Line1", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIRS2555Line2_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIRS2555Line2", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>
                <hr />
                @*<div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MemberTaxDependents_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_MemberTaxDependents", new { @class = "form-control" })
                        </div>
                    </div>
                    <hr />*@
                @*<div class="form-group">
                        <div class="col-md-4">
                            @Helpers.LabelSpan(Model, "C1_MemberNotFiledTaxes_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-5">
                            @Helpers.DropDownList(Model, "C1_MemberNotFiledTaxes_item", "C1_MemberNotFiledTaxes", true)
                        </div>
                    </div>
                    <hr />*@

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MemberMAGIFromTax_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_MemberMAGIFromTax", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                @*<div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MemberFiledIRS2555_item", new { @class = "control-label" })
                        </div>
                        @Helpers.YesNoRadioButtons(Model, "C1_MemberFiledIRS2555")
                    </div>
                    <hr />*@
                <script type="text/javascript">
                    $(function () {

                        function ShoworhidedivIRSForm2555() {
                            if ($("#C1_MemberFiledIRS2555_YesOption").prop("checked") === true) {
                                // show section
                                $(".divIRSForm2555").show();



                            }
                            else {
                                // hide section
                                $(".divIRSForm2555").hide();

                            }
                        }

                        ShoworhidedivIRSForm2555();

                        $("#C1_MemberFiledIRS2555_YesOption").change(function (e) {
                            ShoworhidedivIRSForm2555();
                        }).change();
                        $("#C1_MemberFiledIRS2555_NoOption").change(function (e) {
                            ShoworhidedivIRSForm2555();
                        }).change();

                        $("#C1_MemberTaxStatus").change(function () {
                            var selectedText = $(this).find("option:selected").text();
                            var selectedValue = $("#C1_MemberTaxStatus").val();
                            //alert("Selected Text: " + selectedText + " Value: " + selectedValue);
                            //3-Married, filing separately
                            if (selectedValue == '3') {

                                $(".divFilltaxesNo1").show();
                                //$(".hideH2exceptfilingstatus").show();
                            }
                            else {

                                $(".divFilltaxesNo1").hide();
                                // $(".hideH2exceptfilingstatus").show();

                            }
                        }).change();
                        //function ShoworhidedivIRSForm2555partner() {
                        //    if ($("#C1_PartnerFiledIRS2555EZ_YesOption").prop("checked") === true) {
                        //        // show section
                        //        $(".divIRSForm2555part").show();

                        //    }
                        //    else {
                        //        // hide section
                        //        $(".divIRSForm2555part").hide();


                        //    }
                        //}

                        //ShoworhidedivIRSForm2555partner();

                        //$("#C1_PartnerFiledIRS2555EZ_YesOption").change(function (e) {
                        //    ShoworhidedivIRSForm2555partner();
                        //});
                        //$("#C1_PartnerFiledIRS2555EZ_NoOption").change(function (e) {
                        //    ShoworhidedivIRSForm2555partner();
                        //});
                    });

                </script>

                <div class="divIRSForm2555">
                    @*<div class="form-group">
                            <div class="col-md-12">
                                @Helpers.LabelSpan(Model, "C1_MemberIRS2555Instr_item", new { @class = "control-label" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_MIRS2555Line1_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-4">
                                @Helpers.TextInput(Model, "C1_MIRS2555Line1", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_MIRS2555Line2_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-4">
                                @Helpers.TextInput(Model, "C1_MIRS2555Line2", new { @class = "form-control" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_MemberFiledIRS2555Doc_item", new { @class = "control-label" })
                            </div>

                            @Helpers.FileUpload(Model, "C1_MemberFiledIRS2555Doc")

                        </div>*@
                </div>
            </div>
        </div>
    </div>

</div>

<!-- PREVIOUS_H2.Personal Taxes -->
<div class="panel panel-default previous-response" id="PreviousPersonalsec1">
    <div class="panel-body">
        <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
        <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_MemberTaxStatus_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.DropDownList(Model, "C1_MemberTaxStatus_item", "PREVIOUS_C1_MemberTaxStatus", true)
            </div>
        </div>
        <hr />
        <div class="form-group">

            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_MemberTaxDoc_item", new { @class = "control-label" })
            </div>
            @Helpers.FileUpload(Model, "C1_MemberTaxDoc")
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_MemberTaxDocType_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.DropDownList(Model, "C1_MemberTaxDocType_item", "PREVIOUS_C1_MemberTaxDocType", true)
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-12">
                @Helpers.LabelSpan(Model, "C1_MemberTaxLineInstr_item", new { @class = "control-label" })
            </div>
        </div>
        <div class="div1040">
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine1_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine1", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine2_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine2", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine3_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine3", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine4_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine4", new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="div1040A">
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine5_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine5", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine6_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine6", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine14_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine14", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine7_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine7", new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="div1040EZ">
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine8_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine8", new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="divCA540">
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine9_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine9", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine10_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine10", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine11_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine11", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MTaxLine12_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MTaxLine12", new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="divOther">
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_OtherTaxReturnIncome_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_OtherTaxReturnIncome", new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="divline45and50">
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MIRS2555Line1_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MIRS2555Line1", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MIRS2555Line2_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MIRS2555Line2", new { @class = "form-control" })
                </div>
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_MemberTaxDependents_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.TextInput(Model, "PREVIOUS_C1_MemberTaxDependents", new { @class = "form-control" })
            </div>
        </div>
        <hr />
        @*<div class="form-group">
                <div class="col-md-4">
                    @Helpers.LabelSpan(Model, "C1_MemberNotFiledTaxes_item", new { @class = "control-label" })
                </div>
                <div class="col-md-5">
                    @Helpers.DropDownList(Model, "C1_MemberNotFiledTaxes_item", "PREVIOUS_C1_MemberNotFiledTaxes", true)
                </div>
            </div>
            <hr />*@

        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_MemberMAGIFromTax_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.TextInput(Model, "PREVIOUS_C1_MemberMAGIFromTax", new { @class = "form-control cacurrency", maxlength = "9" })
            </div>
        </div>
        @*<div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MemberFiledIRS2555_item", new { @class = "control-label" })
                </div>
                @Helpers.YesNoRadioButtons(Model, "PREVIOUS_C1_MemberFiledIRS2555")
            </div>
            <hr />*@
        <div class="divIRSForm2555">
            @*<div class="form-group">
                    <div class="col-md-12">
                        @Helpers.LabelSpan(Model, "C1_MemberIRS2555Instr_item", new { @class = "control-label" })
                    </div>
                </div>*@

            @*<div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIRS2555Line1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIRS2555Line1", new { @class = "form-control" })
                    </div>
                </div>*@

            @*<div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIRS2555Line2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIRS2555Line2", new { @class = "form-control" })
                    </div>
                </div>*@

            @*<div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MemberFiledIRS2555Doc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_MemberFiledIRS2555Doc")

                </div>*@
        </div>


    </div>
</div>

<!--H3.Partner Taxes -->
<div class="divFilltaxesNo1">
    <p><span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-3_sub"]</span></p>
    @*<p><span class="label label-danger" style="font-size:15px;">H3.Partner Taxes</span></p>*@
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousParttxinfo" class="btn" type="button"></button></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PartnerFiledTaxes_item", new { @class = "control-label" })
                </div>

                @Helpers.YesNoRadioButtons(Model, "C1_PartnerFiledTaxes")

            </div>
            <hr />
            <script type="text/javascript">
                $(function () {
                    function ShoworhidedivRDPfiling() {
                        if ($("#C1_PartnerFiledTaxes_YesOption").prop("checked") === true) {
                            // show section
                            $(".divRDPfiling").show();

                        }
                        else {
                            // hide section
                            $(".divRDPfiling").hide();


                        }
                    }

                    ShoworhidedivRDPfiling();

                    $("#C1_PartnerFiledTaxes_YesOption").change(function (e) {
                        ShoworhidedivRDPfiling();
                    }).change();
                    $("#C1_PartnerFiledTaxes_NoOption").change(function (e) {
                        ShoworhidedivRDPfiling();
                    }).change();

                    function partnerTaxType() {
                        var selectedText = $("#C1_PTaxDocType").find("option:selected").text();
                        var selectedValue = $("#C1_PTaxDocType").val();
                        // alert("Selected Text: " + selectedText + " Value: " + selectedValue);
                        if (selectedValue == '1') {
                            //1-1040
                            $(".div1040P").show();
                            $(".div1040AP").hide();
                            $(".div1040EZP").hide();
                            $(".divCA540P").hide();
                            $(".divpOther").hide();
                            $(".divline45and50p").show();

                        }
                        else if (selectedValue == '2') {
                            //2-1040A
                            $(".div1040P").hide();
                            $(".div1040AP").show();
                            $(".div1040EZP").hide();
                            $(".divCA540P").hide();
                            $(".divpOther").hide();
                            $(".divline45and50p").show();
                        }
                        else if (selectedValue == '3') {
                            //3-1040EZ
                            $(".div1040P").hide();
                            $(".div1040AP").hide();
                            $(".div1040EZP").show();
                            $(".divCA540P").hide();
                            $(".divpOther").hide();
                            $(".divline45and50p").hide();
                        }
                        else if (selectedValue == '4') {
                            //4-540CA
                            $(".div1040P").hide();
                            $(".div1040AP").hide();
                            $(".div1040EZP").hide();
                            $(".divCA540P").show();
                            $(".divpOther").hide();
                            $(".divline45and50p").show();
                        }
                        else if (selectedValue == '5') {
                            //5-Other
                            $(".div1040P").hide();
                            $(".div1040AP").hide();
                            $(".div1040EZP").hide();
                            $(".divCA540P").hide();
                            $(".divpOther").show();
                            $(".divline45and50p").hide();
                        }
                        else {
                            $(".div1040P").hide();
                            $(".div1040AP").hide();
                            $(".div1040EZP").hide();
                            $(".divCA540P").hide();
                            $(".divline45and50p").hide();
                        }
                    }

                    $("#C1_PTaxDocType").change(function () {
                        partnerTaxType();
                    }).change();

                    partnerTaxType();
                });
            </script>

            @*<div class="form-group">
                <div class="col-md-4">
                    @Helpers.LabelSpan(Model, "If tax return was electronically signed  LABEL MISSING", new { @class = "control-label" })
                 </div>
                </div>
            *@
            <div class="divRDPfiling">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PartnerTaxDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PartnerTaxDoc")

                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxDocType_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.DropDownList(Model, "C1_PTaxDocType_item", "C1_PTaxDocType", true)
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-12">
                        @Helpers.LabelSpan(Model, "C1_PartnerTaxLineInstr_item", new { @class = "control-label" })
                    </div>
                </div>
                <div class="div1040P">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine1_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine1", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine2_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine2", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine3_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine3", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine4_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine4", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                </div>

                <div class="div1040AP">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine5_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine5", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine6_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine6", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine14_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine14", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine7_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine7", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                </div>
                <div class="div1040EZP">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine8_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine8", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>
                <div class="divCA540P">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine9_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine9", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine10_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine10", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine11_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine11", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PTaxLine12_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PTaxLine12", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>

                </div>

                <div class="divpOther">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PartnerOtherTaxReturnIncome_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PartnerOtherTaxReturnIncome", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>

                <div class="divline45and50p">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIRS2555Line1_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIRS2555Line1", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>

                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIRS2555Line2_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIRS2555Line2", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>
                <hr />
                @*<div class="form-group">
                        <div class="col-md-4">
                            @Helpers.LabelSpan(Model, "C1_PartnerNotFiledTaxes_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.DropDownList(Model, "C1_PartnerNotFiledTaxes_item", "C1_PartnerNotFiledTaxes", true)
                        </div>
                    </div>
                    <hr />*@
                @*@ <div class="form-group">
                        <div class="col-md-4">
                            @Helpers.LabelSpan(Model, "Reason for not filing taxes MISSING", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "Reason for not filing taxes MISSING", new { @class = "form-control" })
                        </div>
                    </div>
                    <hr />*@
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PartnerMAGIFromTax_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_PartnerMAGIFromTax", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>



                @*<div class="divIRSForm2555partradio">
                        <div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_PartnerFiledIRS2555EZ_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_PartnerFiledIRS2555EZ")
                        </div>
                    </div>*@

                <script type="text/javascript">
                    $(function () {
                        function ShoworhidedivIRSForm2555partner() {
                            if ($("#C1_PartnerFiledIRS2555EZ_YesOption").prop("checked") === true) {
                                // show section
                                $(".divIRSForm2555part").show();

                            }
                            else {
                                // hide section
                                $(".divIRSForm2555part").hide();

                            }
                        }

                        ShoworhidedivIRSForm2555partner();

                        $("#C1_PartnerFiledIRS2555EZ_YesOption").change(function (e) {
                            ShoworhidedivIRSForm2555partner();
                        }).change();
                        $("#C1_PartnerFiledIRS2555EZ_NoOption").change(function (e) {
                            ShoworhidedivIRSForm2555partner();
                        }).change();
                    });

                </script>

                <div class="divIRSForm2555part">
                    @*<div class="form-group">
                            <div class="col-md-12">
                                @Helpers.LabelSpan(Model, "C1_MemberIRS2555Instr_item", new { @class = "control-label" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_PIRS2555Line1_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-4">
                                @Helpers.TextInput(Model, "C1_PIRS2555Line1", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_PIRS2555Line2_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-4">
                                @Helpers.TextInput(Model, "C1_PIRS2555Line2", new { @class = "form-control" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_PartnerFiledIRS2555Doc_item", new { @class = "control-label" })
                            </div>

                            @Helpers.FileUpload(Model, "C1_PartnerFiledIRS2555Doc")

                        </div>*@

                </div>


            </div>
        </div>

    </div>
</div>


<!--PREVIOUS_H3.Partner Taxes-->
<div class="panel panel-default previous-response" id="PreviousParttxinfo">
    <div class="panel-body">
        <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
        <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>

        <div class="form-group">
            <div class="col-md-6">
                @Helpers.LabelSpan(Model, "C1_PartnerFiledTaxes_item", new { @class = "control-label" })
            </div>

            @Helpers.YesNoRadioButtons(Model, "PREVIOUS_C1_PartnerFiledTaxes")

        </div>
        <hr />

        <div class="divRDPfiling">
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PartnerTaxDoc_item", new { @class = "control-label" })
                </div>

                @Helpers.FileUpload(Model, "C1_PartnerTaxDoc")

            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PTaxDocType_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_PTaxDocType_item", "PREVIOUS_C1_PTaxDocType", true)
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-12">
                    @Helpers.LabelSpan(Model, "C1_PartnerTaxLineInstr_item", new { @class = "control-label" })
                </div>
            </div>
            <div class="div1040P">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine1", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine2", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine3_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine3", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine4_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine4", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="div1040AP">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine5_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine5", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine6_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine6", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine14_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine14", new { @class = "form-control" })
                    </div>
                </div>

                @*@<div class="form-group">
                        <div class="col-md-4">
                            @Helpers.LabelSpan(Model, "Form 1040A - Line 14b MISSING", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "Form 1040A - Line 14b MISSING", new { @class = "form-control" })
                        </div>
                    </div>
                    <hr />*@
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine7_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine7", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="div1040EZP">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine8_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine8", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="divCA540P">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine9_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine9", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine10_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine10", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine11_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine11", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PTaxLine12_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PTaxLine12", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <hr />
            <div class="divpOther">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PartnerOtherTaxReturnIncome_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PartnerOtherTaxReturnIncome", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            @*<div class="form-group">
                    <div class="col-md-4">
                        @Helpers.LabelSpan(Model, "C1_PartnerNotFiledTaxes_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.DropDownList(Model, "C1_PartnerNotFiledTaxes_item", "PREVIOUS_C1_PartnerNotFiledTaxes", true)
                    </div>
                </div>
                <hr />*@
            @*@ <div class="form-group">
                    <div class="col-md-4">
                        @Helpers.LabelSpan(Model, "Reason for not filing taxes MISSING", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_Reason for not filing taxes MISSING", new { @class = "form-control" })
                    </div>
                </div>
                <hr />*@
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PartnerMAGIFromTax_item", new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_PartnerMAGIFromTax", new { @class = "form-control cacurrency", maxlength = "9" })
                </div>
            </div>



            <div class="divIRSForm2555partradio">
                @*<div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PartnerFiledIRS2555EZ_item", new { @class = "control-label" })
                        </div>
                        @Helpers.YesNoRadioButtons(Model, "PREVIOUS_C1_PartnerFiledIRS2555EZ")
                    </div>*@
            </div>

            <div class="divIRSForm2555part">
                @*<div class="form-group">
                        <div class="col-md-12">
                            @Helpers.LabelSpan(Model, "C1_MemberIRS2555Instr_item", new { @class = "control-label" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIRS2555Line1_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "PREVIOUS_C1_PIRS2555Line1", new { @class = "form-control" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIRS2555Line2_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "PREVIOUS_C1_PIRS2555Line2", new { @class = "form-control" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PartnerFiledIRS2555Doc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PartnerFiledIRS2555Doc")

                    </div>*@

            </div>


        </div>
    </div>



</div>


<!-- PREVIOUS Foriegn Income -->
<div class="panel panel-default previous-response" id="PreviousForeignincome">
    <div class="panel-body">
        <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
        <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
        <div class="form-group">
            <div class="col-md-7">
                @Helpers.LabelSpan(Model, "C1_MemberFiledIRS2555_item", new { @class = "control-label" })
            </div>
            @Helpers.YesNoRadioButtons(Model, "PREVIOUS_C1_MemberFiledIRS2555")
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-12">
                @Helpers.LabelSpan(Model, "C1_MemberIRS2555Instr_item", new { @class = "control-label" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Helpers.LabelSpan(Model, "C1_MIRS2555Line1_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.TextInput(Model, "PREVIOUS_C1_MIRS2555Line1", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Helpers.LabelSpan(Model, "C1_MIRS2555Line2_item", new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Helpers.TextInput(Model, "PREVIOUS_C1_MIRS2555Line2", new { @class = "form-control" })
            </div>
        </div>
        @*  <hr />
               <div class="form-group">
                    <div class="col-md-9">
                        @Helpers.LabelSpan(Model, "C1_MemberFiledIRS2555EZ_item", new { @class = "control-label" })
                    </div>
                    @Helpers.YesNoRadioButtons(Model, "PREVIOUS_C1_MemberFiledIRS2555EZ")
                </div>

                <hr />
                <div class="form-group">
                <div class="col-md-12">
                    @Helpers.LabelSpan(Model, "C1_MemberIRS2555EZInstr_item", new { @class = "control-label" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    @Helpers.LabelSpan(Model, "C1_MIRS2555EZLine1_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MIRS2555EZLine1", new { @class = "form-control" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-5">
                    @Helpers.LabelSpan(Model, "C1_MemberFiledIRS2555Doc_item", new { @class = "control-label" })
                </div>

                @Helpers.FileUpload(Model, "PREVIOUS_C1_MemberFiledIRS2555Doc")

            </div>*@

    </div>
</div>



<!--Personal income section 1 of 4-->
<div class="divFilltaxesYes">
    <span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-4_sub"]</span></p>
    @*@<span class="label label-danger" style="font-size:15px;">Personal Income (1 of 4)</span></p>*@
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><button data-prevdiv="Personalsec1" class="btn" type="button"></button></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MIncome1SourceType_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_MIncome1SourceType_item", "C1_MIncome1SourceType", true)
                </div>
            </div>
            <script type="text/javascript">
                $(function () {

                    $(".divotherincomep1").hide();
                    $(".divpaystubfor3currentp1").hide();
                    $(".divSelfEmploymentAffidavitp1").hide();
                    $(".divSSISSDIp1").hide();
                    $(".divUnemploymentp1").hide();
                    $(".dvestimatedp1").hide();

                    $(".divproofofincomep1").hide();
                    $(".divAnnualgrossincomep1").hide();
                    $(".divnoincomep1").hide();

                    $("#C1_MIncome1SourceType").change(function () {
                        var selectedText = $(this).find("option:selected").text();
                        var selectedValue = $("#C1_MIncome1SourceType").val();

                        if (selectedText == 'Other (please describe below)') {
                            $(".divotherincomep1").show();
                            $(".divpaystubfor3currentp1").hide();
                            $(".divSelfEmploymentAffidavitp1").hide();
                            $(".divSSISSDIp1").hide();
                            $(".divUnemploymentp1").hide();
                            $(".dvestimatedp1").show();

                            $(".divproofofincomep1").hide();
                            $(".divAnnualgrossincomep1").show();
                            $(".divnoincomep1").hide();

                        }
                        else if (selectedText == 'No income') {
                            $(".divotherincomep1").hide();
                            $(".divpaystubfor3currentp1").hide();
                            $(".divSelfEmploymentAffidavitp1").hide();
                            $(".divSSISSDIp1").hide();
                            $(".divUnemploymentp1").hide();
                            $(".dvestimatedp1").hide();

                            $(".divproofofincomep1").hide();
                            $(".divAnnualgrossincomep1").hide();
                            $(".divnoincomep1").show();
                        }
                        else if (selectedText == 'Employment') {
                            $(".divotherincomep1").hide();
                            $(".divpaystubfor3currentp1").show();
                            $(".divSelfEmploymentAffidavitp1").hide();
                            $(".divSSISSDIp1").hide();
                            $(".divUnemploymentp1").hide();
                            $(".dvestimatedp1").hide();

                            $(".divproofofincomep1").hide();
                            $(".divAnnualgrossincomep1").hide();
                            $(".divnoincomep1").hide();
                        }
                        else if (selectedText == 'Self-employment') {
                            $(".divotherincomep1").hide();
                            $(".divpaystubfor3currentp1").hide();
                            $(".divSelfEmploymentAffidavitp1").show();
                            $(".divSSISSDIp1").hide();
                            $(".divUnemploymentp1").hide();
                            $(".dvestimatedp1").hide();

                            $(".divproofofincomep1").hide();
                            $(".divAnnualgrossincomep1").hide();
                            $(".divnoincomep1").hide();
                        }
                        else if (selectedText == 'Supplemental Social Security Income (SSI)' || selectedText == 'Social Security Disability Insurance (SSDI)') {
                            $(".divotherincomep1").hide();
                            $(".divpaystubfor3currentp1").hide();
                            $(".divSelfEmploymentAffidavitp1").hide();
                            $(".divSSISSDIp1").show();
                            $(".divUnemploymentp1").hide();
                            $(".dvestimatedp1").show();

                            $(".divproofofincomep1").hide();
                            $(".divAnnualgrossincomep1").show();
                            $(".divnoincomep1").hide();
                        }
                        else if (selectedText == 'State Disability Insurance (SDI)' || selectedText == 'Private Disability' || selectedText == 'Social Security Retirement' || selectedText == 'Private/Employer Based Retirement' || selectedText == 'Workers compensation' || selectedText == 'Investment or Interest Income' || selectedText == 'Veterans Administration (VA) benefit' || selectedText == 'Alimony' || selectedText == 'Child support') {
                            $(".divotherincomep1").hide();
                            $(".divpaystubfor3currentp1").hide();
                            $(".divSelfEmploymentAffidavitp1").hide();
                            $(".divSSISSDIp1").hide();
                            $(".divUnemploymentp1").hide();
                            $(".dvestimatedp1").show();

                            $(".divproofofincomep1").show();
                            $(".divAnnualgrossincomep1").show();
                            $(".divnoincomep1").hide();
                        }
                        else if (selectedText == 'Foreign Earned Income') {
                            $(".divotherincomep1").hide();
                            $(".divpaystubfor3currentp1").hide();
                            $(".divSelfEmploymentAffidavitp1").hide();
                            $(".divSSISSDIp1").hide();
                            $(".divUnemploymentp1").hide();
                            $(".dvestimatedp1").show();

                            $(".divproofofincomep1").hide();
                            $(".divAnnualgrossincomep1").show();
                            $(".divnoincomep1").hide();
                        }
                        else if (selectedText == 'Unemployment Insurance (UI)') {
                            $(".divotherincomep1").hide();
                            $(".divpaystubfor3currentp1").hide();
                            $(".divSelfEmploymentAffidavitp1").hide();
                            $(".divSSISSDIp1").hide();
                            $(".divUnemploymentp1").show();
                            $(".dvestimatedp1").show();

                            $(".divproofofincomep1").hide();
                            $(".divAnnualgrossincomep1").show();
                            $(".divnoincomep1").hide();
                        }
                        else {
                            $(".divotherincomep1").hide();
                            $(".divpaystubfor3currentp1").hide();
                            $(".divSelfEmploymentAffidavitp1").hide();
                            $(".divSSISSDIp1").hide();
                            $(".divUnemploymentp1").hide();
                            $(".dvestimatedp1").hide();
                            $(".divproofincome").hide();
                            $(".divproofofincomep1").hide();
                            $(".divAnnualgrossincomep1").hide();
                            $(".divnoincomep1").hide();
                        }

                    }).change();
                });

            </script>



            <div class="divotherincomep1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SourceTypeOther_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_MIncome1SourceTypeOther", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                <hr />
            </div>

            <div class="divpaystubfor3currentp1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1EmploymentDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome1EmploymentDoc")
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1EmplMonthIncome_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_MIncome1EmplMonthIncome", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1EmplEstAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "C1_MIncome1EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                @*<div class="form-group">
                        <div class="col-md-4">
                            @Helpers.LabelSpan(Model, "C1_MIncome1EmplAgreeYN_item", new { @class = "control-label" })
                        </div>
                        @Helpers.YesNoRadioButtons(Model, "C1_MIncome1EmplAgreeYN")
                    </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            @Helpers.LabelSpan(Model, "C1_MIncome1EmplSelfAGI_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_MIncome1EmplSelfAGI", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="form-group" style="margin-left:15px">
                        <div class="col-md-7">
                            <div class="checkbox checkbox-info">
                                @Helpers.LabeledCheckboxInput(Model, "C1_MIncome1EmplCertSelfAGI")
                            </div>
                        </div>
                    </div>*@
            </div>
            <div class="divnoincomep1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SupportedElse_item", new { @class = "control-label" })
                    </div>
                    @Helpers.YesNoRadioButtons(Model, "C1_MIncome1SupportedElse")
                </div>
                <hr />
                <script type="text/javascript">
                    $(function () {
                        function ShoworhiddivSupportVerAffidavit() {
                            if ($("#C1_MIncome1SupportedElse_YesOption").prop("checked") === true) {
                                // show section
                                $(".divSupportVerAffidavit").show();
                            }
                            else {
                                // hide section
                                $(".divSupportVerAffidavit").hide();
                            }
                        }

                        ShoworhiddivSupportVerAffidavit();

                        $("#C1_MIncome1SupportedElse_YesOption").change(function (e) {
                            ShoworhiddivSupportVerAffidavit();
                        }).change();
                        $("#C1_MIncome1SupportedElse_NoOption").change(function (e) {
                            ShoworhiddivSupportVerAffidavit();
                        }).change();
                    });
                </script>
                <div class="divSupportVerAffidavit">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome1SupportedElseDoc_item", new { @class = "control-label" })
                        </div>
                        @Helpers.FileUpload(Model, "C1_MIncome1SupportedElseDoc")
                    </div>
                </div>
            </div>

            <div class="divSelfEmploymentAffidavitp1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmploymentDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome1SelfEmploymentDoc")
                </div>
                <hr />

                <div class="form-group">
                    <div class="col-md-6">
                        <strong>Input your 3 current, consecutive months of self-employment income</strong>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmpMonthly1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_MIncome1SelfEmpMonthly1", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmpMonthly2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_MIncome1SelfEmpMonthly2", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmpMonthly3_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_MIncome1SelfEmpMonthly3", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmpAGIEstimate_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "C1_MIncome1SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />
                @*<div class="form-group">
                        <div class="col-md-5">
                            @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmpAGIAgree_item", new { @class = "control-label" })
                        </div>
                        @Helpers.YesNoRadioButtons(Model, "C1_MIncome1SelfEmpAGIAgree")
                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmpAGISelfEstimate_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Helpers.TextInput(Model, "C1_MIncome1SelfEmpAGISelfEstimate", new { @class = "form-control" })
                        </div>
                    </div>
                    <hr />
                    <div class="form-group" style="margin-left:15px">
                        <div class="col-md-7">
                            <div class="checkbox checkbox-info">
                                @Helpers.LabeledCheckboxInput(Model, "C1_MIncome1SelfEmpAGICertify")
                            </div>
                        </div>
                    </div>
                    <hr />*@
            </div>
            <div class="divSSISSDIp1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SSIDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome1SSIDoc")
                </div>
                <hr />
            </div>
            <div class="divUnemploymentp1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1UnempInsDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome1UnempInsDoc")
                </div>
            </div>
            <div class="dvestimatedp1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SourceMonthlyAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_MIncome1SourceMonthlyAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
            </div>
            <div class="divproofofincomep1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1ProofDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome1ProofDoc")
                </div>
            </div>
            <hr />


            <div class="divAnnualgrossincomep1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SourceAnnualAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_MIncome1SourceAnnualAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
            </div>


        </div>
    </div>

    <!--Previous Personal income section 1 of 4-->
    <div class="panel panel-default previous-response" id="Personalsec1">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MIncome1SourceType_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_MIncome1SourceType_item", "PREVIOUS_C1_MIncome1SourceType", true)
                </div>
            </div>

            <div class="divotherincomep1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SourceTypeOther_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome1SourceTypeOther", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>

            <div class="divpaystubfor3currentp1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1EmploymentDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome1EmploymentDoc")
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1EmplMonthIncome_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome1EmplMonthIncome", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1EmplEstAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome1EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

            </div>
            <div class="divnoincomep1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SupportedElse_item", new { @class = "control-label" })
                    </div>
                    @Helpers.YesNoRadioButtons(Model, "PREVIOUS_C1_MIncome1SupportedElse")
                </div>
                <hr />

                <div class="divSupportVerAffidavit">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome1SupportedElseDoc_item", new { @class = "control-label" })
                        </div>
                        @Helpers.FileUpload(Model, "C1_MIncome1SupportedElseDoc")
                    </div>
                </div>
            </div>

            <div class="divSelfEmploymentAffidavitp1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmploymentDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome1SelfEmploymentDoc")
                </div>
                <hr />

                <div class="form-group">
                    <div class="col-md-6">
                        <strong>Input your 3 current, consecutive months of self-employment income</strong>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmpMonthly1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome1SelfEmpMonthly1", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmpMonthly2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome1SelfEmpMonthly2", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmpMonthly3_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome1SelfEmpMonthly3", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SelfEmpAGIEstimate_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome1SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />

            </div>
            <div class="divSSISSDIp1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SSIDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome1SSIDoc")
                </div>
                <hr />
            </div>
            <div class="divUnemploymentp1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1UnempInsDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome1UnempInsDoc")
                </div>
            </div>
            <div class="dvestimatedp1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SourceMonthlyAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome1SourceMonthlyAmount", new { @class = "form-control" })
                    </div>
                </div>

            </div>
            <div class="divproofofincomep1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1ProofDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "PREVIOUS_C1_MIncome1ProofDoc")
                </div>
            </div>
            <hr />

            <div class="divAnnualgrossincomep1">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome1SourceAnnualAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome1SourceAnnualAmount", new { @class = "form-control" })
                    </div>
                </div>
            </div>



        </div>
    </div>

    <!--Another source of income section P1 -->

    <div class="panel panel-default">
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MIncome2HasIncome_item", new { @class = "control-label" })
                </div>
                @Helpers.YesNoRadioButtons(Model, "C1_MIncome2HasIncome")
            </div>

            <script type="text/javascript">
                $(function () {
                    function Showorhidep2() {
                        if ($("#C1_MIncome2HasIncome_YesOption").prop("checked") === true) {
                            // show section
                            $(".Personalp2").show();
                            $(".Anotherp3").show();
                            $(".Personalp3").hide();
                            $(".Personalp4").hide();
                            $(".Anotherp4").hide();
                        }
                        else {
                            // hide section
                            $(".Personalp2").hide();
                            $(".Personalp3").hide();
                            $(".Anotherp3").hide();
                            $(".Personalp4").hide();
                            $(".Anotherp4").hide();
                        }
                    }

                    Showorhidep2();

                    $("#C1_MIncome2HasIncome_YesOption").change(function (e) {
                        Showorhidep2();
                    }).change();
                    $("#C1_MIncome2HasIncome_NoOption").change(function (e) {
                        Showorhidep2();
                    }).change();
                });
            </script>

        </div>
    </div>

    <!--Personal income section 2 of 4-->
    <div class="Personalp2">
        <span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-5_sub"]</span></p>
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousPersonalsec2" class="btn" type="button"></button></div>
                <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2SourceType_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.DropDownList(Model, "C1_MIncome2SourceType_item", "C1_MIncome2SourceType", true)
                    </div>
                </div>
                <script type="text/javascript">
                    $(function () {

                        $(".divotherincomep2").hide();
                        $(".divpaystubfor3currentp2").hide();
                        $(".divSelfEmploymentAffidavitp2").hide();
                        $(".divSSISSDIp2").hide();
                        $(".divUnemploymentp2").hide();
                        $(".dvestimatedp2").hide();
                        $(".divproofofincomep2").hide();
                        $(".divAnnualgrossincomep2").hide();

                        $("#C1_MIncome2SourceType").change(function () {
                            var selectedText = $(this).find("option:selected").text();
                            var selectedValue = $(this).val();
                            // alert("Selected Text: " + selectedText + " Value: " + selectedValue);
                            if (selectedText == 'Other (please describe below)') {
                                $(".divotherincomep2").show();
                                $(".divpaystubfor3currentp2").hide();
                                $(".divSelfEmploymentAffidavitp2").hide();
                                $(".divSSISSDIp2").hide();
                                $(".divUnemploymentp2").hide();
                                $(".dvestimatedp2").show();
                                $(".divproofofincomep2").hide();
                                $(".divAnnualgrossincomep2").show();

                            }
                            else if (selectedText == 'Employment') {
                                $(".divotherincomep2").hide();
                                $(".divpaystubfor3currentp2").show();
                                $(".divSelfEmploymentAffidavitp2").hide();
                                $(".divSSISSDIp2").hide();
                                $(".divUnemploymentp2").hide();
                                $(".dvestimatedp2").hide();
                                $(".divproofofincomep2").hide();
                                $(".divAnnualgrossincomep2").hide();

                            }
                            else if (selectedText == 'Self-employment') {
                                $(".divotherincomep2").hide();
                                $(".divpaystubfor3currentp2").hide();
                                $(".divSelfEmploymentAffidavitp2").show();
                                $(".divSSISSDIp2").hide();
                                $(".divUnemploymentp2").hide();
                                $(".dvestimatedp2").hide();
                                $(".divproofofincomep2").hide();
                                $(".divAnnualgrossincomep2").hide();

                            }
                            else if (selectedText == 'Supplemental Social Security Income (SSI)' || selectedText == 'Social Security Disability Insurance (SSDI)') {
                                $(".divotherincomep2").hide();
                                $(".divpaystubfor3currentp2").hide();
                                $(".divSelfEmploymentAffidavitp2").hide();
                                $(".divSSISSDIp2").show();
                                $(".divUnemploymentp2").hide();
                                $(".dvestimatedp2").show();
                                $(".divproofofincomep2").hide();
                                $(".divAnnualgrossincomep2").show();

                            }
                            else if (selectedText == 'State Disability Insurance (SDI)' || selectedText == 'Private Disability' || selectedText == 'Social Security Retirement' || selectedText == 'Private/Employer Based Retirement' || selectedText == 'Workers compensation' || selectedText == 'Investment or Interest Income' || selectedText == 'Veterans Administration (VA) benefit' || selectedText == 'Alimony' || selectedText == 'Child support') {
                                $(".divotherincomep2").hide();
                                $(".divpaystubfor3currentp2").hide();
                                $(".divSelfEmploymentAffidavitp2").hide();
                                $(".divSSISSDIp2").hide();
                                $(".divUnemploymentp2").hide();
                                $(".dvestimatedp2").show();
                                $(".divproofofincomep2").show();
                                $(".divAnnualgrossincomep2").show();

                            }
                            else if (selectedText == 'Foreign Earned Income') {
                                $(".divotherincomep2").hide();
                                $(".divpaystubfor3currentp2").hide();
                                $(".divSelfEmploymentAffidavitp2").hide();
                                $(".divSSISSDIp2").hide();
                                $(".divUnemploymentp2").hide();
                                $(".dvestimatedp2").show();
                                $(".divproofofincomep2").hide();
                                $(".divAnnualgrossincomep2").show();

                            }
                            else if (selectedText == 'Unemployment Insurance (UI)') {
                                $(".divotherincomep2").hide();
                                $(".divpaystubfor3currentp2").hide();
                                $(".divSelfEmploymentAffidavitp2").hide();
                                $(".divSSISSDIp2").hide();
                                $(".divUnemploymentp2").show();
                                $(".dvestimatedp2").show();
                                $(".divproofofincomep2").hide();
                                $(".divAnnualgrossincomep2").show();

                            }
                            else {
                                $(".divotherincomep2").hide();
                                $(".divpaystubfor3currentp2").hide();
                                $(".divSelfEmploymentAffidavitp2").hide();
                                $(".divSSISSDIp2").hide();
                                $(".divUnemploymentp2").hide();
                                $(".dvestimatedp2").hide();
                                $(".divproofofincomep2").hide();
                                $(".divAnnualgrossincomep2").hide();

                            }

                        }).change();
                    });

                </script>
                <div class="divotherincomep2">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2SourceTypeOther_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome2SourceTypeOther", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divpaystubfor3currentp2">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2EmploymentDoc_item", new { @class = "control-label" })
                        </div>
                        @Helpers.FileUpload(Model, "C1_MIncome2EmploymentDoc")
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2EmplMonthIncome_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome2EmplMonthIncome", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2EmplEstAGI_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_MIncome2EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_MIncome2EmplAgreeYN_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_MIncome2EmplAgreeYN")
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_MIncome2EmplSelfAGI_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-4">
                                @Helpers.TextInput(Model, "C1_MIncome2EmplSelfAGI", new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_MIncome2EmplCertSelfAGI")
                                </div>
                            </div>
                        </div>*@


                </div>
                <div class="divSelfEmploymentAffidavitp2">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmploymentDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_MIncome2SelfEmploymentDoc")

                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            <strong>Input your 3 current, consecutive months of self-employment income</strong>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmpMonthly1_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome2SelfEmpMonthly1", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmpMonthly2_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome2SelfEmpMonthly2", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmpMonthly3_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome2SelfEmpMonthly3", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmpAGIEstimate_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_MIncome2SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <hr />
                    @*<div class="form-group">
                            <div class="col-md-5">
                                @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmpAGIAgree_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_MIncome2SelfEmpAGIAgree")
                        </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmpAGISelfEstimate_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">
                                @Helpers.TextInput(Model, "C1_MIncome2SelfEmpAGISelfEstimate", new { @class = "form-control" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_MIncome2SelfEmpAGICertify")
                                </div>
                            </div>
                        </div>
                        <hr />*@
                </div>
                <div class="divSSISSDIp2">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2SSIDoc_item", new { @class = "control-label" })
                        </div>
                        @Helpers.FileUpload(Model, "C1_MIncome2SSIDoc")
                    </div>
                    <hr />
                </div>
                <div class="divUnemploymentp2">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2UnempInsDoc_item", new { @class = "control-label" })
                        </div>
                        @Helpers.FileUpload(Model, "C1_MIncome2UnempInsDoc")
                    </div>
                </div>
                <div class="dvestimatedp2">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2SourceMonthlyAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome2SourceMonthlyAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divproofofincomep2">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2ProofDoc_item", new { @class = "control-label" })
                        </div>
                        @Helpers.FileUpload(Model, "C1_MIncome2ProofDoc")
                    </div>
                </div>
                <div class="divAnnualgrossincomep2">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome2SourceAnnualAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome2SourceAnnualAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Previous Personal income section 2 of 4-->
    <div class="panel panel-default previous-response" id="PreviousPersonalsec2">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MIncome2SourceType_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_MIncome2SourceType_item", "PREVIOUS_C1_MIncome2SourceType", true)
                </div>
            </div>

            <div class="divotherincomep2">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2SourceTypeOther_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome2SourceTypeOther", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divpaystubfor3currentp2">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2EmploymentDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome2EmploymentDoc")
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2EmplMonthIncome_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome2EmplMonthIncome", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2EmplEstAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome2EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>


            </div>
            <div class="divSelfEmploymentAffidavitp2">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_MIncome2SelfEmploymentDoc")

                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        <strong>Input your 3 current, consecutive months of self-employment income</strong>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmpMonthly1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome2SelfEmpMonthly1", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmpMonthly2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome2SelfEmpMonthly2", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmpMonthly3_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome2SelfEmpMonthly3", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2SelfEmpAGIEstimate_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome2SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />

            </div>
            <div class="divSSISSDIp2">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2SSIDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome2SSIDoc")
                </div>
                <hr />
            </div>
            <div class="divUnemploymentp2">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2UnempInsDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "C1_MIncome2UnempInsDoc")
                </div>
            </div>
            <div class="dvestimatedp2">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2SourceMonthlyAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome2SourceMonthlyAmount", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divproofofincomep2">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2ProofDoc_item", new { @class = "control-label" })
                    </div>
                    @Helpers.FileUpload(Model, "PREVIOUS_C1_MIncome2ProofDoc")
                </div>

            </div>
            <div class="divAnnualgrossincomep2">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome2SourceAnnualAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome2SourceAnnualAmount", new { @class = "form-control" })
                    </div>
                </div>
            </div>

        </div>
    </div>

    <!--Another source of income section P2 -->
    <div class="Anotherp3">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3HasIncome_item", new { @class = "control-label" })
                    </div>
                    @Helpers.YesNoRadioButtons(Model, "C1_MIncome3HasIncome")
                </div>
                <script type="text/javascript">
                    $(function () {
                        function Showorhidep3() {
                            if ($("#C1_MIncome3HasIncome_YesOption").prop("checked") === true) {
                                // show section
                                $(".Personalp3").show();
                                $(".Anotherp4").show();
                                $(".Personalp4").hide();
                            }
                            else {
                                // hide section
                                $(".Personalp3").hide();
                                $(".Anotherp4").hide();
                                $(".Personalp4").hide();
                            }
                        }

                        Showorhidep3();

                        $("#C1_MIncome3HasIncome_YesOption").change(function (e) {
                            Showorhidep3();
                        }).change();
                        $("#C1_MIncome3HasIncome_NoOption").change(function (e) {
                            Showorhidep3();
                        }).change();
                    });
                </script>


            </div>
        </div>
    </div>

    <!--Personal income section 3 of 4-->
    <div class="Personalp3">
        <span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-6_sub"]</span></p>
        @*@<span class="label label-danger" style="font-size:15px;">Personal Income (3 of 4)</span></p>*@
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousPersonalsec3" class="btn" type="button"></button></div>
                <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3SourceType_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.DropDownList(Model, "C1_MIncome3SourceType_item", "C1_MIncome3SourceType", true)
                    </div>
                </div>
                <script type="text/javascript">
                    $(function () {

                        $(".divotherincomep3").hide();
                        $(".divpaystubfor3currentp3").hide();
                        $(".divSelfEmploymentAffidavitp3").hide();
                        $(".divSSISSDIp3").hide();
                        $(".divUnemploymentp3").hide();
                        $(".dvestimatedp3").hide();
                        $(".divproofofincomep3").hide();
                        $(".divAnnualgrossincomep3").hide();

                        $("#C1_MIncome3SourceType").change(function () {
                            var selectedText = $(this).find("option:selected").text();
                            var selectedValue = $(this).val();
                            // alert("Selected Text: " + selectedText + " Value: " + selectedValue);
                            if (selectedText == 'Other (please describe below)') {
                                $(".divotherincomep3").show();
                                $(".divpaystubfor3currentp3").hide();
                                $(".divSelfEmploymentAffidavitp3").hide();
                                $(".divSSISSDIp3").hide();
                                $(".divUnemploymentp3").hide();
                                $(".dvestimatedp3").show();
                                $(".divproofofincomep3").hide();
                                $(".divAnnualgrossincomep3").show();

                            }
                            else if (selectedText == 'Employment') {
                                $(".divotherincomep3").hide();
                                $(".divpaystubfor3currentp3").show();
                                $(".divSelfEmploymentAffidavitp3").hide();
                                $(".divSSISSDIp3").hide();
                                $(".divUnemploymentp3").hide();
                                $(".dvestimatedp3").hide();
                                $(".divproofofincomep3").hide();
                                $(".divAnnualgrossincomep3").hide();

                            }
                            else if (selectedText == 'Self-employment') {
                                $(".divotherincomep3").hide();
                                $(".divpaystubfor3currentp3").hide();
                                $(".divSelfEmploymentAffidavitp3").show();
                                $(".divSSISSDIp3").hide();
                                $(".divUnemploymentp3").hide();
                                $(".dvestimatedp3").hide();
                                $(".divproofofincomep3").hide();
                                $(".divAnnualgrossincomep3").hide();

                            }
                            else if (selectedText == 'Supplemental Social Security Income (SSI)' || selectedText == 'Social Security Disability Insurance (SSDI)') {
                                $(".divotherincomep3").hide();
                                $(".divpaystubfor3currentp3").hide();
                                $(".divSelfEmploymentAffidavitp3").hide();
                                $(".divSSISSDIp3").show();
                                $(".divUnemploymentp3").hide();
                                $(".dvestimatedp3").show();
                                $(".divproofofincomep3").hide();
                                $(".divAnnualgrossincomep3").show();

                            }
                            else if (selectedText == 'State Disability Insurance (SDI)' || selectedText == 'Private Disability' || selectedText == 'Social Security Retirement' || selectedText == 'Private/Employer Based Retirement' || selectedText == 'Workers compensation' || selectedText == 'Investment or Interest Income' || selectedText == 'Veterans Administration (VA) benefit' || selectedText == 'Alimony' || selectedText == 'Child support') {
                                $(".divotherincomep3").hide();
                                $(".divpaystubfor3currentp3").hide();
                                $(".divSelfEmploymentAffidavitp3").hide();
                                $(".divSSISSDIp3").hide();
                                $(".divUnemploymentp3").hide();
                                $(".dvestimatedp3").show();
                                $(".divproofofincomep3").show();
                                $(".divAnnualgrossincomep3").show();

                            }
                            else if (selectedText == 'Foreign Earned Income') {
                                $(".divotherincomep3").hide();
                                $(".divpaystubfor3currentp3").hide();
                                $(".divSelfEmploymentAffidavitp3").hide();
                                $(".divSSISSDIp3").hide();
                                $(".divUnemploymentp3").hide();
                                $(".dvestimatedp3").show();
                                $(".divproofofincomep3").hide();
                                $(".divAnnualgrossincomep3").show();

                            }
                            else if (selectedText == 'Unemployment Insurance (UI)') {
                                $(".divotherincomep3").hide();
                                $(".divpaystubfor3currentp3").hide();
                                $(".divSelfEmploymentAffidavitp3").hide();
                                $(".divSSISSDIp3").hide();
                                $(".divUnemploymentp3").show();
                                $(".dvestimatedp3").show();
                                $(".divproofofincomep3").hide();
                                $(".divAnnualgrossincomep3").show();

                            }
                            else {
                                $(".divotherincomep3").hide();
                                $(".divpaystubfor3currentp3").hide();
                                $(".divSelfEmploymentAffidavitp3").hide();
                                $(".divSSISSDIp3").hide();
                                $(".divUnemploymentp3").hide();
                                $(".dvestimatedp3").hide();
                                $(".divproofofincomep3").hide();
                                $(".divAnnualgrossincomep3").hide();

                            }

                        }).change();
                    });

                </script>
                <div class="divotherincomep3">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3SourceTypeOther_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome3SourceTypeOther", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divpaystubfor3currentp3">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3EmploymentDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_MIncome3EmploymentDoc")

                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3EmplMonthIncome_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome3EmplMonthIncome", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3EmplEstAGI_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_MIncome3EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_MIncome3EmplAgreeYN_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_MIncome3EmplAgreeYN")
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_MIncome3EmplSelfAGI_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-4">
                                @Helpers.TextInput(Model, "C1_MIncome3EmplSelfAGI", new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_MIncome3EmplCertSelfAGI")
                                </div>
                            </div>
                        </div>*@

                    <hr />
                </div>

                <div class="divSelfEmploymentAffidavitp3">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmploymentDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_MIncome3SelfEmploymentDoc")

                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            <strong>Input your 3 current, consecutive months of self-employment income</strong>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmpMonthly1_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome3SelfEmpMonthly1", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmpMonthly2_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome3SelfEmpMonthly2", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmpMonthly3_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome3SelfEmpMonthly3", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmpAGIEstimate_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_MIncome3SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <hr />
                    @*<div class="form-group">
                            <div class="col-md-5">
                                @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmpAGIAgree_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_MIncome3SelfEmpAGIAgree")
                        </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmpAGISelfEstimate_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">
                                @Helpers.TextInput(Model, "C1_MIncome3SelfEmpAGISelfEstimate", new { @class = "form-control" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_MIncome3SelfEmpAGICertify")
                                </div>
                            </div>
                        </div>
                        <hr />*@
                </div>
                <div class="divSSISSDIp3">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3SSIDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_MIncome3SSIDoc")

                    </div>
                    <hr />
                </div>
                <div class="divUnemploymentp3">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3UnempInsDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_MIncome3UnempInsDoc")

                    </div>
                </div>
                <div class="dvestimatedp3">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3SourceMonthlyAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome3SourceMonthlyAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divproofofincomep3">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3ProofDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_MIncome3ProofDoc")

                    </div>
                </div>
                <div class="divAnnualgrossincomep3">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome3SourceAnnualAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome3SourceAnnualAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Previous Personal income section 3 of 4-->
    <div class="panel panel-default previous-response" id="PreviousPersonalsec3">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MIncome3SourceType_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_MIncome3SourceType_item", "PREVIOUS_C1_MIncome3SourceType", true)
                </div>
            </div>

            <div class="divotherincomep3">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3SourceTypeOther_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome3SourceTypeOther", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divpaystubfor3currentp3">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3EmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_MIncome3EmploymentDoc")

                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3EmplMonthIncome_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome3EmplMonthIncome", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3EmplEstAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome3EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>


                <hr />
            </div>

            <div class="divSelfEmploymentAffidavitp3">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_MIncome3SelfEmploymentDoc")

                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        <strong>Input your 3 current, consecutive months of self-employment income</strong>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmpMonthly1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome3SelfEmpMonthly1", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmpMonthly2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome3SelfEmpMonthly2", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmpMonthly3_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome3SelfEmpMonthly3", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3SelfEmpAGIEstimate_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome3SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />

            </div>
            <div class="divSSISSDIp3">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3SSIDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_MIncome3SSIDoc")

                </div>
                <hr />
            </div>
            <div class="divUnemploymentp3">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3UnempInsDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_MIncome3UnempInsDoc")

                </div>
            </div>
            <div class="dvestimatedp3">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3SourceMonthlyAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome3SourceMonthlyAmount", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divproofofincomep3">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3ProofDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "PREVIOUS_C1_MIncome3ProofDoc")

                </div>

            </div>
            <div class="divAnnualgrossincomep3">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome3SourceAnnualAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome3SourceAnnualAmount", new { @class = "form-control" })
                    </div>
                </div>
            </div>


        </div>
    </div>

    <!--Another source of income section P3 -->
    <div class="Anotherp4">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4HasIncome_item", new { @class = "control-label" })
                    </div>
                    @Helpers.YesNoRadioButtons(Model, "C1_MIncome4HasIncome")
                </div>
                <script type="text/javascript">
                    $(function () {
                        function Showorhidep4() {
                            if ($("#C1_MIncome4HasIncome_YesOption").prop("checked") === true) {
                                // show section
                                $(".Personalp4").show();
                            }
                            else {
                                // hide section
                                $(".Personalp4").hide();
                            }
                        }

                        Showorhidep4();

                        $("#C1_MIncome4HasIncome_YesOption").change(function (e) {
                            Showorhidep4();
                        }).change();
                        $("#C1_MIncome4HasIncome_NoOption").change(function (e) {
                            Showorhidep4();
                        }).change();
                    });
                </script>

            </div>
        </div>
    </div>

    <!--Personal income section 4 of 4-->

    <div class="Personalp4">
        <span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-7_sub"]</span></p>
        @*@<span class="label label-danger" style="font-size:15px;">Personal Income (4 of 4)</span></p>*@
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousPersonalsec4" class="btn" type="button"></button></div>
                <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4SourceType_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.DropDownList(Model, "C1_MIncome4SourceType_item", "C1_MIncome4SourceType", true)
                    </div>
                </div>
                <script type="text/javascript">
                    $(function () {
                        $(".divotherincomep4").hide();
                        $(".divpaystubfor3currentp4").hide();
                        $(".divSelfEmploymentAffidavitp4").hide();
                        $(".divSSISSDIp4").hide();
                        $(".divUnemploymentp4").hide();
                        $(".dvestimatedp4").hide();
                        $(".divproofofincomep4").hide();
                        $(".divAnnualgrossincomep4").hide();

                        $("#C1_MIncome4SourceType").change(function () {
                            var selectedText = $(this).find("option:selected").text();
                            var selectedValue = $(this).val();
                            // alert("Selected Text: " + selectedText + " Value: " + selectedValue);
                            if (selectedText == 'Other (please describe below)') {
                                $(".divotherincomep4").show();
                                $(".divpaystubfor3currentp4").hide();
                                $(".divSelfEmploymentAffidavitp4").hide();
                                $(".divSSISSDIp4").hide();
                                $(".divUnemploymentp4").hide();
                                $(".dvestimatedp4").show();
                                $(".divproofofincomep4").hide();
                                $(".divAnnualgrossincomep4").show();

                            }
                            else if (selectedText == 'Employment') {
                                $(".divotherincomep4").hide();
                                $(".divpaystubfor3currentp4").show();
                                $(".divSelfEmploymentAffidavitp4").hide();
                                $(".divSSISSDIp4").hide();
                                $(".divUnemploymentp4").hide();
                                $(".dvestimatedp4").hide();
                                $(".divproofofincomep4").hide();
                                $(".divAnnualgrossincomep4").hide();

                            }
                            else if (selectedText == 'Self-employment') {
                                $(".divotherincomep4").hide();
                                $(".divpaystubfor3currentp4").hide();
                                $(".divSelfEmploymentAffidavitp4").show();
                                $(".divSSISSDIp4").hide();
                                $(".divUnemploymentp4").hide();
                                $(".dvestimatedp4").hide();
                                $(".divproofofincomep4").hide();
                                $(".divAnnualgrossincomep4").hide();

                            }
                            else if (selectedText == 'Supplemental Social Security Income (SSI)' || selectedText == 'Social Security Disability Insurance (SSDI)') {
                                $(".divotherincomep4").hide();
                                $(".divpaystubfor3currentp4").hide();
                                $(".divSelfEmploymentAffidavitp4").hide();
                                $(".divSSISSDIp4").show();
                                $(".divUnemploymentp4").hide();
                                $(".dvestimatedp4").show();
                                $(".divproofofincomep4").hide();
                                $(".divAnnualgrossincomep4").show();

                            }
                            else if (selectedText == 'State Disability Insurance (SDI)' || selectedText == 'Private Disability' || selectedText == 'Social Security Retirement' || selectedText == 'Private/Employer Based Retirement' || selectedText == 'Workers compensation' || selectedText == 'Investment or Interest Income' || selectedText == 'Veterans Administration (VA) benefit' || selectedText == 'Alimony' || selectedText == 'Child support') {
                                $(".divotherincomep4").hide();
                                $(".divpaystubfor3currentp4").hide();
                                $(".divSelfEmploymentAffidavitp4").hide();
                                $(".divSSISSDIp4").hide();
                                $(".divUnemploymentp4").hide();
                                $(".dvestimatedp4").show();
                                $(".divproofofincomep4").show();
                                $(".divAnnualgrossincomep4").show();

                            }
                            else if (selectedText == 'Foreign Earned Income') {
                                $(".divotherincomep4").hide();
                                $(".divpaystubfor3currentp4").hide();
                                $(".divSelfEmploymentAffidavitp4").hide();
                                $(".divSSISSDIp4").hide();
                                $(".divUnemploymentp4").hide();
                                $(".dvestimatedp4").show();
                                $(".divproofofincomep4").hide();
                                $(".divAnnualgrossincomep4").show();

                            }
                            else if (selectedText == 'Unemployment Insurance (UI)') {
                                $(".divotherincomep4").hide();
                                $(".divpaystubfor3currentp4").hide();
                                $(".divSelfEmploymentAffidavitp4").hide();
                                $(".divSSISSDIp4").hide();
                                $(".divUnemploymentp4").show();
                                $(".dvestimatedp4").show();
                                $(".divproofofincomep4").hide();
                                $(".divAnnualgrossincomep4").show();

                            }
                            else {
                                $(".divotherincomep4").hide();
                                $(".divpaystubfor3currentp4").hide();
                                $(".divSelfEmploymentAffidavitp4").hide();
                                $(".divSSISSDIp4").hide();
                                $(".divUnemploymentp4").hide();
                                $(".dvestimatedp4").hide();
                                $(".divproofofincomep4").hide();
                                $(".divAnnualgrossincomep4").hide();

                            }

                        }).change();
                    });

                </script>
                <div class="divotherincomep4">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4SourceTypeOther_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome4SourceTypeOther", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divpaystubfor3currentp4">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4EmploymentDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_MIncome4EmploymentDoc")

                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4EmplMonthIncome_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome4EmplMonthIncome", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4EmplEstAGI_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_MIncome4EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_MIncome4EmplAgreeYN_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_MIncome4EmplAgreeYN")
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_MIncome4EmplSelfAGI_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-4">
                                @Helpers.TextInput(Model,"C1_MIncme4EmplSelfAGI_item", new{ @class= "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_MIncome4EmplCertSelfAGI")
                                </div>
                            </div>
                        </div>*@

                    <hr />
                </div>
                <div class="divSelfEmploymentAffidavitp4">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmploymentDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_MIncome4SelfEmploymentDoc")

                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            <strong>Input your 3 current, consecutive months of self-employment income</strong>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmpMonthly1_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome4SelfEmpMonthly1", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmpMonthly2_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome4SelfEmpMonthly2", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmpMonthly3_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome4SelfEmpMonthly3", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmpAGIEstimate_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_MIncome4SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <hr />
                    @*<div class="form-group">
                            <div class="col-md-5">
                                @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmpAGIAgree_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_MIncome4SelfEmpAGIAgree")
                        </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmpAGISelfEstimate_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">
                                @Helpers.TextInput(Model, "C1_MIncome4SelfEmpAGISelfEstimate", new { @class = "form-control" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_MIncome4SelfEmpAGICertify")
                                </div>
                            </div>
                        </div>
                        <hr />*@
                </div>
                <div class="divSSISSDIp4">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4SSIDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_MIncome4SSIDoc")

                    </div>
                    <hr />
                </div>
                <div class="divUnemploymentp4">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4UnempInsDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_MIncome4UnempInsDoc")

                    </div>
                </div>
                <div class="dvestimatedp4">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4SourceMonthlyAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome4SourceMonthlyAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divproofofincomep4">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4ProofDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_MIncome4ProofDoc")

                    </div>
                    <hr />
                </div>
                <div class="divAnnualgrossincomep4">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_MIncome4SourceAnnualAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_MIncome4SourceAnnualAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Previous Personal income section 4 of 4-->
    <div class="panel panel-default previous-response" id="PreviousPersonalsec4">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MIncome4SourceType_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_MIncome4SourceType_item", "PREVIOUS_C1_MIncome4SourceType", true)
                </div>
            </div>

            <div class="divotherincomep4">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4SourceTypeOther_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome4SourceTypeOther", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divpaystubfor3currentp4">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4EmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_MIncome4EmploymentDoc")

                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4EmplMonthIncome_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome4EmplMonthIncome", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4EmplEstAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome4EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divSelfEmploymentAffidavitp4">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_MIncome4SelfEmploymentDoc")

                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        <strong>Input your 3 current, consecutive months of self-employment income</strong>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmpMonthly1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome4SelfEmpMonthly1", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmpMonthly2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome4SelfEmpMonthly2", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmpMonthly3_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome4SelfEmpMonthly3", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4SelfEmpAGIEstimate_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome4SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />

            </div>
            <div class="divSSISSDIp4">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4SSIDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_MIncome4SSIDoc")

                </div>
                <hr />
            </div>
            <div class="divUnemploymentp4">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4UnempInsDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_MIncome4UnempInsDoc")

                </div>
            </div>
            <div class="dvestimatedp4">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4SourceMonthlyAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome4SourceMonthlyAmount", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divproofofincomep4">

            </div>
            <div class="divAnnualgrossincomep4">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MIncome4SourceAnnualAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MIncome4SourceAnnualAmount", new { @class = "form-control" })
                    </div>
                </div>
            </div>

        </div>

    </div>


    <!--Partner income section 1 of 4-->

    <span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-8_sub"]</span></p>
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousPartnersec1" class="btn" type="button"></button></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PIncome1Recipient_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "C1_PIncome1Recipient", new { @class = "form-control" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PIncome1SourceType_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_PIncome1SourceType_item", "C1_PIncome1SourceType", true)
                </div>
            </div>
            <script type="text/javascript">
                $(function () {

                    $(".divotherincomep5").hide();
                    $(".divpaystubfor3currentp5").hide();
                    $(".divSelfEmploymentAffidavitp5").hide();
                    $(".divSSISSDIp5").hide();
                    $(".divUnemploymentp5").hide();
                    $(".dvestimatedp5").hide();
                    $(".divproofofincomep5").hide();
                    $(".divAnnualgrossincomep5").hide();

                    $("#C1_PIncome1SourceType").change(function () {
                        var selectedText = $(this).find("option:selected").text();
                        var selectedValue = $(this).val();
                        // alert("Selected Text: " + selectedText + " Value: " + selectedValue);
                        if (selectedText == 'Other (please describe below)') {
                            $(".divotherincomep5").show();
                            $(".divpaystubfor3currentp5").hide();
                            $(".divSelfEmploymentAffidavitp5").hide();
                            $(".divSSISSDIp5").hide();
                            $(".divUnemploymentp5").hide();
                            $(".dvestimatedp5").show();
                            $(".divproofofincomep5").hide();
                            $(".divAnnualgrossincomep5").show();

                        }
                        else if (selectedText == 'Employment') {
                            $(".divotherincomep5").hide();
                            $(".divpaystubfor3currentp5").show();
                            $(".divSelfEmploymentAffidavitp5").hide();
                            $(".divSSISSDIp5").hide();
                            $(".divUnemploymentp5").hide();
                            $(".dvestimatedp5").hide();
                            $(".divproofofincomep5").hide();
                            $(".divAnnualgrossincomep5").hide();

                        }
                        else if (selectedText == 'Self-employment') {
                            $(".divotherincomep5").hide();
                            $(".divpaystubfor3currentp5").hide();
                            $(".divSelfEmploymentAffidavitp5").show();
                            $(".divSSISSDIp5").hide();
                            $(".divUnemploymentp5").hide();
                            $(".dvestimatedp5").hide();
                            $(".divproofofincomep5").hide();
                            $(".divAnnualgrossincomep5").hide();

                        }
                        else if (selectedText == 'Supplemental Social Security Income (SSI)' || selectedText == 'Social Security Disability Insurance (SSDI)') {
                            $(".divotherincomep5").hide();
                            $(".divpaystubfor3currentp5").hide();
                            $(".divSelfEmploymentAffidavitp5").hide();
                            $(".divSSISSDIp5").show();
                            $(".divUnemploymentp5").hide();
                            $(".dvestimatedp5").show();
                            $(".divproofofincomep5").hide();
                            $(".divAnnualgrossincomep5").show();

                        }
                        else if (selectedText == 'State Disability Insurance (SDI)' || selectedText == 'Private Disability' || selectedText == 'Social Security Retirement' || selectedText == 'Private/Employer Based Retirement' || selectedText == 'Workers compensation' || selectedText == 'Investment or Interest Income' || selectedText == 'Veterans Administration (VA) benefit' || selectedText == 'Alimony' || selectedText == 'Child support') {
                            $(".divotherincomep5").hide();
                            $(".divpaystubfor3currentp5").hide();
                            $(".divSelfEmploymentAffidavitp5").hide();
                            $(".divSSISSDIp5").hide();
                            $(".divUnemploymentp5").hide();
                            $(".dvestimatedp5").show();
                            $(".divproofofincomep5").show();
                            $(".divAnnualgrossincomep5").show();

                        }
                        else if (selectedText == 'Foreign Earned Income') {
                            $(".divotherincomep5").hide();
                            $(".divpaystubfor3currentp5").hide();
                            $(".divSelfEmploymentAffidavitp5").hide();
                            $(".divSSISSDIp5").hide();
                            $(".divUnemploymentp5").hide();
                            $(".dvestimatedp5").show();
                            $(".divproofofincomep5").hide();
                            $(".divAnnualgrossincomep5").show();

                        }
                        else if (selectedText == 'Unemployment Insurance (UI)') {
                            $(".divotherincomep5").hide();
                            $(".divpaystubfor3currentp5").hide();
                            $(".divSelfEmploymentAffidavitp5").hide();
                            $(".divSSISSDIp5").hide();
                            $(".divUnemploymentp5").show();
                            $(".dvestimatedp5").show();
                            $(".divproofofincomep5").hide();
                            $(".divAnnualgrossincomep5").show();

                        }
                        else {
                            $(".divotherincomep5").hide();
                            $(".divpaystubfor3currentp5").hide();
                            $(".divSelfEmploymentAffidavitp5").hide();
                            $(".divSSISSDIp5").hide();
                            $(".divUnemploymentp5").hide();
                            $(".dvestimatedp5").hide();
                            $(".divproofofincomep5").hide();
                            $(".divAnnualgrossincomep5").hide();

                        }

                    }).change();
                });

            </script>
            <div class="divotherincomep5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SourceTypeOther_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_PIncome1SourceTypeOther", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                <hr />
            </div>
            <div class="divpaystubfor3currentp5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1EmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome1EmploymentDoc")

                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1EmplMonthIncome_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_PIncome1EmplMonthIncome", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1EmplEstAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "C1_PIncome1EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                @*<div class="form-group">
                        <div class="col-md-4">
                            @Helpers.LabelSpan(Model, "C1_PIncome1EmplAgreeYN_item", new { @class = "control-label" })
                        </div>
                        @Helpers.YesNoRadioButtons(Model, "C1_PIncome1EmplAgreeYN")
                    </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            @Helpers.LabelSpan(Model, "C1_PIncome1EmplSelfAGI_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_PIncome1EmplSelfAGI", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="form-group" style="margin-left:15px">
                        <div class="col-md-7">
                            <div class="checkbox checkbox-info">
                                @Helpers.LabeledCheckboxInput(Model, "C1_PIncome1EmplCertSelfAGI")
                            </div>
                        </div>
                    </div>

                            <hr />*@
            </div>
            <div class="divSelfEmploymentAffidavitp5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome1SelfEmploymentDoc")

                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        <strong>Input your 3 current, consecutive months of self-employment income</strong>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmpMonthly1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_PIncome1SelfEmpMonthly1", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmpMonthly2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_PIncome1SelfEmpMonthly2", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmpMonthly3_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_PIncome1SelfEmpMonthly3", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmpAGIEstimate_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "C1_PIncome1SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />
                @*<div class="form-group">
                        <div class="col-md-5">
                            @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmpAGIAgree_item", new { @class = "control-label" })
                        </div>
                        @Helpers.YesNoRadioButtons(Model, "C1_PIncome1SelfEmpAGIAgree")
                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmpAGISelfEstimate_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Helpers.TextInput(Model, "C1_PIncome1SelfEmpAGISelfEstimate", new { @class = "form-control" })
                        </div>
                    </div>
                    <hr />
                    <div class="form-group" style="margin-left:15px">
                        <div class="col-md-7">
                            <div class="checkbox checkbox-info">
                                @Helpers.LabeledCheckboxInput(Model, "C1_PIncome1SelfEmpAGICertify")
                            </div>
                        </div>
                    </div>
                    <hr />*@
            </div>
            <div class="divSSISSDIp5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SSIDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome1SSIDoc")

                </div>
                <hr />
            </div>
            <div class="divUnemploymentp5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1UnempInsDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome1UnempInsDoc")

                </div>
            </div>
            <div class="dvestimatedp5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SourceMonthlyAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_PIncome1SourceMonthlyAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
                <hr />
            </div>
            <div class="divproofofincomep5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1ProofDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome1ProofDoc")

                </div>
            </div>
            <hr />

            <div class="divAnnualgrossincomep5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SourceAnnualAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">

                        <div class="input-group">

                            <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                            @Helpers.TextInput(Model, "C1_PIncome1SourceAnnualAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                        </div>


                        <span class="icon"></span><label class="lbl-error error"></label>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <!--Previous Partner income section 1 of 4-->
    <div class="panel panel-default previous-response" id="PreviousPartnersec1">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PIncome1Recipient_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome1Recipient", new { @class = "form-control" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PIncome1SourceType_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_PIncome1SourceType_item", "PREVIOUS_C1_PIncome1SourceType", true)
                </div>
            </div>

            <div class="divotherincomep5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SourceTypeOther_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome1SourceTypeOther", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divpaystubfor3currentp5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1EmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome1EmploymentDoc")

                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1EmplMonthIncome_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome1EmplMonthIncome", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1EmplEstAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome1EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

            </div>
            <div class="divSelfEmploymentAffidavitp5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome1SelfEmploymentDoc")

                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        <strong>Input your 3 current, consecutive months of self-employment income</strong>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmpMonthly1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome1SelfEmpMonthly1", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmpMonthly2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome1SelfEmpMonthly2", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmpMonthly3_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome1SelfEmpMonthly3", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SelfEmpAGIEstimate_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome1SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />

            </div>
            <div class="divSSISSDIp5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SSIDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome1SSIDoc")

                </div>
                <hr />
            </div>
            <div class="divUnemploymentp5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1UnempInsDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome1UnempInsDoc")

                </div>
            </div>
            <div class="dvestimatedp5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SourceMonthlyAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome1SourceMonthlyAmount", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divproofofincomep5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1ProofDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "PREVIOUS_C1_PIncome1ProofDoc")

                </div>
            </div>
            <div class="divAnnualgrossincomep5">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome1SourceAnnualAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome1SourceAnnualAmount", new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Partner Another source of income section P1 -->
    <div class="Anotherpart2">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome2HasIncome_item", new { @class = "control-label" })
                    </div>
                    @Helpers.YesNoRadioButtons(Model, "C1_PIncome2HasIncome")
                </div>
                <script type="text/javascript">
                    $(function () {
                        function Showorhidepart2() {
                            if ($("#C1_PIncome2HasIncome_YesOption").prop("checked") === true) {
                                // show section
                                $(".Partnerp2").show();
                                $(".Anotherpart3").show();
                                $(".Anotherpart4").hide();
                                $(".Partnerp3").hide();
                                $(".Partnerp4").hide();
                            }
                            else {
                                // hide section
                                $(".Partnerp2").hide();
                                $(".Anotherpart3").hide();
                                $(".Anotherpart4").hide();
                                $(".Partnerp3").hide();
                                $(".Partnerp4").hide();
                            }
                        }

                        Showorhidepart2();

                        $("#C1_PIncome2HasIncome_YesOption").change(function (e) {
                            Showorhidepart2();
                        }).change();
                        $("#C1_PIncome2HasIncome_NoOption").change(function (e) {
                            Showorhidepart2();
                        }).change();
                    });
                </script>

            </div>
        </div>
    </div>
    <!--Partner income section 2 of 4-->

    <div class="Partnerp2">
        @*@<span class="label label-danger" style="font-size:15px;">Partner Income (2 of 4)</span></p>*@
        <span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-9_sub"]</span></p>
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousPartnersec2" class="btn" type="button"></button></div>
                <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome2Recipient_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "C1_PIncome2Recipient", new { @class = "form-control" })
                    </div>
                </div>
                <hr />

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome2SourceType_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.DropDownList(Model, "C1_PIncome2SourceType_item", "C1_PIncome2SourceType", true)
                    </div>
                </div>
                <script type="text/javascript">
                    $(function () {

                        $(".divotherincomep6").hide();
                        $(".divpaystubfor3currentp6").hide();
                        $(".divSelfEmploymentAffidavitp6").hide();
                        $(".divSSISSDIp6").hide();
                        $(".divUnemploymentp6").hide();
                        $(".dvestimatedp6").hide();
                        $(".divproofofincomep6").hide();
                        $(".divAnnualgrossincomep6").hide();

                        $("#C1_PIncome2SourceType").change(function () {
                            var selectedText = $(this).find("option:selected").text();
                            var selectedValue = $(this).val();
                            // alert("Selected Text: " + selectedText + " Value: " + selectedValue);
                            if (selectedText == 'Other (please describe below)') {
                                $(".divotherincomep6").show();
                                $(".divpaystubfor3currentp6").hide();
                                $(".divSelfEmploymentAffidavitp6").hide();
                                $(".divSSISSDIp6").hide();
                                $(".divUnemploymentp6").hide();
                                $(".dvestimatedp6").show();
                                $(".divproofofincomep6").hide();
                                $(".divAnnualgrossincomep6").show();

                            }
                            else if (selectedText == 'Employment') {
                                $(".divotherincomep6").hide();
                                $(".divpaystubfor3currentp6").show();
                                $(".divSelfEmploymentAffidavitp6").hide();
                                $(".divSSISSDIp6").hide();
                                $(".divUnemploymentp6").hide();
                                $(".dvestimatedp6").hide();
                                $(".divproofofincomep6").hide();
                                $(".divAnnualgrossincomep6").hide();

                            }
                            else if (selectedText == 'Self-employment') {
                                $(".divotherincomep6").hide();
                                $(".divpaystubfor3currentp6").hide();
                                $(".divSelfEmploymentAffidavitp6").show();
                                $(".divSSISSDIp6").hide();
                                $(".divUnemploymentp6").hide();
                                $(".dvestimatedp6").hide();
                                $(".divproofofincomep6").hide();
                                $(".divAnnualgrossincomep6").hide();

                            }
                            else if (selectedText == 'Supplemental Social Security Income (SSI)' || selectedText == 'Social Security Disability Insurance (SSDI)') {
                                $(".divotherincomep6").hide();
                                $(".divpaystubfor3currentp6").hide();
                                $(".divSelfEmploymentAffidavitp6").hide();
                                $(".divSSISSDIp6").show();
                                $(".divUnemploymentp6").hide();
                                $(".dvestimatedp6").show();
                                $(".divproofofincomep6").hide();
                                $(".divAnnualgrossincomep6").show();

                            }
                            else if (selectedText == 'State Disability Insurance (SDI)' || selectedText == 'Private Disability' || selectedText == 'Social Security Retirement' || selectedText == 'Private/Employer Based Retirement' || selectedText == 'Workers compensation' || selectedText == 'Investment or Interest Income' || selectedText == 'Veterans Administration (VA) benefit' || selectedText == 'Alimony' || selectedText == 'Child support') {
                                $(".divotherincomep6").hide();
                                $(".divpaystubfor3currentp6").hide();
                                $(".divSelfEmploymentAffidavitp6").hide();
                                $(".divSSISSDIp6").hide();
                                $(".divUnemploymentp6").hide();
                                $(".dvestimatedp6").show();
                                $(".divproofofincomep6").show();
                                $(".divAnnualgrossincomep6").show();

                            }
                            else if (selectedText == 'Foreign Earned Income') {
                                $(".divotherincomep6").hide();
                                $(".divpaystubfor3currentp6").hide();
                                $(".divSelfEmploymentAffidavitp6").hide();
                                $(".divSSISSDIp6").hide();
                                $(".divUnemploymentp6").hide();
                                $(".dvestimatedp6").show();
                                $(".divproofofincomep6").hide();
                                $(".divAnnualgrossincomep6").show();

                            }
                            else if (selectedText == 'Unemployment Insurance (UI)') {
                                $(".divotherincomep6").hide();
                                $(".divpaystubfor3currentp6").hide();
                                $(".divSelfEmploymentAffidavitp6").hide();
                                $(".divSSISSDIp6").hide();
                                $(".divUnemploymentp6").show();
                                $(".dvestimatedp6").show();
                                $(".divproofofincomep6").hide();
                                $(".divAnnualgrossincomep6").show();

                            }
                            else {
                                $(".divotherincomep6").hide();
                                $(".divpaystubfor3currentp6").hide();
                                $(".divSelfEmploymentAffidavitp6").hide();
                                $(".divSSISSDIp6").hide();
                                $(".divUnemploymentp6").hide();
                                $(".dvestimatedp6").hide();
                                $(".divproofofincomep6").hide();
                                $(".divAnnualgrossincomep6").hide();

                            }

                        }).change();
                    });

                </script>
                <div class="divotherincomep6">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2SourceTypeOther_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome2SourceTypeOther", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divpaystubfor3currentp6">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2EmploymentDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome2EmploymentDoc")

                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2EmplMonthIncome_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome2EmplMonthIncome", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2EmplEstAGI_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_PIncome2EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_PIncome2EmplAgreeYN_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_PIncome2EmplAgreeYN")
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_PIncome2EmplSelfAGI_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-4">
                                @Helpers.TextInput(Model, "C1_PIncome2EmplSelfAGI", new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_PIncome2EmplCertSelfAGI")
                                </div>
                            </div>
                        </div>
                        <hr />*@
                </div>
                <div class="divSelfEmploymentAffidavitp6">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmploymentDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome2SelfEmploymentDoc")

                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            <strong>Input your 3 current, consecutive months of self-employment income</strong>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmpMonthly1_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome2SelfEmpMonthly1", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmpMonthly2_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome2SelfEmpMonthly2", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmpMonthly3_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome2SelfEmpMonthly3", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmpAGIEstimate_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_PIncome2SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <hr />
                    @*<div class="form-group">
                            <div class="col-md-5">
                                @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmpAGIAgree_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_PIncome2SelfEmpAGIAgree")
                        </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmpAGISelfEstimate_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">
                                @Helpers.TextInput(Model, "C1_PIncome2SelfEmpAGISelfEstimate", new { @class = "form-control" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_PIncome2SelfEmpAGICertify")
                                </div>
                            </div>
                        </div>
                        <hr />*@
                </div>
                <div class="divSSISSDIp6">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2SSIDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome2SSIDoc")

                    </div>
                    <hr />
                </div>
                <div class="divUnemploymentp6">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2UnempInsDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome2UnempInsDoc")

                    </div>
                </div>
                <div class="dvestimatedp6">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2SourceMonthlyAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome2SourceMonthlyAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divproofofincomep6">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2ProofDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome2ProofDoc")

                    </div>


                </div>
                <hr />

                <div class="divAnnualgrossincomep6">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome2SourceAnnualAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome2SourceAnnualAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Previous Partner income section 2 of 4-->
    <div class="panel panel-default previous-response" id="PreviousPartnersec2">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PIncome2Recipient_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome2Recipient", new { @class = "form-control" })
                </div>
            </div>
            <hr />

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PIncome2SourceType_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_PIncome2SourceType_item", "PREVIOUS_C1_PIncome2SourceType", true)
                </div>
            </div>

            <div class="divotherincomep6">
                <div class="form-group">
                    <div class="col-md-5">
                        @Helpers.LabelSpan(Model, "C1_PIncome2SourceTypeOther_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome2SourceTypeOther", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divpaystubfor3currentp6">
                <div class="form-group">
                    <div class="col-md-5">
                        @Helpers.LabelSpan(Model, "C1_PIncome2EmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome2EmploymentDoc")

                </div>
                <div class="form-group">
                    <div class="col-md-4">
                        @Helpers.LabelSpan(Model, "C1_PIncome2EmplMonthIncome_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome2EmplMonthIncome", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-4">
                        @Helpers.LabelSpan(Model, "C1_PIncome2EmplEstAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome2EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

            </div>
            <div class="divSelfEmploymentAffidavitp6">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome2SelfEmploymentDoc")

                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        <strong>Input your 3 current, consecutive months of self-employment income</strong>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-7">
                        @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmpMonthly1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome2SelfEmpMonthly1", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-7">
                        @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmpMonthly2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome2SelfEmpMonthly2", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-7">
                        @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmpMonthly3_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome2SelfEmpMonthly3", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-5">
                        @Helpers.LabelSpan(Model, "C1_PIncome2SelfEmpAGIEstimate_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome2SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />

            </div>
            <div class="divSSISSDIp6">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome2SSIDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome2SSIDoc")

                </div>
                <hr />
            </div>
            <div class="divUnemploymentp6">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome2UnempInsDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome2UnempInsDoc")

                </div>
            </div>
            <div class="dvestimatedp6">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome2SourceMonthlyAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome2SourceMonthlyAmount", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divproofofincomep6">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome2ProofDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "PREVIOUS_C1_PIncome2ProofDoc")

                </div>
            </div>
            <div class="divAnnualgrossincomep6">
                <div class="form-group">
                    <div class="col-md-4">
                        @Helpers.LabelSpan(Model, "C1_PIncome2SourceAnnualAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome2SourceAnnualAmount", new { @class = "form-control" })
                    </div>
                </div>
            </div>

        </div>

    </div>


    <!--Partner Another source of income section P2 -->
    <div class="Anotherpart3">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3HasIncome_item", new { @class = "control-label" })
                    </div>
                    @Helpers.YesNoRadioButtons(Model, "C1_PIncome3HasIncome")
                </div>
                <script type="text/javascript">
                    $(function () {
                        function Showorhidepart3() {
                            if ($("#C1_PIncome3HasIncome_YesOption").prop("checked") === true) {
                                // show section
                                $(".Partnerp3").show();
                                $(".Anotherpart4").show();
                                $(".Partnerp4").hide();
                            }
                            else {
                                // hide section
                                $(".Partnerp3").hide();
                                $(".Anotherpart4").hide();
                                $(".Partnerp4").hide();
                            }
                        }

                        Showorhidepart3();

                        $("#C1_PIncome3HasIncome_YesOption").change(function (e) {
                            Showorhidepart3();
                        }).change();
                        $("#C1_PIncome3HasIncome_NoOption").change(function (e) {
                            Showorhidepart3();
                        }).change();
                    });
                </script>
            </div>
        </div>
    </div>

    <!--Partner income section 3 of 4-->

    <div class="Partnerp3">
        @*@<span class="label label-danger" style="font-size:15px;">Partner Income (3 of 4)</span></p>*@
        <span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-10_sub"]</span></p>
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousPartnersec3" class="btn" type="button"></button></div>
                <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3Recipient_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "C1_PIncome3Recipient", new { @class = "form-control" })
                    </div>
                </div>
                <hr />

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3SourceType_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.DropDownList(Model, "C1_PIncome3SourceType_item", "C1_PIncome3SourceType", true)
                    </div>
                </div>
                <script type="text/javascript">
                    $(function () {

                        $(".divotherincomep7").hide();
                        $(".divpaystubfor3currentp7").hide();
                        $(".divSelfEmploymentAffidavitp7").hide();
                        $(".divSSISSDIp7").hide();
                        $(".divUnemploymentp7").hide();
                        $(".dvestimatedp7").hide();
                        $(".divproofofincomep7").hide();
                        $(".divAnnualgrossincomep7").hide();

                        $("#C1_PIncome3SourceType").change(function () {
                            var selectedText = $(this).find("option:selected").text();
                            var selectedValue = $(this).val();
                            // alert("Selected Text: " + selectedText + " Value: " + selectedValue);
                            if (selectedText == 'Other (please describe below)') {
                                $(".divotherincomep7").show();
                                $(".divpaystubfor3currentp7").hide();
                                $(".divSelfEmploymentAffidavitp7").hide();
                                $(".divSSISSDIp7").hide();
                                $(".divUnemploymentp7").hide();
                                $(".dvestimatedp7").show();
                                $(".divproofofincomep7").hide();
                                $(".divAnnualgrossincomep7").show();

                            }
                            else if (selectedText == 'Employment') {
                                $(".divotherincomep7").hide();
                                $(".divpaystubfor3currentp7").show();
                                $(".divSelfEmploymentAffidavitp7").hide();
                                $(".divSSISSDIp7").hide();
                                $(".divUnemploymentp7").hide();
                                $(".dvestimatedp7").hide();
                                $(".divproofofincomep7").hide();
                                $(".divAnnualgrossincomep7").hide();

                            }
                            else if (selectedText == 'Self-employment') {
                                $(".divotherincomep7").hide();
                                $(".divpaystubfor3currentp7").hide();
                                $(".divSelfEmploymentAffidavitp7").show();
                                $(".divSSISSDIp7").hide();
                                $(".divUnemploymentp7").hide();
                                $(".dvestimatedp7").hide();
                                $(".divproofofincomep7").hide();
                                $(".divAnnualgrossincomep7").hide();

                            }
                            else if (selectedText == 'Supplemental Social Security Income (SSI)' || selectedText == 'Social Security Disability Insurance (SSDI)') {
                                $(".divotherincomep7").hide();
                                $(".divpaystubfor3currentp7").hide();
                                $(".divSelfEmploymentAffidavitp7").hide();
                                $(".divSSISSDIp7").show();
                                $(".divUnemploymentp7").hide();
                                $(".dvestimatedp7").show();
                                $(".divproofofincomep7").hide();
                                $(".divAnnualgrossincomep7").show();

                            }
                            else if (selectedText == 'State Disability Insurance (SDI)' || selectedText == 'Private Disability' || selectedText == 'Social Security Retirement' || selectedText == 'Private/Employer Based Retirement' || selectedText == 'Workers compensation' || selectedText == 'Investment or Interest Income' || selectedText == 'Veterans Administration (VA) benefit' || selectedText == 'Alimony' || selectedText == 'Child support') {
                                $(".divotherincomep7").hide();
                                $(".divpaystubfor3currentp7").hide();
                                $(".divSelfEmploymentAffidavitp7").hide();
                                $(".divSSISSDIp7").hide();
                                $(".divUnemploymentp7").hide();
                                $(".dvestimatedp7").show();
                                $(".divproofofincomep7").show();
                                $(".divAnnualgrossincomep7").show();

                            }
                            else if (selectedText == 'Foreign Earned Income') {
                                $(".divotherincomep7").hide();
                                $(".divpaystubfor3currentp7").hide();
                                $(".divSelfEmploymentAffidavitp7").hide();
                                $(".divSSISSDIp7").hide();
                                $(".divUnemploymentp7").hide();
                                $(".dvestimatedp7").show();
                                $(".divproofofincomep7").hide();
                                $(".divAnnualgrossincomep7").show();

                            }
                            else if (selectedText == 'Unemployment Insurance (UI)') {
                                $(".divotherincomep7").hide();
                                $(".divpaystubfor3currentp7").hide();
                                $(".divSelfEmploymentAffidavitp7").hide();
                                $(".divSSISSDIp7").hide();
                                $(".divUnemploymentp7").show();
                                $(".dvestimatedp7").show();
                                $(".divproofofincomep7").hide();
                                $(".divAnnualgrossincomep7").show();

                            }
                            else {
                                $(".divotherincomep7").hide();
                                $(".divpaystubfor3currentp7").hide();
                                $(".divSelfEmploymentAffidavitp7").hide();
                                $(".divSSISSDIp7").hide();
                                $(".divUnemploymentp7").hide();
                                $(".dvestimatedp7").hide();
                                $(".divproofofincomep7").hide();
                                $(".divAnnualgrossincomep7").hide();

                            }

                        }).change();
                    });

                </script>
                <div class="divotherincomep7">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3SourceTypeOther_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome3SourceTypeOther", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divpaystubfor3currentp7">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3EmploymentDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome3EmploymentDoc")

                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3EmplMonthIncome_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome3EmplMonthIncome", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3EmplEstAGI_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_PIncome3EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_PIncome3EmplAgreeYN_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_PIncome3EmplAgreeYN")
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_PIncome3EmplSelfAGI_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-4">
                                @Helpers.TextInput(Model, "C1_PIncome3EmplSelfAGI", new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_PIncome3EmplCertSelfAGI")
                                </div>
                            </div>
                        </div>
                        <hr />*@
                </div>
                <div class="divSelfEmploymentAffidavitp7">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmploymentDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome3SelfEmploymentDoc")

                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            <strong>Input your 3 current, consecutive months of self-employment income</strong>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmpMonthly1_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome3SelfEmpMonthly1", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmpMonthly2_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome3SelfEmpMonthly2", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmpMonthly3_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome3SelfEmpMonthly3", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmpAGIEstimate_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_PIncome3SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <hr />
                    @*<div class="form-group">
                            <div class="col-md-5">
                                @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmpAGIAgree_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_PIncome3SelfEmpAGIAgree")
                        </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmpAGISelfEstimate_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">
                                @Helpers.TextInput(Model, "C1_PIncome3SelfEmpAGISelfEstimate", new { @class = "form-control" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_PIncome3SelfEmpAGICertify")
                                </div>
                            </div>
                        </div>
                        <hr />*@
                </div>
                <div class="divSSISSDIp7">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3SSIDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome3SSIDoc")

                    </div>
                    <hr />
                </div>
                <div class="divUnemploymentp7">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3UnempInsDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome3UnempInsDoc")

                    </div>
                </div>
                <div class="dvestimatedp7">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3SourceMonthlyAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome3SourceMonthlyAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divproofofincomep7">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3ProofDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome3ProofDoc")

                    </div>

                </div>
                <hr />

                <div class="divAnnualgrossincomep7">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome3SourceAnnualAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome3SourceAnnualAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Previous Partner income section 3 of 4-->
    <div class="panel panel-default previous-response" id="PreviousPartnersec3">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PIncome3Recipient_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome3Recipient", new { @class = "form-control" })
                </div>
            </div>
            <hr />

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PIncome3SourceType_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_PIncome3SourceType_item", "PREVIOUS_C1_PIncome3SourceType", true)
                </div>
            </div>

            <div class="divotherincomep7">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3SourceTypeOther_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome3SourceTypeOther", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divpaystubfor3currentp7">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3EmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome3EmploymentDoc")

                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3EmplMonthIncome_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome3EmplMonthIncome", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3EmplEstAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome3EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

            </div>
            <div class="divSelfEmploymentAffidavitp7">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome3SelfEmploymentDoc")

                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        <strong>Input your 3 current, consecutive months of self-employment income</strong>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmpMonthly1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome3SelfEmpMonthly1", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmpMonthly2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome3SelfEmpMonthly2", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmpMonthly3_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome3SelfEmpMonthly3", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3SelfEmpAGIEstimate_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome3SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />

            </div>
            <div class="divSSISSDIp7">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3SSIDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome3SSIDoc")

                </div>
                <hr />
            </div>
            <div class="divUnemploymentp7">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3UnempInsDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome3UnempInsDoc")

                </div>
            </div>
            <div class="dvestimatedp7">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3SourceMonthlyAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome3SourceMonthlyAmount", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divproofofincomep7">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3ProofDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "PREVIOUS_C1_PIncome3ProofDoc")

                </div>
            </div>
            <div class="divAnnualgrossincomep7">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome3SourceAnnualAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome3SourceAnnualAmount", new { @class = "form-control" })
                    </div>
                </div>
            </div>



        </div>
    </div>

    <!--Partner Another source of income section P3 -->
    <div class="Anotherpart4">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4HasIncome_item", new { @class = "control-label" })
                    </div>
                    @Helpers.YesNoRadioButtons(Model, "C1_PIncome4HasIncome")
                </div>
                <script type="text/javascript">
                    $(function () {
                        function Showorhidepart4() {
                            if ($("#C1_PIncome4HasIncome_YesOption").prop("checked") === true) {
                                // show section
                                $(".Partnerp4").show();
                            }
                            else {
                                // hide section
                                $(".Partnerp4").hide();
                            }
                        }

                        Showorhidepart4();

                        $("#C1_PIncome4HasIncome_YesOption").change(function (e) {
                            Showorhidepart4();
                        }).change();
                        $("#C1_PIncome4HasIncome_NoOption").change(function (e) {
                            Showorhidepart4();
                        }).change();
                    });
                </script>
            </div>
        </div>
    </div>
    <!--Partner income section 4 of 4-->

    <div class="Partnerp4">
        @*@<span class="label label-danger" style="font-size:15px;">Partner Income (4 of 4)</span></p>*@
        <span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-11_sub"]</span></p>
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousPartnersec4" class="btn" type="button"></button></div>
                <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4Recipient_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "C1_PIncome4Recipient", new { @class = "form-control" })
                    </div>
                </div>
                <hr />

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4SourceType_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.DropDownList(Model, "C1_PIncome4SourceType_item", "C1_PIncome4SourceType", true)
                    </div>
                </div>
                <script type="text/javascript">
                    $(function () {
                        $(".divotherincomep8").hide();
                        $(".divpaystubfor3currentp8").hide();
                        $(".divSelfEmploymentAffidavitp8").hide();
                        $(".divSSISSDIp8").hide();
                        $(".divUnemploymentp8").hide();
                        $(".dvestimatedp8").hide();
                        $(".divproofofincomep8").hide();
                        $(".divAnnualgrossincomep8").hide();

                        $("#C1_PIncome4SourceType").change(function () {
                            var selectedText = $(this).find("option:selected").text();
                            var selectedValue = $(this).val();
                            // alert("Selected Text: " + selectedText + " Value: " + selectedValue);
                            if (selectedText == 'Other (please describe below)') {
                                $(".divotherincomep8").show();
                                $(".divpaystubfor3currentp8").hide();
                                $(".divSelfEmploymentAffidavitp8").hide();
                                $(".divSSISSDIp8").hide();
                                $(".divUnemploymentp8").hide();
                                $(".dvestimatedp8").show();
                                $(".divproofofincomep8").hide();
                                $(".divAnnualgrossincomep8").show();

                            }
                            else if (selectedText == 'Employment') {
                                $(".divotherincomep8").hide();
                                $(".divpaystubfor3currentp8").show();
                                $(".divSelfEmploymentAffidavitp8").hide();
                                $(".divSSISSDIp8").hide();
                                $(".divUnemploymentp8").hide();
                                $(".dvestimatedp8").hide();
                                $(".divproofofincomep8").hide();
                                $(".divAnnualgrossincomep8").hide();

                            }
                            else if (selectedText == 'Self-employment') {
                                $(".divotherincomep8").hide();
                                $(".divpaystubfor3currentp8").hide();
                                $(".divSelfEmploymentAffidavitp8").show();
                                $(".divSSISSDIp8").hide();
                                $(".divUnemploymentp8").hide();
                                $(".dvestimatedp8").hide();
                                $(".divproofofincomep8").hide();
                                $(".divAnnualgrossincomep8").hide();

                            }
                            else if (selectedText == 'Supplemental Social Security Income (SSI)' || selectedText == 'Social Security Disability Insurance (SSDI)') {
                                $(".divotherincomep8").hide();
                                $(".divpaystubfor3currentp8").hide();
                                $(".divSelfEmploymentAffidavitp8").hide();
                                $(".divSSISSDIp8").show();
                                $(".divUnemploymentp8").hide();
                                $(".dvestimatedp8").show();
                                $(".divproofofincomep8").hide();
                                $(".divAnnualgrossincomep8").show();

                            }
                            else if (selectedText == 'State Disability Insurance (SDI)' || selectedText == 'Private Disability' || selectedText == 'Social Security Retirement' || selectedText == 'Private/Employer Based Retirement' || selectedText == 'Workers compensation' || selectedText == 'Investment or Interest Income' || selectedText == 'Veterans Administration (VA) benefit' || selectedText == 'Alimony' || selectedText == 'Child support') {
                                $(".divotherincomep8").hide();
                                $(".divpaystubfor3currentp8").hide();
                                $(".divSelfEmploymentAffidavitp8").hide();
                                $(".divSSISSDIp8").hide();
                                $(".divUnemploymentp8").hide();
                                $(".dvestimatedp8").show();
                                $(".divproofofincomep8").show();
                                $(".divAnnualgrossincomep8").show();

                            }
                            else if (selectedText == 'Foreign Earned Income') {
                                $(".divotherincomep8").hide();
                                $(".divpaystubfor3currentp8").hide();
                                $(".divSelfEmploymentAffidavitp8").hide();
                                $(".divSSISSDIp8").hide();
                                $(".divUnemploymentp8").hide();
                                $(".dvestimatedp8").show();
                                $(".divproofofincomep8").hide();
                                $(".divAnnualgrossincomep8").show();

                            }
                            else if (selectedText == 'Unemployment Insurance (UI)') {
                                $(".divotherincomep8").hide();
                                $(".divpaystubfor3currentp8").hide();
                                $(".divSelfEmploymentAffidavitp8").hide();
                                $(".divSSISSDIp8").hide();
                                $(".divUnemploymentp8").show();
                                $(".dvestimatedp8").show();
                                $(".divproofofincomep8").hide();
                                $(".divAnnualgrossincomep8").show();

                            }
                            else {
                                $(".divotherincomep8").hide();
                                $(".divpaystubfor3currentp8").hide();
                                $(".divSelfEmploymentAffidavitp8").hide();
                                $(".divSSISSDIp8").hide();
                                $(".divUnemploymentp8").hide();
                                $(".dvestimatedp8").hide();
                                $(".divproofofincomep8").hide();
                                $(".divAnnualgrossincomep8").hide();

                            }

                        }).change();
                    });

                </script>
                <div class="divotherincomep8">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4SourceTypeOther_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome4SourceTypeOther", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divpaystubfor3currentp8">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4EmploymentDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome4EmploymentDoc")

                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4EmplMonthIncome_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome4EmplMonthIncome", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4EmplEstAGI_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_PIncome4EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_PIncome4EmplAgreeYN_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_PIncome4EmplAgreeYN")
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Helpers.LabelSpan(Model, "C1_PIncome4EmplSelfAGI_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-4">
                                @Helpers.TextInput(Model, "C1_PIncome4EmplSelfAGI", new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_PIncome4EmplCertSelfAGI")
                                </div>
                            </div>
                        </div>
                        <hr />*@
                </div>
                <div class="divSelfEmploymentAffidavitp8">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmploymentDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome4SelfEmploymentDoc")

                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            <strong>Input your 3 current, consecutive months of self-employment income</strong>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmpMonthly1_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome4SelfEmpMonthly1", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmpMonthly2_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome4SelfEmpMonthly2", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmpMonthly3_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome4SelfEmpMonthly3", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmpAGIEstimate_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Helpers.TextInput(Model, "C1_PIncome4SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <hr />
                    @*<div class="form-group">
                            <div class="col-md-5">
                                @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmpAGIAgree_item", new { @class = "control-label" })
                            </div>
                            @Helpers.YesNoRadioButtons(Model, "C1_PIncome4SelfEmpAGIAgree")
                        </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-6">
                                @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmpAGISelfEstimate_item", new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">
                                @Helpers.TextInput(Model, "C1_PIncome4SelfEmpAGISelfEstimate", new { @class = "form-control" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group" style="margin-left:15px">
                            <div class="col-md-7">
                                <div class="checkbox checkbox-info">
                                    @Helpers.LabeledCheckboxInput(Model, "C1_PIncome4SelfEmpAGICertify")
                                </div>
                            </div>
                        </div>
                        <hr />*@
                </div>
                <div class="divSSISSDIp8">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4SSIDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome4SSIDoc")

                    </div>
                    <hr />
                </div>
                <div class="divUnemploymentp8">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4UnempInsDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome4UnempInsDoc")

                    </div>
                </div>
                <div class="dvestimatedp8">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4SourceMonthlyAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome4SourceMonthlyAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="divproofofincomep8">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4ProofDoc_item", new { @class = "control-label" })
                        </div>

                        @Helpers.FileUpload(Model, "C1_PIncome4ProofDoc")

                    </div>

                </div>
                <hr />
                <div class="divAnnualgrossincomep8">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Helpers.LabelSpan(Model, "C1_PIncome4SourceAnnualAmount_item", new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">

                            <div class="input-group">

                                <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                                @Helpers.TextInput(Model, "C1_PIncome4SourceAnnualAmount", new { @class = "form-control cacurrency", maxlength = "9" })
                            </div>


                            <span class="icon"></span><label class="lbl-error error"></label>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Previous Partner income section 4 of 4-->
    <div class="panel panel-default previous-response" id="PreviousPartnersec4">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PIncome4Recipient_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome4Recipient", new { @class = "form-control" })
                </div>
            </div>
            <hr />

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PIncome4SourceType_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.DropDownList(Model, "C1_PIncome4SourceType_item", "PREVIOUS_C1_PIncome4SourceType", true)
                </div>
            </div>

            <div class="divotherincomep8">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4SourceTypeOther_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome4SourceTypeOther", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divpaystubfor3currentp8">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4EmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome4EmploymentDoc")

                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4EmplMonthIncome_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome4EmplMonthIncome", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4EmplEstAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome4EmplEstAGI", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

            </div>
            <div class="divSelfEmploymentAffidavitp8">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmploymentDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome4SelfEmploymentDoc")

                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        <strong>Input your 3 current, consecutive months of self-employment income</strong>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmpMonthly1_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome4SelfEmpMonthly1", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmpMonthly2_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome4SelfEmpMonthly2", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmpMonthly3_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome4SelfEmpMonthly3", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4SelfEmpAGIEstimate_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome4SelfEmpAGIEstimate", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />

            </div>
            <div class="divSSISSDIp8">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4SSIDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome4SSIDoc")

                </div>
                <hr />
            </div>
            <div class="divUnemploymentp8">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4UnempInsDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome4UnempInsDoc")

                </div>
            </div>
            <div class="dvestimatedp8">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4SourceMonthlyAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome4SourceMonthlyAmount", new { @class = "form-control" })
                    </div>
                </div>
                <hr />
            </div>
            <div class="divproofofincomep8">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4ProofDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_PIncome4ProofDoc")

                </div>

            </div>
            <hr />
            <div class="divAnnualgrossincomep8">
                <div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_PIncome4SourceAnnualAmount_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PIncome4SourceAnnualAmount", new { @class = "form-control" })
                    </div>
                </div>
            </div>

        </div>

    </div>
</div>


<!-- H12-13.Total Income -->
<div class="divH12andH13">
    <span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-12_sub"]</span></p>
    @*@<span class="label label-danger" style="font-size:15px;">Total Income</span></p>*@
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousTotalinc" class="btn" type="button"></button></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_DependentAGI_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">

                    <div class="input-group">

                        <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                        @Helpers.TextInput(Model, "C1_DependentAGI", new { @class = "form-control cacurrency", maxlength = "9" })
                    </div>


                    <span class="icon"></span><label class="lbl-error error"></label>
                </div>
            </div>
            <hr />

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MemberIncomeAnnualAllSources_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">

                    <div class="input-group">

                        <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                        @Helpers.TextInput(Model, "C1_MemberIncomeAnnualAllSources", new { @class = "form-control", @readonly = "readonly" })
                    </div>


                    <span class="icon"></span><label class="lbl-error error"></label>
                </div>
            </div>
            <hr />

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PartnerIncomeAnnualAllSources_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">

                    <div class="input-group">

                        <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                        @Helpers.TextInput(Model, "C1_PartnerIncomeAnnualAllSources", new { @class = "form-control", @readonly = "readonly" })
                    </div>


                    <span class="icon"></span><label class="lbl-error error"></label>
                </div>
            </div>
            <hr />



            @*<div class="form-group">
                    <div class="col-md-8">
                        @Helpers.LabelSpan(Model, "C1_PartnerIncomeDeductions_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Helpers.TextInput(Model, "C1_PartnerIncomeDeductions", new { @class = "form-control" })
                    </div>
                </div>
                <hr />*@

            @*<div class="form-group">
                    <div class="col-md-4">
                        @Helpers.LabelSpan(Model, "C1_PartnerAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Helpers.TextInput(Model, "C1_PartnerAGI", new { @class = "form-control" })
                    </div>
                </div>*@

        </div>
    </div>

    <!-- PREVIOUS Total Income -->
    <div class="panel panel-default previous-response" id="PreviousTotalinc">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_DependentAGI_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_DependentAGI", new { @class = "form-control" })
                </div>
            </div>
            <hr />

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MemberIncomeAnnualAllSources_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MemberIncomeAnnualAllSources", new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <hr />


            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_PartnerIncomeAnnualAllSources_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_PartnerIncomeAnnualAllSources", new { @class = "form-control" })
                </div>
            </div>
            <hr />


            @*<hr />
                <div class="form-group">
                    <div class="col-md-8">
                        @Helpers.LabelSpan(Model, "C1_PartnerIncomeDeductions_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PartnerIncomeDeductions", new { @class = "form-control" })
                    </div>
                </div>
                <hr />

                <div class="form-group">
                    <div class="col-md-4">
                        @Helpers.LabelSpan(Model, "C1_PartnerAGI_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_PartnerAGI", new { @class = "form-control" })
                    </div>
                </div>*@

        </div>
    </div>

    <!--Calculations section -->
    <span class="label label-danger" style="font-size:15px;">@Model.sctTitles["CA-ADAP-Household-13_sub"]</span></p>
    @*@<span class="label label-danger" style="font-size:15px;">Household size, FPL, and co-payment calculations</span></p>*@
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><button data-prevdiv="PreviousRe" class="btn" type="button"></button></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal" data-label="h1. @Model.sctTitles["CA-ADAP-Household"]"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MemberCalcHouseholdSize_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "C1_MemberCalcHouseholdSize", new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MemberCalcHouseholdIncome_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">

                    <div class="input-group">

                        <span class="input-group-addon"><span class="glyphicon glyphicon-usd"></span></span>
                        @Helpers.TextInput(Model, "C1_MemberCalcHouseholdIncome", new { @class = "form-control", @readonly = "readonly" })
                    </div>


                    <span class="icon"></span><label class="lbl-error error"></label>
                </div>
            </div>
            <hr />
            <div class="form-group" style="display:none;">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MemberCalcPovertyLevel_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "C1_MemberCalcPovertyLevel", new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            @*<hr />*@
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_FPLPercentage_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "C1_FPLPercentage", new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>

            @*<hr />
                <div class="form-group">
                    <div class="col-md-5">
                        @Helpers.LabelSpan(Model, "C1_MemberCalcPovertyLevelCopayDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "C1_MemberCalcPovertyLevelCopayDoc")

                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-7">
                        @Helpers.LabelSpan(Model, "C1_MemberCalcPovertyLevelCopayAmountMonthly_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Helpers.TextInput(Model, "C1_MemberCalcPovertyLevelCopayAmountMonthly", new { @class = "form-control" })
                    </div>
                </div>*@

        </div>
    </div>

    <!--PREVIOUS Calculations section -->
    <div class="panel panel-default previous-response" id="PreviousRe">
        <div class="panel-body">
            <div class="pull-right prevAppBtn"><a href="#" class="btn btn-success btn-xs active" id="hsName" role="button">&nbsp;</a></div>
            <div class="pull-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CmntModal"><span class="glyphicon glyphicon-comment"></span></button></div>
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MemberCalcHouseholdSize_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MemberCalcHouseholdSize", new { @class = "form-control" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_MemberCalcHouseholdIncome_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_MemberCalcHouseholdIncome", new { @class = "form-control" })
                </div>
            </div>
            <hr />
            @*<div class="form-group">
                    <div class="col-md-6">
                        @Helpers.LabelSpan(Model, "C1_MemberCalcPovertyLevel_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MemberCalcPovertyLevel", new { @class = "form-control" })
                    </div>
                </div>*@

            <div class="form-group">
                <div class="col-md-6">
                    @Helpers.LabelSpan(Model, "C1_FPLPercentage_item", new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Helpers.TextInput(Model, "PREVIOUS_C1_FPLPercentage", new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>

            @*<hr />
                <div class="form-group">
                    <div class="col-md-5">
                        @Helpers.LabelSpan(Model, "C1_MemberCalcPovertyLevelCopayDoc_item", new { @class = "control-label" })
                    </div>

                    @Helpers.FileUpload(Model, "PREVIOUS_C1_MemberCalcPovertyLevelCopayDoc")

                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-7">
                        @Helpers.LabelSpan(Model, "C1_MemberCalcPovertyLevelCopayAmountMonthly_item", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Helpers.TextInput(Model, "PREVIOUS_C1_MemberCalcPovertyLevelCopayAmountMonthly", new { @class = "form-control" })
                    </div>
                </div>*@


        </div>
    </div>

</div>

<!-- Comments Modal -->@Html.Partial("_AdapCommentModal", Model)
